{
  "id": "e57892658ec2a51aa65423788f619b1c",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/AccessControl.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Pausable} from \"../../../utils/Pausable.sol\";\n\n/**\n * @dev ERC-20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\n        super._update(from, to, value);\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
      },
      "contracts/CampusCredit.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.26;\n\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport {ERC20Burnable} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport {ERC20Pausable} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\";\nimport {AccessControl} from \"@openzeppelin/contracts/access/AccessControl.sol\";\n\n/**\n * @title CampusCredit\n * @dev ERC-20 token untuk transaksi dalam kampus\n * Use cases:\n * - Pembayaran di kafetaria\n * - Biaya printing dan fotokopi\n * - Laundry service\n * - Peminjaman equipment\n */\ncontract CampusCredit is ERC20, ERC20Burnable, ERC20Pausable, AccessControl {\n    // TODO: Define role constants\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n    // Additional features untuk kampus\n    mapping(address => uint256) public dailySpendingLimit;\n    mapping(address => uint256) public spentToday;\n    mapping(address => uint256) public lastSpendingReset;\n\n    // Merchant whitelist\n    mapping(address => bool) public isMerchant;\n    mapping(address => string) public merchantName;\n\n    // Events\n    event TransferWithCashback(\n        address indexed from,\n        address indexed merchant,\n        uint256 amount,\n        uint256 cashback\n    );\n\n    constructor() ERC20(\"Campus Credit\", \"CREDIT\") {\n        // TODO: Setup roles\n        // Hint:\n        // 1. Grant DEFAULT_ADMIN_ROLE ke msg.sender\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        // 2. Grant PAUSER_ROLE ke msg.sender\n        _grantRole(PAUSER_ROLE, msg.sender);\n        // 3. Grant MINTER_ROLE ke msg.sender\n        _grantRole(MINTER_ROLE, msg.sender);\n        // 4. Consider initial mint untuk treasury\n        _mint(msg.sender, 1_000_000 * 10 ** decimals());\n    }\n\n    /**\n     * @dev Pause all token transfers\n     * Use case: Emergency atau maintenance\n     */\n    function pause() public {\n        // TODO: Implement dengan role check\n        // Only PAUSER_ROLE can pause\n        require(hasRole(PAUSER_ROLE, msg.sender), \"Caller is not a paus00r\");\n        _pause();\n    }\n\n    function unpause() public {\n        // TODO: Implement unpause\n        require(hasRole(PAUSER_ROLE, msg.sender), \"Caller is not a paus00r\");\n        _unpause();\n    }\n\n    /**\n     * @dev Mint new tokens\n     * Use case: Top-up saldo mahasiswa\n     */\n    function mint(address to, uint256 amount) public {\n        // TODO: Implement dengan role check\n        // Only MINTER_ROLE can mint\n        // Consider adding minting limits\n        require(hasRole(MINTER_ROLE, msg.sender), \"Caller is not a minter\");\n        require(amount > 0, \"Amount must be greater than zero\");\n        require(to != address(0), \"Cannot mint to zero address\");\n        require(\n            balanceOf(to) + amount <= 1_000_000 * 10 ** decimals(),\n            \"Minting limit exceeded\"\n        );\n\n        _mint(to, amount);\n    }\n\n    /**\n     * @dev Register merchant\n     * Use case: Kafetaria, toko buku, laundry\n     */\n    function registerMerchant(\n        address merchant,\n        string memory name\n    ) public onlyRole(DEFAULT_ADMIN_ROLE) {\n        // TODO: Register merchant untuk accept payments\n        require(merchant != address(0), \"Invalid merchant address\");\n        require(bytes(name).length > 0, \"Merchant name cannot be empty\");\n        require(!isMerchant[merchant], \"Merchant already registered\");\n\n        isMerchant[merchant] = true;\n        merchantName[merchant] = name;\n    }\n\n    /**\n     * @dev Set daily spending limit untuk mahasiswa\n     * Use case: Parental control atau self-control\n     */\n    function setDailyLimit(\n        address student,\n        uint256 limit\n    ) public onlyRole(DEFAULT_ADMIN_ROLE) {\n        // TODO: Set spending limit\n        require(student != address(0), \"Invalid student address\");\n        require(limit > 0, \"Limit must be greater than zero\");\n\n        dailySpendingLimit[student] = limit;\n        lastSpendingReset[student] = block.timestamp;\n        spentToday[student] = 0;\n    }\n\n    /**\n     * @dev Transfer dengan spending limit check\n     */\n    function transferWithLimit(address to, uint256 amount) public {\n        // TODO: Check daily limit before transfer\n        // Reset limit if new day\n        // Update spent amount\n        // Then do normal transfer\n        require(to != address(0), \"Cannot transfer to zero address\");\n        require(amount > 0, \"Amount must be greater than zero\");\n        require(balanceOf(msg.sender) >= amount, \"Insufficient balance\");\n\n        require(dailySpendingLimit[msg.sender] > 0, \"Daily limit not set\");\n\n        if (block.timestamp - lastSpendingReset[msg.sender] >= 1 days) {\n            spentToday[msg.sender] = 0;\n            lastSpendingReset[msg.sender] = block.timestamp;\n        }\n\n        require(\n            spentToday[msg.sender] + amount <= dailySpendingLimit[msg.sender],\n            \"Daily spending limit exceeded\"\n        );\n\n        spentToday[msg.sender] += amount;\n        _transfer(msg.sender, to, amount);\n    }\n\n    /**\n     * @dev Override _beforeTokenTransfer untuk add pause functionality\n     */\n    /**\n        function _beforeTokenTransfer(\n            address from,\n            address to,\n            uint256 amount\n        ) internal override(ERC20) {\n            // TODO: Add pause check\n            super._beforeTokenTransfer(from, to, amount);\n            require(!paused(), \"Token transfers paused\");\n        }\n      */\n    function _update(\n        address from,\n        address to,\n        uint256 value\n    ) internal override(ERC20, ERC20Pausable) {\n        require(!paused(), \"Token transfers paused\");\n\n        super._update(from, to, value);\n    }\n\n    /**\n     * @dev Cashback mechanism untuk encourage usage\n     */\n    uint256 public cashbackPercentage = 2; // 2%\n\n    function transferWithCashback(address merchant, uint256 amount) public {\n        // TODO: Transfer to merchant dengan cashback ke sender\n        // Calculate cashback\n        // Transfer main amount\n        // Mint cashback to sender\n        require(isMerchant[merchant], \"Not a registered merchant\");\n        require(amount > 0, \"Amount must be greater than zero\");\n        require(\n            balanceOf(msg.sender) >= amount,\n            \"Insufficient Campus Credit balance\"\n        );\n        require(\n            dailySpendingLimit[msg.sender] > 0,\n            \"Daily limit not set for sender\"\n        );\n\n        if (block.timestamp - lastSpendingReset[msg.sender] >= 1 days) {\n            spentToday[msg.sender] = 0;\n            lastSpendingReset[msg.sender] = block.timestamp;\n        }\n\n        require(\n            spentToday[msg.sender] + amount <= dailySpendingLimit[msg.sender],\n            \"Daily spending limit exceeded\"\n        );\n\n        spentToday[msg.sender] += amount;\n        _transfer(msg.sender, merchant, amount);\n\n        uint256 cashback = (amount * cashbackPercentage) / 100;\n        _mint(msg.sender, cashback);\n\n        emit TransferWithCashback(msg.sender, merchant, amount, cashback);\n    }\n}\n"
      }
    },
    "settings": {
      "metadata": {
        "bytecodeHash": "none",
        "useLiteralContent": true
      },
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/access/AccessControl.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
          "exportedSymbols": {
            "AccessControl": [
              295
            ],
            "Context": [
              1244
            ],
            "ERC165": [
              1376
            ],
            "IAccessControl": [
              378
            ]
          },
          "id": 296,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "108:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
              "file": "./IAccessControl.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 296,
              "sourceUnit": 379,
              "src": "134:52:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "IAccessControl",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 378,
                    "src": "142:14:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 5,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 296,
              "sourceUnit": 1245,
              "src": "187:45:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1244,
                    "src": "195:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
              "file": "../utils/introspection/ERC165.sol",
              "id": 7,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 296,
              "sourceUnit": 1377,
              "src": "233:57:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 6,
                    "name": "ERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1376,
                    "src": "241:6:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 9,
                    "name": "Context",
                    "nameLocations": [
                      "1988:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1244,
                    "src": "1988:7:0"
                  },
                  "id": 10,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1988:7:0"
                },
                {
                  "baseName": {
                    "id": 11,
                    "name": "IAccessControl",
                    "nameLocations": [
                      "1997:14:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 378,
                    "src": "1997:14:0"
                  },
                  "id": 12,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1997:14:0"
                },
                {
                  "baseName": {
                    "id": 13,
                    "name": "ERC165",
                    "nameLocations": [
                      "2013:6:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1376,
                    "src": "2013:6:0"
                  },
                  "id": 14,
                  "nodeType": "InheritanceSpecifier",
                  "src": "2013:6:0"
                }
              ],
              "canonicalName": "AccessControl",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 8,
                "nodeType": "StructuredDocumentation",
                "src": "292:1660:0",
                "text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
              },
              "fullyImplemented": true,
              "id": 295,
              "linearizedBaseContracts": [
                295,
                1376,
                1388,
                378,
                1244
              ],
              "name": "AccessControl",
              "nameLocation": "1971:13:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "AccessControl.RoleData",
                  "id": 21,
                  "members": [
                    {
                      "constant": false,
                      "id": 18,
                      "mutability": "mutable",
                      "name": "hasRole",
                      "nameLocation": "2085:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 21,
                      "src": "2052:40:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      },
                      "typeName": {
                        "id": 17,
                        "keyName": "account",
                        "keyNameLocation": "2068:7:0",
                        "keyType": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2060:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "2052:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        },
                        "valueName": "",
                        "valueNameLocation": "-1:-1:-1",
                        "valueType": {
                          "id": 16,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2079:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 20,
                      "mutability": "mutable",
                      "name": "adminRole",
                      "nameLocation": "2110:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 21,
                      "src": "2102:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 19,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2102:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "RoleData",
                  "nameLocation": "2033:8:0",
                  "nodeType": "StructDefinition",
                  "scope": 295,
                  "src": "2026:100:0",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 26,
                  "mutability": "mutable",
                  "name": "_roles",
                  "nameLocation": "2174:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "2132:48:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                    "typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
                  },
                  "typeName": {
                    "id": 25,
                    "keyName": "role",
                    "keyNameLocation": "2148:4:0",
                    "keyType": {
                      "id": 22,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2140:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2132:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                      "typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 24,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 23,
                        "name": "RoleData",
                        "nameLocations": [
                          "2156:8:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 21,
                        "src": "2156:8:0"
                      },
                      "referencedDeclaration": 21,
                      "src": "2156:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
                        "typeString": "struct AccessControl.RoleData"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "functionSelector": "a217fddf",
                  "id": 29,
                  "mutability": "constant",
                  "name": "DEFAULT_ADMIN_ROLE",
                  "nameLocation": "2211:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "2187:49:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2187:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "30783030",
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2232:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0x00"
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 39,
                    "nodeType": "Block",
                    "src": "2454:44:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 35,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "2475:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 34,
                            "name": "_checkRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              93,
                              114
                            ],
                            "referencedDeclaration": 93,
                            "src": "2464:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) view"
                            }
                          },
                          "id": 36,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2464:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37,
                        "nodeType": "ExpressionStatement",
                        "src": "2464:16:0"
                      },
                      {
                        "id": 38,
                        "nodeType": "PlaceholderStatement",
                        "src": "2490:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 30,
                    "nodeType": "StructuredDocumentation",
                    "src": "2243:174:0",
                    "text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
                  },
                  "id": 40,
                  "name": "onlyRole",
                  "nameLocation": "2431:8:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 33,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 32,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2448:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 40,
                        "src": "2440:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 31,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2440:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2439:14:0"
                  },
                  "src": "2422:76:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    1375
                  ],
                  "body": {
                    "id": 61,
                    "nodeType": "Block",
                    "src": "2656:111:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "id": 54,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 49,
                              "name": "interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43,
                              "src": "2673:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 51,
                                    "name": "IAccessControl",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 378,
                                    "src": "2693:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
                                      "typeString": "type(contract IAccessControl)"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
                                      "typeString": "type(contract IAccessControl)"
                                    }
                                  ],
                                  "id": 50,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "2688:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 52,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2688:20:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
                                  "typeString": "type(contract IAccessControl)"
                                }
                              },
                              "id": 53,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2709:11:0",
                              "memberName": "interfaceId",
                              "nodeType": "MemberAccess",
                              "src": "2688:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "src": "2673:47:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 57,
                                "name": "interfaceId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43,
                                "src": "2748:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              ],
                              "expression": {
                                "id": 55,
                                "name": "super",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -25,
                                "src": "2724:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
                                  "typeString": "type(contract super AccessControl)"
                                }
                              },
                              "id": 56,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2730:17:0",
                              "memberName": "supportsInterface",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1375,
                              "src": "2724:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                                "typeString": "function (bytes4) view returns (bool)"
                              }
                            },
                            "id": 58,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2724:36:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2673:87:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 48,
                        "id": 60,
                        "nodeType": "Return",
                        "src": "2666:94:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 41,
                    "nodeType": "StructuredDocumentation",
                    "src": "2504:56:0",
                    "text": " @dev See {IERC165-supportsInterface}."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 62,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "2574:17:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 45,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2632:8:0"
                  },
                  "parameters": {
                    "id": 44,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 43,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "2599:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 62,
                        "src": "2592:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 42,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "2592:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2591:20:0"
                  },
                  "returnParameters": {
                    "id": 48,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 47,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 62,
                        "src": "2650:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 46,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2650:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2649:6:0"
                  },
                  "scope": 295,
                  "src": "2565:202:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    345
                  ],
                  "body": {
                    "id": 79,
                    "nodeType": "Block",
                    "src": "2937:53:0",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 72,
                                "name": "_roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26,
                                "src": "2954:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                  "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                }
                              },
                              "id": 74,
                              "indexExpression": {
                                "id": 73,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65,
                                "src": "2961:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2954:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RoleData_$21_storage",
                                "typeString": "struct AccessControl.RoleData storage ref"
                              }
                            },
                            "id": 75,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2967:7:0",
                            "memberName": "hasRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18,
                            "src": "2954:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 77,
                          "indexExpression": {
                            "id": 76,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67,
                            "src": "2975:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2954:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 71,
                        "id": 78,
                        "nodeType": "Return",
                        "src": "2947:36:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 63,
                    "nodeType": "StructuredDocumentation",
                    "src": "2773:76:0",
                    "text": " @dev Returns `true` if `account` has been granted `role`."
                  },
                  "functionSelector": "91d14854",
                  "id": 80,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hasRole",
                  "nameLocation": "2863:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 68,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 65,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2879:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "2871:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 64,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2871:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 67,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2893:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "2885:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 66,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2885:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2870:31:0"
                  },
                  "returnParameters": {
                    "id": 71,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 70,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "2931:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 69,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2931:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2930:6:0"
                  },
                  "scope": 295,
                  "src": "2854:136:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 92,
                    "nodeType": "Block",
                    "src": "3255:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83,
                              "src": "3276:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 88,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1226,
                                "src": "3282:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 89,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3282:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 86,
                            "name": "_checkRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              93,
                              114
                            ],
                            "referencedDeclaration": 114,
                            "src": "3265:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) view"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3265:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 91,
                        "nodeType": "ExpressionStatement",
                        "src": "3265:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 81,
                    "nodeType": "StructuredDocumentation",
                    "src": "2996:198:0",
                    "text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
                  },
                  "id": 93,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkRole",
                  "nameLocation": "3208:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 84,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 83,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "3227:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 93,
                        "src": "3219:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 82,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3219:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3218:14:0"
                  },
                  "returnParameters": {
                    "id": 85,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3255:0:0"
                  },
                  "scope": 295,
                  "src": "3199:103:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 113,
                    "nodeType": "Block",
                    "src": "3505:124:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3519:23:0",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 102,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 96,
                                "src": "3528:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 103,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 98,
                                "src": "3534:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 101,
                              "name": "hasRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "3520:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                "typeString": "function (bytes32,address) view returns (bool)"
                              }
                            },
                            "id": 104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3520:22:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 112,
                        "nodeType": "IfStatement",
                        "src": "3515:108:0",
                        "trueBody": {
                          "id": 111,
                          "nodeType": "Block",
                          "src": "3544:79:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 107,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 98,
                                    "src": "3598:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 108,
                                    "name": "role",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 96,
                                    "src": "3607:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 106,
                                  "name": "AccessControlUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 305,
                                  "src": "3565:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
                                    "typeString": "function (address,bytes32) pure returns (error)"
                                  }
                                },
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3565:47:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 110,
                              "nodeType": "RevertStatement",
                              "src": "3558:54:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 94,
                    "nodeType": "StructuredDocumentation",
                    "src": "3308:119:0",
                    "text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
                  },
                  "id": 114,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkRole",
                  "nameLocation": "3441:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 99,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 96,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "3460:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 114,
                        "src": "3452:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 95,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3452:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 98,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "3474:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 114,
                        "src": "3466:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 97,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3466:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3451:31:0"
                  },
                  "returnParameters": {
                    "id": 100,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3505:0:0"
                  },
                  "scope": 295,
                  "src": "3432:197:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    353
                  ],
                  "body": {
                    "id": 127,
                    "nodeType": "Block",
                    "src": "3884:46:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 122,
                              "name": "_roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "3901:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                              }
                            },
                            "id": 124,
                            "indexExpression": {
                              "id": 123,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 117,
                              "src": "3908:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3901:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RoleData_$21_storage",
                              "typeString": "struct AccessControl.RoleData storage ref"
                            }
                          },
                          "id": 125,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3914:9:0",
                          "memberName": "adminRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20,
                          "src": "3901:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 121,
                        "id": 126,
                        "nodeType": "Return",
                        "src": "3894:29:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 115,
                    "nodeType": "StructuredDocumentation",
                    "src": "3635:170:0",
                    "text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
                  },
                  "functionSelector": "248a9ca3",
                  "id": 128,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRoleAdmin",
                  "nameLocation": "3819:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 118,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 117,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "3840:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 128,
                        "src": "3832:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 116,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3832:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3831:14:0"
                  },
                  "returnParameters": {
                    "id": 121,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 120,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 128,
                        "src": "3875:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 119,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3875:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3874:9:0"
                  },
                  "scope": 295,
                  "src": "3810:120:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    361
                  ],
                  "body": {
                    "id": 146,
                    "nodeType": "Block",
                    "src": "4320:42:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 142,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 131,
                              "src": "4341:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 143,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "4347:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 141,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "4330:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4330:25:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 145,
                        "nodeType": "ExpressionStatement",
                        "src": "4330:25:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 129,
                    "nodeType": "StructuredDocumentation",
                    "src": "3936:285:0",
                    "text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
                  },
                  "functionSelector": "2f2ff15d",
                  "id": 147,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 137,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 131,
                              "src": "4313:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 136,
                            "name": "getRoleAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "4300:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32) view returns (bytes32)"
                            }
                          },
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4300:18:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 139,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 135,
                        "name": "onlyRole",
                        "nameLocations": [
                          "4291:8:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "4291:8:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4291:28:0"
                    }
                  ],
                  "name": "grantRole",
                  "nameLocation": "4235:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 134,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 131,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "4253:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 147,
                        "src": "4245:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 130,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4245:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 133,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "4267:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 147,
                        "src": "4259:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 132,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4259:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4244:31:0"
                  },
                  "returnParameters": {
                    "id": 140,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4320:0:0"
                  },
                  "scope": 295,
                  "src": "4226:136:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    369
                  ],
                  "body": {
                    "id": 165,
                    "nodeType": "Block",
                    "src": "4737:43:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 161,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 150,
                              "src": "4759:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 162,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "4765:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 160,
                            "name": "_revokeRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 294,
                            "src": "4747:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4747:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 164,
                        "nodeType": "ExpressionStatement",
                        "src": "4747:26:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 148,
                    "nodeType": "StructuredDocumentation",
                    "src": "4368:269:0",
                    "text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
                  },
                  "functionSelector": "d547741f",
                  "id": 166,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 156,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 150,
                              "src": "4730:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 155,
                            "name": "getRoleAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "4717:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32) view returns (bytes32)"
                            }
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4717:18:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 158,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 154,
                        "name": "onlyRole",
                        "nameLocations": [
                          "4708:8:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "4708:8:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4708:28:0"
                    }
                  ],
                  "name": "revokeRole",
                  "nameLocation": "4651:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 153,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 150,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "4670:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 166,
                        "src": "4662:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 149,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4662:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 152,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "4684:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 166,
                        "src": "4676:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 151,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4676:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4661:31:0"
                  },
                  "returnParameters": {
                    "id": 159,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4737:0:0"
                  },
                  "scope": 295,
                  "src": "4642:138:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    377
                  ],
                  "body": {
                    "id": 188,
                    "nodeType": "Block",
                    "src": "5407:166:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 174,
                            "name": "callerConfirmation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "5421:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 175,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1226,
                              "src": "5443:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5443:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5421:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 182,
                        "nodeType": "IfStatement",
                        "src": "5417:102:0",
                        "trueBody": {
                          "id": 181,
                          "nodeType": "Block",
                          "src": "5457:62:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 178,
                                  "name": "AccessControlBadConfirmation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 308,
                                  "src": "5478:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 179,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5478:30:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 180,
                              "nodeType": "RevertStatement",
                              "src": "5471:37:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 184,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 169,
                              "src": "5541:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 185,
                              "name": "callerConfirmation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 171,
                              "src": "5547:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 183,
                            "name": "_revokeRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 294,
                            "src": "5529:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5529:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 187,
                        "nodeType": "ExpressionStatement",
                        "src": "5529:37:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 167,
                    "nodeType": "StructuredDocumentation",
                    "src": "4786:537:0",
                    "text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
                  },
                  "functionSelector": "36568abe",
                  "id": 189,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "renounceRole",
                  "nameLocation": "5337:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 169,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "5358:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 189,
                        "src": "5350:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 168,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5350:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 171,
                        "mutability": "mutable",
                        "name": "callerConfirmation",
                        "nameLocation": "5372:18:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 189,
                        "src": "5364:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5364:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5349:42:0"
                  },
                  "returnParameters": {
                    "id": 173,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5407:0:0"
                  },
                  "scope": 295,
                  "src": "5328:245:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 216,
                    "nodeType": "Block",
                    "src": "5771:174:0",
                    "statements": [
                      {
                        "assignments": [
                          198
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 198,
                            "mutability": "mutable",
                            "name": "previousAdminRole",
                            "nameLocation": "5789:17:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 216,
                            "src": "5781:25:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 197,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5781:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 202,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 200,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 192,
                              "src": "5822:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 199,
                            "name": "getRoleAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "5809:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32) view returns (bytes32)"
                            }
                          },
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5809:18:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5781:46:0"
                      },
                      {
                        "expression": {
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 203,
                                "name": "_roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26,
                                "src": "5837:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                  "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                }
                              },
                              "id": 205,
                              "indexExpression": {
                                "id": 204,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 192,
                                "src": "5844:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5837:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RoleData_$21_storage",
                                "typeString": "struct AccessControl.RoleData storage ref"
                              }
                            },
                            "id": 206,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5850:9:0",
                            "memberName": "adminRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20,
                            "src": "5837:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 207,
                            "name": "adminRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 194,
                            "src": "5862:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "5837:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 209,
                        "nodeType": "ExpressionStatement",
                        "src": "5837:34:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 211,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 192,
                              "src": "5903:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 212,
                              "name": "previousAdminRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 198,
                              "src": "5909:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 213,
                              "name": "adminRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 194,
                              "src": "5928:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 210,
                            "name": "RoleAdminChanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 317,
                            "src": "5886:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32,bytes32,bytes32)"
                            }
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5886:52:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 215,
                        "nodeType": "EmitStatement",
                        "src": "5881:57:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 190,
                    "nodeType": "StructuredDocumentation",
                    "src": "5579:114:0",
                    "text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
                  },
                  "id": 217,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setRoleAdmin",
                  "nameLocation": "5707:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 195,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 192,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "5729:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 217,
                        "src": "5721:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 191,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5721:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 194,
                        "mutability": "mutable",
                        "name": "adminRole",
                        "nameLocation": "5743:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 217,
                        "src": "5735:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 193,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5735:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5720:33:0"
                  },
                  "returnParameters": {
                    "id": 196,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5771:0:0"
                  },
                  "scope": 295,
                  "src": "5698:247:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 255,
                    "nodeType": "Block",
                    "src": "6262:233:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "6276:23:0",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 228,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 220,
                                "src": "6285:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 229,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 222,
                                "src": "6291:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 227,
                              "name": "hasRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "6277:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                "typeString": "function (bytes32,address) view returns (bool)"
                              }
                            },
                            "id": 230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6277:22:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 253,
                          "nodeType": "Block",
                          "src": "6452:37:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6473:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 226,
                              "id": 252,
                              "nodeType": "Return",
                              "src": "6466:12:0"
                            }
                          ]
                        },
                        "id": 254,
                        "nodeType": "IfStatement",
                        "src": "6272:217:0",
                        "trueBody": {
                          "id": 250,
                          "nodeType": "Block",
                          "src": "6301:145:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 239,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 232,
                                        "name": "_roles",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 26,
                                        "src": "6315:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                          "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                        }
                                      },
                                      "id": 234,
                                      "indexExpression": {
                                        "id": 233,
                                        "name": "role",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 220,
                                        "src": "6322:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6315:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RoleData_$21_storage",
                                        "typeString": "struct AccessControl.RoleData storage ref"
                                      }
                                    },
                                    "id": 235,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6328:7:0",
                                    "memberName": "hasRole",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 18,
                                    "src": "6315:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 237,
                                  "indexExpression": {
                                    "id": 236,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 222,
                                    "src": "6336:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6315:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 238,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6347:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "6315:36:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 240,
                              "nodeType": "ExpressionStatement",
                              "src": "6315:36:0"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 242,
                                    "name": "role",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 220,
                                    "src": "6382:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 243,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 222,
                                    "src": "6388:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 244,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1226,
                                      "src": "6397:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 245,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6397:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 241,
                                  "name": "RoleGranted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 326,
                                  "src": "6370:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                                    "typeString": "function (bytes32,address,address)"
                                  }
                                },
                                "id": 246,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6370:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 247,
                              "nodeType": "EmitStatement",
                              "src": "6365:45:0"
                            },
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 248,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6431:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 226,
                              "id": 249,
                              "nodeType": "Return",
                              "src": "6424:11:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 218,
                    "nodeType": "StructuredDocumentation",
                    "src": "5951:223:0",
                    "text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
                  },
                  "id": 256,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_grantRole",
                  "nameLocation": "6188:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 223,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 220,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "6207:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 256,
                        "src": "6199:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 219,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6199:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 222,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "6221:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 256,
                        "src": "6213:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6213:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6198:31:0"
                  },
                  "returnParameters": {
                    "id": 226,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 225,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 256,
                        "src": "6256:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 224,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6256:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6255:6:0"
                  },
                  "scope": 295,
                  "src": "6179:316:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 293,
                    "nodeType": "Block",
                    "src": "6816:233:0",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [
                            {
                              "id": 267,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 259,
                              "src": "6838:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 268,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 261,
                              "src": "6844:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 266,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80,
                            "src": "6830:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6830:22:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 291,
                          "nodeType": "Block",
                          "src": "7006:37:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 289,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7027:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 265,
                              "id": 290,
                              "nodeType": "Return",
                              "src": "7020:12:0"
                            }
                          ]
                        },
                        "id": 292,
                        "nodeType": "IfStatement",
                        "src": "6826:217:0",
                        "trueBody": {
                          "id": 288,
                          "nodeType": "Block",
                          "src": "6854:146:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 277,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 270,
                                        "name": "_roles",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 26,
                                        "src": "6868:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                          "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                        }
                                      },
                                      "id": 272,
                                      "indexExpression": {
                                        "id": 271,
                                        "name": "role",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 259,
                                        "src": "6875:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6868:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RoleData_$21_storage",
                                        "typeString": "struct AccessControl.RoleData storage ref"
                                      }
                                    },
                                    "id": 273,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6881:7:0",
                                    "memberName": "hasRole",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 18,
                                    "src": "6868:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 275,
                                  "indexExpression": {
                                    "id": 274,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 261,
                                    "src": "6889:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6868:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 276,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6900:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "6868:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 278,
                              "nodeType": "ExpressionStatement",
                              "src": "6868:37:0"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 280,
                                    "name": "role",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 259,
                                    "src": "6936:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 281,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 261,
                                    "src": "6942:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 282,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1226,
                                      "src": "6951:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 283,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6951:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 279,
                                  "name": "RoleRevoked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 335,
                                  "src": "6924:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                                    "typeString": "function (bytes32,address,address)"
                                  }
                                },
                                "id": 284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6924:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 285,
                              "nodeType": "EmitStatement",
                              "src": "6919:45:0"
                            },
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6985:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 265,
                              "id": 287,
                              "nodeType": "Return",
                              "src": "6978:11:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 257,
                    "nodeType": "StructuredDocumentation",
                    "src": "6501:226:0",
                    "text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
                  },
                  "id": 294,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_revokeRole",
                  "nameLocation": "6741:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 262,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 259,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "6761:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "6753:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 258,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6753:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 261,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "6775:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "6767:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 260,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6767:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6752:31:0"
                  },
                  "returnParameters": {
                    "id": 265,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 264,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "6810:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 263,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6810:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6809:6:0"
                  },
                  "scope": 295,
                  "src": "6732:317:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 296,
              "src": "1953:5098:0",
              "usedErrors": [
                305,
                308
              ],
              "usedEvents": [
                317,
                326,
                335
              ]
            }
          ],
          "src": "108:6944:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/access/IAccessControl.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
          "exportedSymbols": {
            "IAccessControl": [
              378
            ]
          },
          "id": 379,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 297,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "109:24:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IAccessControl",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 298,
                "nodeType": "StructuredDocumentation",
                "src": "135:90:1",
                "text": " @dev External interface of AccessControl declared to support ERC-165 detection."
              },
              "fullyImplemented": false,
              "id": 378,
              "linearizedBaseContracts": [
                378
              ],
              "name": "IAccessControl",
              "nameLocation": "236:14:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 299,
                    "nodeType": "StructuredDocumentation",
                    "src": "257:56:1",
                    "text": " @dev The `account` is missing a role."
                  },
                  "errorSelector": "e2517d3f",
                  "id": 305,
                  "name": "AccessControlUnauthorizedAccount",
                  "nameLocation": "324:32:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 304,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 301,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "365:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 305,
                        "src": "357:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 300,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "357:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 303,
                        "mutability": "mutable",
                        "name": "neededRole",
                        "nameLocation": "382:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 305,
                        "src": "374:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 302,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "374:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "356:37:1"
                  },
                  "src": "318:76:1"
                },
                {
                  "documentation": {
                    "id": 306,
                    "nodeType": "StructuredDocumentation",
                    "src": "400:148:1",
                    "text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
                  },
                  "errorSelector": "6697b232",
                  "id": 308,
                  "name": "AccessControlBadConfirmation",
                  "nameLocation": "559:28:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 307,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "587:2:1"
                  },
                  "src": "553:37:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 309,
                    "nodeType": "StructuredDocumentation",
                    "src": "596:254:1",
                    "text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
                  },
                  "eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
                  "id": 317,
                  "name": "RoleAdminChanged",
                  "nameLocation": "861:16:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 316,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 311,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "894:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "878:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 310,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "878:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 313,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousAdminRole",
                        "nameLocation": "916:17:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "900:33:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 312,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "900:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 315,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newAdminRole",
                        "nameLocation": "951:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "935:28:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 314,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "935:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "877:87:1"
                  },
                  "src": "855:110:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 318,
                    "nodeType": "StructuredDocumentation",
                    "src": "971:295:1",
                    "text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
                  },
                  "eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
                  "id": 326,
                  "name": "RoleGranted",
                  "nameLocation": "1277:11:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 325,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 320,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "1305:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 326,
                        "src": "1289:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 319,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1289:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 322,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1327:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 326,
                        "src": "1311:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 321,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1311:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 324,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "1352:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 326,
                        "src": "1336:22:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 323,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1336:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1288:71:1"
                  },
                  "src": "1271:89:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 327,
                    "nodeType": "StructuredDocumentation",
                    "src": "1366:275:1",
                    "text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
                  },
                  "eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
                  "id": 335,
                  "name": "RoleRevoked",
                  "nameLocation": "1652:11:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 334,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 329,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "1680:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "1664:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 328,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1664:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 331,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1702:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "1686:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 330,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1686:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 333,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "1727:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "1711:22:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 332,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1711:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1663:71:1"
                  },
                  "src": "1646:89:1"
                },
                {
                  "documentation": {
                    "id": 336,
                    "nodeType": "StructuredDocumentation",
                    "src": "1741:76:1",
                    "text": " @dev Returns `true` if `account` has been granted `role`."
                  },
                  "functionSelector": "91d14854",
                  "id": 345,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hasRole",
                  "nameLocation": "1831:7:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 341,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 338,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "1847:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "1839:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 337,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1839:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 340,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1861:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "1853:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 339,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1853:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1838:31:1"
                  },
                  "returnParameters": {
                    "id": 344,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 343,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "1893:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 342,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1893:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1892:6:1"
                  },
                  "scope": 378,
                  "src": "1822:77:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 346,
                    "nodeType": "StructuredDocumentation",
                    "src": "1905:184:1",
                    "text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
                  },
                  "functionSelector": "248a9ca3",
                  "id": 353,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRoleAdmin",
                  "nameLocation": "2103:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 349,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 348,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2124:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 353,
                        "src": "2116:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 347,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2116:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2115:14:1"
                  },
                  "returnParameters": {
                    "id": 352,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 351,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 353,
                        "src": "2153:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 350,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2153:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2152:9:1"
                  },
                  "scope": 378,
                  "src": "2094:68:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 354,
                    "nodeType": "StructuredDocumentation",
                    "src": "2168:239:1",
                    "text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
                  },
                  "functionSelector": "2f2ff15d",
                  "id": 361,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "grantRole",
                  "nameLocation": "2421:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 359,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 356,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2439:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 361,
                        "src": "2431:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 355,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2431:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 358,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2453:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 361,
                        "src": "2445:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 357,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2445:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2430:31:1"
                  },
                  "returnParameters": {
                    "id": 360,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2470:0:1"
                  },
                  "scope": 378,
                  "src": "2412:59:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 362,
                    "nodeType": "StructuredDocumentation",
                    "src": "2477:223:1",
                    "text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
                  },
                  "functionSelector": "d547741f",
                  "id": 369,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revokeRole",
                  "nameLocation": "2714:10:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 367,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 364,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2733:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 369,
                        "src": "2725:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 363,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2725:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 366,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2747:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 369,
                        "src": "2739:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 365,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2739:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2724:31:1"
                  },
                  "returnParameters": {
                    "id": 368,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2764:0:1"
                  },
                  "scope": 378,
                  "src": "2705:60:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 370,
                    "nodeType": "StructuredDocumentation",
                    "src": "2771:491:1",
                    "text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
                  },
                  "functionSelector": "36568abe",
                  "id": 377,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "renounceRole",
                  "nameLocation": "3276:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 375,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 372,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "3297:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 377,
                        "src": "3289:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 371,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3289:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 374,
                        "mutability": "mutable",
                        "name": "callerConfirmation",
                        "nameLocation": "3311:18:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 377,
                        "src": "3303:26:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 373,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3303:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3288:42:1"
                  },
                  "returnParameters": {
                    "id": 376,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3339:0:1"
                  },
                  "scope": 378,
                  "src": "3267:73:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 379,
              "src": "226:3116:1",
              "usedErrors": [
                305,
                308
              ],
              "usedEvents": [
                317,
                326,
                335
              ]
            }
          ],
          "src": "109:3234:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
          "exportedSymbols": {
            "IERC1155Errors": [
              515
            ],
            "IERC20Errors": [
              420
            ],
            "IERC721Errors": [
              468
            ]
          },
          "id": 516,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 380,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:24:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 381,
                "nodeType": "StructuredDocumentation",
                "src": "138:141:2",
                "text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
              },
              "fullyImplemented": true,
              "id": 420,
              "linearizedBaseContracts": [
                420
              ],
              "name": "IERC20Errors",
              "nameLocation": "290:12:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 382,
                    "nodeType": "StructuredDocumentation",
                    "src": "309:309:2",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "e450d38c",
                  "id": 390,
                  "name": "ERC20InsufficientBalance",
                  "nameLocation": "629:24:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 389,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 384,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "662:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 390,
                        "src": "654:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 383,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "654:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 386,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "678:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 390,
                        "src": "670:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 385,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "670:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 388,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "695:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 390,
                        "src": "687:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 387,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "687:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "653:49:2"
                  },
                  "src": "623:80:2"
                },
                {
                  "documentation": {
                    "id": 391,
                    "nodeType": "StructuredDocumentation",
                    "src": "709:152:2",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "96c6fd1e",
                  "id": 395,
                  "name": "ERC20InvalidSender",
                  "nameLocation": "872:18:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 394,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 393,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "899:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 395,
                        "src": "891:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 392,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "891:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "890:16:2"
                  },
                  "src": "866:41:2"
                },
                {
                  "documentation": {
                    "id": 396,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:159:2",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "ec442f05",
                  "id": 400,
                  "name": "ERC20InvalidReceiver",
                  "nameLocation": "1083:20:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 399,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 398,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "1112:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 400,
                        "src": "1104:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 397,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1104:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1103:18:2"
                  },
                  "src": "1077:45:2"
                },
                {
                  "documentation": {
                    "id": 401,
                    "nodeType": "StructuredDocumentation",
                    "src": "1128:345:2",
                    "text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "fb8f41b2",
                  "id": 409,
                  "name": "ERC20InsufficientAllowance",
                  "nameLocation": "1484:26:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 408,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 403,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1519:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "1511:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 402,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1511:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 405,
                        "mutability": "mutable",
                        "name": "allowance",
                        "nameLocation": "1536:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "1528:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 404,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1528:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 407,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "1555:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "1547:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 406,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1547:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1510:52:2"
                  },
                  "src": "1478:85:2"
                },
                {
                  "documentation": {
                    "id": 410,
                    "nodeType": "StructuredDocumentation",
                    "src": "1569:174:2",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "e602df05",
                  "id": 414,
                  "name": "ERC20InvalidApprover",
                  "nameLocation": "1754:20:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 413,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 412,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "1783:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 414,
                        "src": "1775:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 411,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1775:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1774:18:2"
                  },
                  "src": "1748:45:2"
                },
                {
                  "documentation": {
                    "id": 415,
                    "nodeType": "StructuredDocumentation",
                    "src": "1799:195:2",
                    "text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "94280d62",
                  "id": 419,
                  "name": "ERC20InvalidSpender",
                  "nameLocation": "2005:19:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 418,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 417,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2033:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 419,
                        "src": "2025:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 416,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2025:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2024:17:2"
                  },
                  "src": "1999:43:2"
                }
              ],
              "scope": 516,
              "src": "280:1764:2",
              "usedErrors": [
                390,
                395,
                400,
                409,
                414,
                419
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC721Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 421,
                "nodeType": "StructuredDocumentation",
                "src": "2046:143:2",
                "text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
              },
              "fullyImplemented": true,
              "id": 468,
              "linearizedBaseContracts": [
                468
              ],
              "name": "IERC721Errors",
              "nameLocation": "2200:13:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 422,
                    "nodeType": "StructuredDocumentation",
                    "src": "2220:219:2",
                    "text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "89c62b64",
                  "id": 426,
                  "name": "ERC721InvalidOwner",
                  "nameLocation": "2450:18:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 425,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 424,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2477:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "2469:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 423,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2469:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2468:15:2"
                  },
                  "src": "2444:40:2"
                },
                {
                  "documentation": {
                    "id": 427,
                    "nodeType": "StructuredDocumentation",
                    "src": "2490:132:2",
                    "text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "7e273289",
                  "id": 431,
                  "name": "ERC721NonexistentToken",
                  "nameLocation": "2633:22:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 430,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 429,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2664:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 431,
                        "src": "2656:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 428,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2656:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2655:17:2"
                  },
                  "src": "2627:46:2"
                },
                {
                  "documentation": {
                    "id": 432,
                    "nodeType": "StructuredDocumentation",
                    "src": "2679:289:2",
                    "text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "64283d7b",
                  "id": 440,
                  "name": "ERC721IncorrectOwner",
                  "nameLocation": "2979:20:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 439,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 434,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3008:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 440,
                        "src": "3000:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 433,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3000:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 436,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3024:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 440,
                        "src": "3016:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 435,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3016:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 438,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3041:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 440,
                        "src": "3033:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 437,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3033:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2999:48:2"
                  },
                  "src": "2973:75:2"
                },
                {
                  "documentation": {
                    "id": 441,
                    "nodeType": "StructuredDocumentation",
                    "src": "3054:152:2",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "73c6ac6e",
                  "id": 445,
                  "name": "ERC721InvalidSender",
                  "nameLocation": "3217:19:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 444,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 443,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3245:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 445,
                        "src": "3237:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 442,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3237:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3236:16:2"
                  },
                  "src": "3211:42:2"
                },
                {
                  "documentation": {
                    "id": 446,
                    "nodeType": "StructuredDocumentation",
                    "src": "3259:159:2",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "64a0ae92",
                  "id": 450,
                  "name": "ERC721InvalidReceiver",
                  "nameLocation": "3429:21:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 449,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 448,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "3459:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "3451:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 447,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3451:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3450:18:2"
                  },
                  "src": "3423:46:2"
                },
                {
                  "documentation": {
                    "id": 451,
                    "nodeType": "StructuredDocumentation",
                    "src": "3475:247:2",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "177e802f",
                  "id": 457,
                  "name": "ERC721InsufficientApproval",
                  "nameLocation": "3733:26:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 456,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 453,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3768:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 457,
                        "src": "3760:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 452,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3760:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 455,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3786:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 457,
                        "src": "3778:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 454,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3778:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3759:35:2"
                  },
                  "src": "3727:68:2"
                },
                {
                  "documentation": {
                    "id": 458,
                    "nodeType": "StructuredDocumentation",
                    "src": "3801:174:2",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "a9fbf51f",
                  "id": 462,
                  "name": "ERC721InvalidApprover",
                  "nameLocation": "3986:21:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 461,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 460,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "4016:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 462,
                        "src": "4008:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 459,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4008:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4007:18:2"
                  },
                  "src": "3980:46:2"
                },
                {
                  "documentation": {
                    "id": 463,
                    "nodeType": "StructuredDocumentation",
                    "src": "4032:197:2",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "5b08ba18",
                  "id": 467,
                  "name": "ERC721InvalidOperator",
                  "nameLocation": "4240:21:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 466,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 465,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4270:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 467,
                        "src": "4262:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 464,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4262:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4261:18:2"
                  },
                  "src": "4234:46:2"
                }
              ],
              "scope": 516,
              "src": "2190:2092:2",
              "usedErrors": [
                426,
                431,
                440,
                445,
                450,
                457,
                462,
                467
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1155Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 469,
                "nodeType": "StructuredDocumentation",
                "src": "4284:145:2",
                "text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
              },
              "fullyImplemented": true,
              "id": 515,
              "linearizedBaseContracts": [
                515
              ],
              "name": "IERC1155Errors",
              "nameLocation": "4440:14:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 470,
                    "nodeType": "StructuredDocumentation",
                    "src": "4461:361:2",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "03dee4c5",
                  "id": 480,
                  "name": "ERC1155InsufficientBalance",
                  "nameLocation": "4833:26:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 479,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 472,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "4868:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 480,
                        "src": "4860:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 471,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4860:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 474,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "4884:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 480,
                        "src": "4876:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 473,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4876:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 476,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "4901:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 480,
                        "src": "4893:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 475,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4893:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 478,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4917:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 480,
                        "src": "4909:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 477,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4909:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4859:66:2"
                  },
                  "src": "4827:99:2"
                },
                {
                  "documentation": {
                    "id": 481,
                    "nodeType": "StructuredDocumentation",
                    "src": "4932:152:2",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "01a83514",
                  "id": 485,
                  "name": "ERC1155InvalidSender",
                  "nameLocation": "5095:20:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 484,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 483,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "5124:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 485,
                        "src": "5116:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 482,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5116:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5115:16:2"
                  },
                  "src": "5089:43:2"
                },
                {
                  "documentation": {
                    "id": 486,
                    "nodeType": "StructuredDocumentation",
                    "src": "5138:159:2",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "57f447ce",
                  "id": 490,
                  "name": "ERC1155InvalidReceiver",
                  "nameLocation": "5308:22:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 489,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 488,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "5339:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 490,
                        "src": "5331:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 487,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5331:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5330:18:2"
                  },
                  "src": "5302:47:2"
                },
                {
                  "documentation": {
                    "id": 491,
                    "nodeType": "StructuredDocumentation",
                    "src": "5355:256:2",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "e237d922",
                  "id": 497,
                  "name": "ERC1155MissingApprovalForAll",
                  "nameLocation": "5622:28:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 496,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 493,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "5659:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 497,
                        "src": "5651:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 492,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5651:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 495,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "5677:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 497,
                        "src": "5669:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 494,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5669:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5650:33:2"
                  },
                  "src": "5616:68:2"
                },
                {
                  "documentation": {
                    "id": 498,
                    "nodeType": "StructuredDocumentation",
                    "src": "5690:174:2",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "3e31884e",
                  "id": 502,
                  "name": "ERC1155InvalidApprover",
                  "nameLocation": "5875:22:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 501,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 500,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "5906:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 502,
                        "src": "5898:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 499,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5898:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5897:18:2"
                  },
                  "src": "5869:47:2"
                },
                {
                  "documentation": {
                    "id": 503,
                    "nodeType": "StructuredDocumentation",
                    "src": "5922:197:2",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "ced3e100",
                  "id": 507,
                  "name": "ERC1155InvalidOperator",
                  "nameLocation": "6130:22:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 506,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 505,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "6161:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 507,
                        "src": "6153:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 504,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6153:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6152:18:2"
                  },
                  "src": "6124:47:2"
                },
                {
                  "documentation": {
                    "id": 508,
                    "nodeType": "StructuredDocumentation",
                    "src": "6177:280:2",
                    "text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
                  },
                  "errorSelector": "5b059991",
                  "id": 514,
                  "name": "ERC1155InvalidArrayLength",
                  "nameLocation": "6468:25:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 513,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 510,
                        "mutability": "mutable",
                        "name": "idsLength",
                        "nameLocation": "6502:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 514,
                        "src": "6494:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 509,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6494:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 512,
                        "mutability": "mutable",
                        "name": "valuesLength",
                        "nameLocation": "6521:12:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 514,
                        "src": "6513:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 511,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6513:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6493:41:2"
                  },
                  "src": "6462:73:2"
                }
              ],
              "scope": 516,
              "src": "4430:2107:2",
              "usedErrors": [
                480,
                485,
                490,
                497,
                502,
                507,
                514
              ],
              "usedEvents": []
            }
          ],
          "src": "112:6426:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "exportedSymbols": {
            "Context": [
              1244
            ],
            "ERC20": [
              1030
            ],
            "IERC20": [
              1108
            ],
            "IERC20Errors": [
              420
            ],
            "IERC20Metadata": [
              1214
            ]
          },
          "id": 1031,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 517,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 519,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1031,
              "sourceUnit": 1109,
              "src": "131:36:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 518,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1108,
                    "src": "139:6:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "./extensions/IERC20Metadata.sol",
              "id": 521,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1031,
              "sourceUnit": 1215,
              "src": "168:63:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 520,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1214,
                    "src": "176:14:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../utils/Context.sol",
              "id": 523,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1031,
              "sourceUnit": 1245,
              "src": "232:48:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 522,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1244,
                    "src": "240:7:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
              "file": "../../interfaces/draft-IERC6093.sol",
              "id": 525,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1031,
              "sourceUnit": 516,
              "src": "281:65:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 524,
                    "name": "IERC20Errors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 420,
                    "src": "289:12:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 527,
                    "name": "Context",
                    "nameLocations": [
                      "1133:7:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1244,
                    "src": "1133:7:3"
                  },
                  "id": 528,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1133:7:3"
                },
                {
                  "baseName": {
                    "id": 529,
                    "name": "IERC20",
                    "nameLocations": [
                      "1142:6:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1108,
                    "src": "1142:6:3"
                  },
                  "id": 530,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1142:6:3"
                },
                {
                  "baseName": {
                    "id": 531,
                    "name": "IERC20Metadata",
                    "nameLocations": [
                      "1150:14:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1214,
                    "src": "1150:14:3"
                  },
                  "id": 532,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1150:14:3"
                },
                {
                  "baseName": {
                    "id": 533,
                    "name": "IERC20Errors",
                    "nameLocations": [
                      "1166:12:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 420,
                    "src": "1166:12:3"
                  },
                  "id": 534,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1166:12:3"
                }
              ],
              "canonicalName": "ERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 526,
                "nodeType": "StructuredDocumentation",
                "src": "348:757:3",
                "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
              },
              "fullyImplemented": true,
              "id": 1030,
              "linearizedBaseContracts": [
                1030,
                420,
                1214,
                1108,
                1244
              ],
              "name": "ERC20",
              "nameLocation": "1124:5:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 538,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "1229:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "1185:53:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 537,
                    "keyName": "account",
                    "keyNameLocation": "1201:7:3",
                    "keyType": {
                      "id": 535,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1193:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1185:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 536,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1212:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 544,
                  "mutability": "mutable",
                  "name": "_allowances",
                  "nameLocation": "1317:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "1245:83:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 543,
                    "keyName": "account",
                    "keyNameLocation": "1261:7:3",
                    "keyType": {
                      "id": 539,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1253:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1245:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 542,
                      "keyName": "spender",
                      "keyNameLocation": "1288:7:3",
                      "keyType": {
                        "id": 540,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1280:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1272:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 541,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1299:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 546,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "1351:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "1335:28:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 545,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 548,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1385:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "1370:20:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 547,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1370:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 550,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1411:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "1396:22:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 549,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1396:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 566,
                    "nodeType": "Block",
                    "src": "1638:57:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 558,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 548,
                            "src": "1648:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 559,
                            "name": "name_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 553,
                            "src": "1656:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1648:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 561,
                        "nodeType": "ExpressionStatement",
                        "src": "1648:13:3"
                      },
                      {
                        "expression": {
                          "id": 564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 562,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 550,
                            "src": "1671:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 563,
                            "name": "symbol_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 555,
                            "src": "1681:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1671:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 565,
                        "nodeType": "ExpressionStatement",
                        "src": "1671:17:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 551,
                    "nodeType": "StructuredDocumentation",
                    "src": "1425:152:3",
                    "text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
                  },
                  "id": 567,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 556,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 553,
                        "mutability": "mutable",
                        "name": "name_",
                        "nameLocation": "1608:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 567,
                        "src": "1594:19:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 552,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1594:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 555,
                        "mutability": "mutable",
                        "name": "symbol_",
                        "nameLocation": "1629:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 567,
                        "src": "1615:21:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 554,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1615:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1593:44:3"
                  },
                  "returnParameters": {
                    "id": 557,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1638:0:3"
                  },
                  "scope": 1030,
                  "src": "1582:113:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    1201
                  ],
                  "body": {
                    "id": 575,
                    "nodeType": "Block",
                    "src": "1820:29:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 573,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 548,
                          "src": "1837:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 572,
                        "id": 574,
                        "nodeType": "Return",
                        "src": "1830:12:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 568,
                    "nodeType": "StructuredDocumentation",
                    "src": "1701:54:3",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 576,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "1769:4:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 569,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1773:2:3"
                  },
                  "returnParameters": {
                    "id": 572,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 571,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 576,
                        "src": "1805:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 570,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1805:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1804:15:3"
                  },
                  "scope": 1030,
                  "src": "1760:89:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1207
                  ],
                  "body": {
                    "id": 584,
                    "nodeType": "Block",
                    "src": "2024:31:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 582,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 550,
                          "src": "2041:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 581,
                        "id": 583,
                        "nodeType": "Return",
                        "src": "2034:14:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 577,
                    "nodeType": "StructuredDocumentation",
                    "src": "1855:102:3",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 585,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "1971:6:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 578,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1977:2:3"
                  },
                  "returnParameters": {
                    "id": 581,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 580,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 585,
                        "src": "2009:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 579,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2009:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2008:15:3"
                  },
                  "scope": 1030,
                  "src": "1962:93:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1213
                  ],
                  "body": {
                    "id": 593,
                    "nodeType": "Block",
                    "src": "2744:26:3",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3138",
                          "id": 591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2761:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "functionReturnParameters": 590,
                        "id": 592,
                        "nodeType": "Return",
                        "src": "2754:9:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 586,
                    "nodeType": "StructuredDocumentation",
                    "src": "2061:622:3",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 594,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "2697:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 587,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2705:2:3"
                  },
                  "returnParameters": {
                    "id": 590,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 589,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 594,
                        "src": "2737:5:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 588,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2737:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2736:7:3"
                  },
                  "scope": 1030,
                  "src": "2688:82:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1057
                  ],
                  "body": {
                    "id": 602,
                    "nodeType": "Block",
                    "src": "2891:36:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 600,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 546,
                          "src": "2908:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 599,
                        "id": 601,
                        "nodeType": "Return",
                        "src": "2901:19:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 595,
                    "nodeType": "StructuredDocumentation",
                    "src": "2776:49:3",
                    "text": " @dev See {IERC20-totalSupply}."
                  },
                  "functionSelector": "18160ddd",
                  "id": 603,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "2839:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 596,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2850:2:3"
                  },
                  "returnParameters": {
                    "id": 599,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 598,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 603,
                        "src": "2882:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 597,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2882:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2881:9:3"
                  },
                  "scope": 1030,
                  "src": "2830:97:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1065
                  ],
                  "body": {
                    "id": 615,
                    "nodeType": "Block",
                    "src": "3059:42:3",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 611,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 538,
                            "src": "3076:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 613,
                          "indexExpression": {
                            "id": 612,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "3086:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3076:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 610,
                        "id": 614,
                        "nodeType": "Return",
                        "src": "3069:25:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 604,
                    "nodeType": "StructuredDocumentation",
                    "src": "2933:47:3",
                    "text": " @dev See {IERC20-balanceOf}."
                  },
                  "functionSelector": "70a08231",
                  "id": 616,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "2994:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 607,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 606,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "3012:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 616,
                        "src": "3004:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 605,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3004:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3003:17:3"
                  },
                  "returnParameters": {
                    "id": 610,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 609,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 616,
                        "src": "3050:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 608,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3050:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3049:9:3"
                  },
                  "scope": 1030,
                  "src": "2985:116:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1075
                  ],
                  "body": {
                    "id": 639,
                    "nodeType": "Block",
                    "src": "3371:103:3",
                    "statements": [
                      {
                        "assignments": [
                          627
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 627,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3389:5:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 639,
                            "src": "3381:13:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 626,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3381:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 630,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 628,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1226,
                            "src": "3397:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3397:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3381:28:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 632,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 627,
                              "src": "3429:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 633,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 619,
                              "src": "3436:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 634,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 621,
                              "src": "3440:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 631,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 760,
                            "src": "3419:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3419:27:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 636,
                        "nodeType": "ExpressionStatement",
                        "src": "3419:27:3"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3463:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 625,
                        "id": 638,
                        "nodeType": "Return",
                        "src": "3456:11:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 617,
                    "nodeType": "StructuredDocumentation",
                    "src": "3107:184:3",
                    "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 640,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "3305:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 622,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 619,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3322:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 640,
                        "src": "3314:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 618,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3314:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 621,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3334:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 640,
                        "src": "3326:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 620,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3326:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3313:27:3"
                  },
                  "returnParameters": {
                    "id": 625,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 624,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 640,
                        "src": "3365:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 623,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3365:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3364:6:3"
                  },
                  "scope": 1030,
                  "src": "3296:178:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1085
                  ],
                  "body": {
                    "id": 656,
                    "nodeType": "Block",
                    "src": "3621:51:3",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 650,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 544,
                              "src": "3638:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 652,
                            "indexExpression": {
                              "id": 651,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 643,
                              "src": "3650:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3638:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 654,
                          "indexExpression": {
                            "id": 653,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 645,
                            "src": "3657:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3638:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 649,
                        "id": 655,
                        "nodeType": "Return",
                        "src": "3631:34:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 641,
                    "nodeType": "StructuredDocumentation",
                    "src": "3480:47:3",
                    "text": " @dev See {IERC20-allowance}."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 657,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "3541:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 646,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 643,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3559:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 657,
                        "src": "3551:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 642,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3551:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 645,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3574:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 657,
                        "src": "3566:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 644,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3566:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3550:32:3"
                  },
                  "returnParameters": {
                    "id": 649,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 648,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 657,
                        "src": "3612:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 647,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3612:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3611:9:3"
                  },
                  "scope": 1030,
                  "src": "3532:140:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1095
                  ],
                  "body": {
                    "id": 680,
                    "nodeType": "Block",
                    "src": "4058:107:3",
                    "statements": [
                      {
                        "assignments": [
                          668
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 668,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "4076:5:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 680,
                            "src": "4068:13:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 667,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4068:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 671,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 669,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1226,
                            "src": "4084:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4084:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4068:28:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 673,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 668,
                              "src": "4115:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 674,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 660,
                              "src": "4122:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 675,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 662,
                              "src": "4131:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 672,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              921,
                              981
                            ],
                            "referencedDeclaration": 921,
                            "src": "4106:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4106:31:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 677,
                        "nodeType": "ExpressionStatement",
                        "src": "4106:31:3"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4154:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 666,
                        "id": 679,
                        "nodeType": "Return",
                        "src": "4147:11:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 658,
                    "nodeType": "StructuredDocumentation",
                    "src": "3678:296:3",
                    "text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 681,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "3988:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 663,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 660,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4004:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 681,
                        "src": "3996:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 659,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3996:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 662,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4021:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 681,
                        "src": "4013:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 661,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4013:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3995:32:3"
                  },
                  "returnParameters": {
                    "id": 666,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 665,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 681,
                        "src": "4052:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 664,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4052:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4051:6:3"
                  },
                  "scope": 1030,
                  "src": "3979:186:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1107
                  ],
                  "body": {
                    "id": 712,
                    "nodeType": "Block",
                    "src": "4850:151:3",
                    "statements": [
                      {
                        "assignments": [
                          694
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 694,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "4868:7:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 712,
                            "src": "4860:15:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 693,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4860:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 697,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 695,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1226,
                            "src": "4878:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4878:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4860:30:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 699,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 684,
                              "src": "4916:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 700,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 694,
                              "src": "4922:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 701,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 688,
                              "src": "4931:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 698,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1029,
                            "src": "4900:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4900:37:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 703,
                        "nodeType": "ExpressionStatement",
                        "src": "4900:37:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 705,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 684,
                              "src": "4957:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 706,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 686,
                              "src": "4963:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 707,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 688,
                              "src": "4967:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 704,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 760,
                            "src": "4947:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4947:26:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 709,
                        "nodeType": "ExpressionStatement",
                        "src": "4947:26:3"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4990:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 692,
                        "id": 711,
                        "nodeType": "Return",
                        "src": "4983:11:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 682,
                    "nodeType": "StructuredDocumentation",
                    "src": "4171:581:3",
                    "text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "23b872dd",
                  "id": 713,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "4766:12:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 689,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 684,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "4787:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 713,
                        "src": "4779:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 683,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4779:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 686,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4801:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 713,
                        "src": "4793:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 685,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4793:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 688,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4813:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 713,
                        "src": "4805:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 687,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4805:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4778:41:3"
                  },
                  "returnParameters": {
                    "id": 692,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 691,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 713,
                        "src": "4844:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 690,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4844:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4843:6:3"
                  },
                  "scope": 1030,
                  "src": "4757:244:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 759,
                    "nodeType": "Block",
                    "src": "5443:231:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 723,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 716,
                            "src": "5457:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 726,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5473:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5465:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 724,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5465:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 727,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5465:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5457:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 737,
                        "nodeType": "IfStatement",
                        "src": "5453:86:3",
                        "trueBody": {
                          "id": 736,
                          "nodeType": "Block",
                          "src": "5477:62:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 732,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5525:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 731,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5517:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 730,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5517:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 733,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5517:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 729,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 395,
                                  "src": "5498:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 734,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5498:30:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 735,
                              "nodeType": "RevertStatement",
                              "src": "5491:37:3"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 738,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 718,
                            "src": "5552:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 741,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5566:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 740,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5558:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 739,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5558:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5558:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5552:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 752,
                        "nodeType": "IfStatement",
                        "src": "5548:86:3",
                        "trueBody": {
                          "id": 751,
                          "nodeType": "Block",
                          "src": "5570:64:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 747,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5620:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 746,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5612:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 745,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5612:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 748,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5612:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 744,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 400,
                                  "src": "5591:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 749,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5591:32:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 750,
                              "nodeType": "RevertStatement",
                              "src": "5584:39:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 754,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 716,
                              "src": "5651:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 755,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 718,
                              "src": "5657:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 756,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 720,
                              "src": "5661:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 753,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 837,
                            "src": "5643:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5643:24:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 758,
                        "nodeType": "ExpressionStatement",
                        "src": "5643:24:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 714,
                    "nodeType": "StructuredDocumentation",
                    "src": "5007:362:3",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 760,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "5383:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 721,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 716,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5401:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 760,
                        "src": "5393:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 715,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5393:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 718,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5415:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 760,
                        "src": "5407:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 717,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5407:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 720,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5427:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 760,
                        "src": "5419:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 719,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5419:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5392:41:3"
                  },
                  "returnParameters": {
                    "id": 722,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5443:0:3"
                  },
                  "scope": 1030,
                  "src": "5374:300:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 836,
                    "nodeType": "Block",
                    "src": "6064:1032:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 770,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 763,
                            "src": "6078:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 773,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6094:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 772,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6086:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 771,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6086:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6086:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6078:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 807,
                          "nodeType": "Block",
                          "src": "6252:362:3",
                          "statements": [
                            {
                              "assignments": [
                                782
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 782,
                                  "mutability": "mutable",
                                  "name": "fromBalance",
                                  "nameLocation": "6274:11:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 807,
                                  "src": "6266:19:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 781,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6266:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 786,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 783,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 538,
                                  "src": "6288:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 785,
                                "indexExpression": {
                                  "id": 784,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 763,
                                  "src": "6298:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6288:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6266:37:3"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 789,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 787,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 782,
                                  "src": "6321:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 788,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 767,
                                  "src": "6335:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6321:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 797,
                              "nodeType": "IfStatement",
                              "src": "6317:115:3",
                              "trueBody": {
                                "id": 796,
                                "nodeType": "Block",
                                "src": "6342:90:3",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 791,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 763,
                                          "src": "6392:4:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 792,
                                          "name": "fromBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 782,
                                          "src": "6398:11:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 793,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 767,
                                          "src": "6411:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 790,
                                        "name": "ERC20InsufficientBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 390,
                                        "src": "6367:24:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 794,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6367:50:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 795,
                                    "nodeType": "RevertStatement",
                                    "src": "6360:57:3"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 806,
                              "nodeType": "UncheckedBlock",
                              "src": "6445:159:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 804,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 798,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 538,
                                        "src": "6552:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 800,
                                      "indexExpression": {
                                        "id": 799,
                                        "name": "from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 763,
                                        "src": "6562:4:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6552:15:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 803,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 801,
                                        "name": "fromBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 782,
                                        "src": "6570:11:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 802,
                                        "name": "value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 767,
                                        "src": "6584:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6570:19:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6552:37:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 805,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6552:37:3"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 808,
                        "nodeType": "IfStatement",
                        "src": "6074:540:3",
                        "trueBody": {
                          "id": 780,
                          "nodeType": "Block",
                          "src": "6098:148:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 778,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 776,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 546,
                                  "src": "6214:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 777,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 767,
                                  "src": "6230:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6214:21:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 779,
                              "nodeType": "ExpressionStatement",
                              "src": "6214:21:3"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 809,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 765,
                            "src": "6628:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 812,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6642:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 811,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6634:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 810,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6634:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6634:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6628:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 828,
                          "nodeType": "Block",
                          "src": "6843:206:3",
                          "statements": [
                            {
                              "id": 827,
                              "nodeType": "UncheckedBlock",
                              "src": "6857:182:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 825,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 821,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 538,
                                        "src": "7002:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 823,
                                      "indexExpression": {
                                        "id": 822,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 765,
                                        "src": "7012:2:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "7002:13:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "id": 824,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 767,
                                      "src": "7019:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7002:22:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 826,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7002:22:3"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 829,
                        "nodeType": "IfStatement",
                        "src": "6624:425:3",
                        "trueBody": {
                          "id": 820,
                          "nodeType": "Block",
                          "src": "6646:191:3",
                          "statements": [
                            {
                              "id": 819,
                              "nodeType": "UncheckedBlock",
                              "src": "6660:167:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 817,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 815,
                                      "name": "_totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 546,
                                      "src": "6791:12:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "-=",
                                    "rightHandSide": {
                                      "id": 816,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 767,
                                      "src": "6807:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6791:21:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 818,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6791:21:3"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 831,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 763,
                              "src": "7073:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 832,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 765,
                              "src": "7079:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 833,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 767,
                              "src": "7083:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 830,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1042,
                            "src": "7064:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7064:25:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 835,
                        "nodeType": "EmitStatement",
                        "src": "7059:30:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 761,
                    "nodeType": "StructuredDocumentation",
                    "src": "5680:304:3",
                    "text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
                  },
                  "id": 837,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "5998:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 768,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 763,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6014:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 837,
                        "src": "6006:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 762,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6006:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 765,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6028:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 837,
                        "src": "6020:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 764,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6020:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 767,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6040:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 837,
                        "src": "6032:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 766,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6032:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6005:41:3"
                  },
                  "returnParameters": {
                    "id": 769,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6064:0:3"
                  },
                  "scope": 1030,
                  "src": "5989:1107:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 869,
                    "nodeType": "Block",
                    "src": "7495:152:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 845,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 840,
                            "src": "7509:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 848,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7528:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 847,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7520:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 846,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7520:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7520:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7509:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 859,
                        "nodeType": "IfStatement",
                        "src": "7505:91:3",
                        "trueBody": {
                          "id": 858,
                          "nodeType": "Block",
                          "src": "7532:64:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 854,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7582:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 853,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7574:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 852,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7574:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 855,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7574:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 851,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 400,
                                  "src": "7553:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 856,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7553:32:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 857,
                              "nodeType": "RevertStatement",
                              "src": "7546:39:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 863,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7621:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 862,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7613:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 861,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7613:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7613:10:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 865,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 840,
                              "src": "7625:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 866,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 842,
                              "src": "7634:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 860,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 837,
                            "src": "7605:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7605:35:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 868,
                        "nodeType": "ExpressionStatement",
                        "src": "7605:35:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 838,
                    "nodeType": "StructuredDocumentation",
                    "src": "7102:332:3",
                    "text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 870,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "7448:5:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 843,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 840,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7462:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 870,
                        "src": "7454:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 839,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7454:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 842,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7479:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 870,
                        "src": "7471:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 841,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7471:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7453:32:3"
                  },
                  "returnParameters": {
                    "id": 844,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7495:0:3"
                  },
                  "scope": 1030,
                  "src": "7439:208:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 902,
                    "nodeType": "Block",
                    "src": "8021:150:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 878,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 873,
                            "src": "8035:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 881,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8054:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8046:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 879,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8046:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8046:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8035:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 892,
                        "nodeType": "IfStatement",
                        "src": "8031:89:3",
                        "trueBody": {
                          "id": 891,
                          "nodeType": "Block",
                          "src": "8058:62:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 887,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8106:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 886,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8098:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 885,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8098:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 888,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8098:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 884,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 395,
                                  "src": "8079:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 889,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8079:30:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 890,
                              "nodeType": "RevertStatement",
                              "src": "8072:37:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 894,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 873,
                              "src": "8137:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 897,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8154:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 896,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8146:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 895,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8146:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 898,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8146:10:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 899,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 875,
                              "src": "8158:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 893,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 837,
                            "src": "8129:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8129:35:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 901,
                        "nodeType": "ExpressionStatement",
                        "src": "8129:35:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 871,
                    "nodeType": "StructuredDocumentation",
                    "src": "7653:307:3",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
                  },
                  "id": 903,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "7974:5:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 876,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 873,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7988:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 903,
                        "src": "7980:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 872,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7980:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 875,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8005:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 903,
                        "src": "7997:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 874,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7997:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7979:32:3"
                  },
                  "returnParameters": {
                    "id": 877,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8021:0:3"
                  },
                  "scope": 1030,
                  "src": "7965:206:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 920,
                    "nodeType": "Block",
                    "src": "8781:54:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 914,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 906,
                              "src": "8800:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 915,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 908,
                              "src": "8807:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 916,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 910,
                              "src": "8816:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 917,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8823:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 913,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              921,
                              981
                            ],
                            "referencedDeclaration": 981,
                            "src": "8791:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,uint256,bool)"
                            }
                          },
                          "id": 918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8791:37:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 919,
                        "nodeType": "ExpressionStatement",
                        "src": "8791:37:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 904,
                    "nodeType": "StructuredDocumentation",
                    "src": "8177:525:3",
                    "text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
                  },
                  "id": 921,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "8716:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 911,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 906,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "8733:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 921,
                        "src": "8725:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 905,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8725:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 908,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "8748:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 921,
                        "src": "8740:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 907,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8740:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 910,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8765:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 921,
                        "src": "8757:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 909,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8757:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8724:47:3"
                  },
                  "returnParameters": {
                    "id": 912,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8781:0:3"
                  },
                  "scope": 1030,
                  "src": "8707:128:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 980,
                    "nodeType": "Block",
                    "src": "9780:334:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 933,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 924,
                            "src": "9794:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 936,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9811:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 935,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9803:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 934,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9803:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9803:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9794:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 947,
                        "nodeType": "IfStatement",
                        "src": "9790:89:3",
                        "trueBody": {
                          "id": 946,
                          "nodeType": "Block",
                          "src": "9815:64:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 942,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9865:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 941,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9857:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 940,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9857:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 943,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9857:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 939,
                                  "name": "ERC20InvalidApprover",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 414,
                                  "src": "9836:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 944,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9836:32:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 945,
                              "nodeType": "RevertStatement",
                              "src": "9829:39:3"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 948,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 926,
                            "src": "9892:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 951,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9911:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 950,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9903:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 949,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9903:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9903:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9892:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 962,
                        "nodeType": "IfStatement",
                        "src": "9888:90:3",
                        "trueBody": {
                          "id": 961,
                          "nodeType": "Block",
                          "src": "9915:63:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 957,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9964:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 956,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9956:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 955,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9956:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 958,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9956:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 954,
                                  "name": "ERC20InvalidSpender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 419,
                                  "src": "9936:19:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 959,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9936:31:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 960,
                              "nodeType": "RevertStatement",
                              "src": "9929:38:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 963,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 544,
                                "src": "9987:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 966,
                              "indexExpression": {
                                "id": 964,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 924,
                                "src": "9999:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9987:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 967,
                            "indexExpression": {
                              "id": 965,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 926,
                              "src": "10006:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9987:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 968,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 928,
                            "src": "10017:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9987:35:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 970,
                        "nodeType": "ExpressionStatement",
                        "src": "9987:35:3"
                      },
                      {
                        "condition": {
                          "id": 971,
                          "name": "emitEvent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 930,
                          "src": "10036:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 979,
                        "nodeType": "IfStatement",
                        "src": "10032:76:3",
                        "trueBody": {
                          "id": 978,
                          "nodeType": "Block",
                          "src": "10047:61:3",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 973,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 924,
                                    "src": "10075:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 974,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 926,
                                    "src": "10082:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 975,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 928,
                                    "src": "10091:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 972,
                                  "name": "Approval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1051,
                                  "src": "10066:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 976,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10066:31:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 977,
                              "nodeType": "EmitStatement",
                              "src": "10061:36:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 922,
                    "nodeType": "StructuredDocumentation",
                    "src": "8841:836:3",
                    "text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
                  },
                  "id": 981,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "9691:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 931,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 924,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "9708:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 981,
                        "src": "9700:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 923,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9700:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 926,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "9723:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 981,
                        "src": "9715:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 925,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9715:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 928,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "9740:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 981,
                        "src": "9732:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 927,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9732:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 930,
                        "mutability": "mutable",
                        "name": "emitEvent",
                        "nameLocation": "9752:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 981,
                        "src": "9747:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 929,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9747:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9699:63:3"
                  },
                  "returnParameters": {
                    "id": 932,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9780:0:3"
                  },
                  "scope": 1030,
                  "src": "9682:432:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1028,
                    "nodeType": "Block",
                    "src": "10485:387:3",
                    "statements": [
                      {
                        "assignments": [
                          992
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 992,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "10503:16:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1028,
                            "src": "10495:24:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 991,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10495:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 997,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 994,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 984,
                              "src": "10532:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 995,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 986,
                              "src": "10539:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 993,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 657,
                            "src": "10522:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10522:25:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10495:52:3"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 998,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 992,
                            "src": "10561:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1001,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10585:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 1000,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10585:7:3",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 999,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "10580:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10580:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 1003,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "10594:3:3",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "10580:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10561:36:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1027,
                        "nodeType": "IfStatement",
                        "src": "10557:309:3",
                        "trueBody": {
                          "id": 1026,
                          "nodeType": "Block",
                          "src": "10599:267:3",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1007,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1005,
                                  "name": "currentAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 992,
                                  "src": "10617:16:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 1006,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 988,
                                  "src": "10636:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10617:24:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1015,
                              "nodeType": "IfStatement",
                              "src": "10613:130:3",
                              "trueBody": {
                                "id": 1014,
                                "nodeType": "Block",
                                "src": "10643:100:3",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 1009,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 986,
                                          "src": "10695:7:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 1010,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 992,
                                          "src": "10704:16:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 1011,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 988,
                                          "src": "10722:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1008,
                                        "name": "ERC20InsufficientAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 409,
                                        "src": "10668:26:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 1012,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10668:60:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 1013,
                                    "nodeType": "RevertStatement",
                                    "src": "10661:67:3"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 1025,
                              "nodeType": "UncheckedBlock",
                              "src": "10756:100:3",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1017,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 984,
                                        "src": "10793:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 1018,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 986,
                                        "src": "10800:7:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1021,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1019,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 992,
                                          "src": "10809:16:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 1020,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 988,
                                          "src": "10828:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "10809:24:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "hexValue": "66616c7365",
                                        "id": 1022,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10835:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "id": 1016,
                                      "name": "_approve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        921,
                                        981
                                      ],
                                      "referencedDeclaration": 981,
                                      "src": "10784:8:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                                        "typeString": "function (address,address,uint256,bool)"
                                      }
                                    },
                                    "id": 1023,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10784:57:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1024,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10784:57:3"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 982,
                    "nodeType": "StructuredDocumentation",
                    "src": "10120:271:3",
                    "text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
                  },
                  "id": 1029,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_spendAllowance",
                  "nameLocation": "10405:15:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 989,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 984,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10429:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1029,
                        "src": "10421:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 983,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10421:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 986,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "10444:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1029,
                        "src": "10436:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 985,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10436:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 988,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "10461:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1029,
                        "src": "10453:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 987,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10453:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10420:47:3"
                  },
                  "returnParameters": {
                    "id": 990,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10485:0:3"
                  },
                  "scope": 1030,
                  "src": "10396:476:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1031,
              "src": "1106:9768:3",
              "usedErrors": [
                390,
                395,
                400,
                409,
                414,
                419
              ],
              "usedEvents": [
                1042,
                1051
              ]
            }
          ],
          "src": "105:10770:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              1108
            ]
          },
          "id": 1109,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1032,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1033,
                "nodeType": "StructuredDocumentation",
                "src": "132:71:4",
                "text": " @dev Interface of the ERC-20 standard as defined in the ERC."
              },
              "fullyImplemented": false,
              "id": 1108,
              "linearizedBaseContracts": [
                1108
              ],
              "name": "IERC20",
              "nameLocation": "214:6:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1034,
                    "nodeType": "StructuredDocumentation",
                    "src": "227:158:4",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 1042,
                  "name": "Transfer",
                  "nameLocation": "396:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1041,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1036,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "421:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1042,
                        "src": "405:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1035,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "405:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1038,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "443:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1042,
                        "src": "427:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1037,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "427:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1040,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "455:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1042,
                        "src": "447:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1039,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "447:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "404:57:4"
                  },
                  "src": "390:72:4"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1043,
                    "nodeType": "StructuredDocumentation",
                    "src": "468:148:4",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 1051,
                  "name": "Approval",
                  "nameLocation": "627:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1050,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1045,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "652:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1051,
                        "src": "636:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1044,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "636:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1047,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "675:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1051,
                        "src": "659:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1046,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "659:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1049,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "692:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1051,
                        "src": "684:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1048,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "684:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "635:63:4"
                  },
                  "src": "621:78:4"
                },
                {
                  "documentation": {
                    "id": 1052,
                    "nodeType": "StructuredDocumentation",
                    "src": "705:65:4",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 1057,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "784:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1053,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "795:2:4"
                  },
                  "returnParameters": {
                    "id": 1056,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1055,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1057,
                        "src": "821:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1054,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "821:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "820:9:4"
                  },
                  "scope": 1108,
                  "src": "775:55:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1058,
                    "nodeType": "StructuredDocumentation",
                    "src": "836:71:4",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 1065,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "921:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1061,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1060,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "939:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1065,
                        "src": "931:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1059,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "930:17:4"
                  },
                  "returnParameters": {
                    "id": 1064,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1063,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1065,
                        "src": "971:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1062,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "971:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "970:9:4"
                  },
                  "scope": 1108,
                  "src": "912:68:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1066,
                    "nodeType": "StructuredDocumentation",
                    "src": "986:213:4",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 1075,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1213:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1071,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1068,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1230:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1075,
                        "src": "1222:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1067,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1222:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1070,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1242:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1075,
                        "src": "1234:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1069,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1234:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1221:27:4"
                  },
                  "returnParameters": {
                    "id": 1074,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1073,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1075,
                        "src": "1267:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1072,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1267:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1266:6:4"
                  },
                  "scope": 1108,
                  "src": "1204:69:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1076,
                    "nodeType": "StructuredDocumentation",
                    "src": "1279:264:4",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 1085,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1557:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1081,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1078,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1575:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1085,
                        "src": "1567:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1077,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1567:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1080,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1590:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1085,
                        "src": "1582:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1079,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1582:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1566:32:4"
                  },
                  "returnParameters": {
                    "id": 1084,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1083,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1085,
                        "src": "1622:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1082,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1622:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1621:9:4"
                  },
                  "scope": 1108,
                  "src": "1548:83:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1086,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:667:4",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 1095,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2318:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1091,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1088,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2334:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1095,
                        "src": "2326:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1087,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2326:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1090,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2351:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1095,
                        "src": "2343:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1089,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2343:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2325:32:4"
                  },
                  "returnParameters": {
                    "id": 1094,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1093,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1095,
                        "src": "2376:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1092,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2376:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2375:6:4"
                  },
                  "scope": 1108,
                  "src": "2309:73:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1096,
                    "nodeType": "StructuredDocumentation",
                    "src": "2388:297:4",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 1107,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2699:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1103,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1098,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2720:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1107,
                        "src": "2712:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1097,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2712:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1100,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2734:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1107,
                        "src": "2726:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1099,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2726:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1102,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2746:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1107,
                        "src": "2738:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1101,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2738:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2711:41:4"
                  },
                  "returnParameters": {
                    "id": 1106,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1105,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1107,
                        "src": "2771:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1104,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2771:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2770:6:4"
                  },
                  "scope": 1108,
                  "src": "2690:87:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1109,
              "src": "204:2575:4",
              "usedErrors": [],
              "usedEvents": [
                1042,
                1051
              ]
            }
          ],
          "src": "106:2674:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
          "exportedSymbols": {
            "Context": [
              1244
            ],
            "ERC20": [
              1030
            ],
            "ERC20Burnable": [
              1154
            ]
          },
          "id": 1155,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1110,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "124:24:5"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "../ERC20.sol",
              "id": 1112,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1155,
              "sourceUnit": 1031,
              "src": "150:35:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1111,
                    "name": "ERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1030,
                    "src": "158:5:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../../utils/Context.sol",
              "id": 1114,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1155,
              "sourceUnit": 1245,
              "src": "186:51:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1113,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1244,
                    "src": "194:7:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1116,
                    "name": "Context",
                    "nameLocations": [
                      "483:7:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1244,
                    "src": "483:7:5"
                  },
                  "id": 1117,
                  "nodeType": "InheritanceSpecifier",
                  "src": "483:7:5"
                },
                {
                  "baseName": {
                    "id": 1118,
                    "name": "ERC20",
                    "nameLocations": [
                      "492:5:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1030,
                    "src": "492:5:5"
                  },
                  "id": 1119,
                  "nodeType": "InheritanceSpecifier",
                  "src": "492:5:5"
                }
              ],
              "canonicalName": "ERC20Burnable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1115,
                "nodeType": "StructuredDocumentation",
                "src": "239:208:5",
                "text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
              },
              "fullyImplemented": true,
              "id": 1154,
              "linearizedBaseContracts": [
                1154,
                1030,
                420,
                1214,
                1108,
                1244
              ],
              "name": "ERC20Burnable",
              "nameLocation": "466:13:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1131,
                    "nodeType": "Block",
                    "src": "662:43:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1126,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1226,
                                "src": "678:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "678:12:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1128,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1122,
                              "src": "692:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1125,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 903,
                            "src": "672:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "672:26:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1130,
                        "nodeType": "ExpressionStatement",
                        "src": "672:26:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1120,
                    "nodeType": "StructuredDocumentation",
                    "src": "504:109:5",
                    "text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
                  },
                  "functionSelector": "42966c68",
                  "id": 1132,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burn",
                  "nameLocation": "627:4:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1123,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1122,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "640:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1132,
                        "src": "632:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1121,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "632:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "631:15:5"
                  },
                  "returnParameters": {
                    "id": 1124,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "662:0:5"
                  },
                  "scope": 1154,
                  "src": "618:87:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1152,
                    "nodeType": "Block",
                    "src": "1086:93:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1141,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1135,
                              "src": "1112:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1142,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1226,
                                "src": "1121:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1143,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1121:12:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1144,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1137,
                              "src": "1135:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1140,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1029,
                            "src": "1096:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1096:45:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1146,
                        "nodeType": "ExpressionStatement",
                        "src": "1096:45:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1148,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1135,
                              "src": "1157:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1149,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1137,
                              "src": "1166:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1147,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 903,
                            "src": "1151:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1151:21:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1151,
                        "nodeType": "ExpressionStatement",
                        "src": "1151:21:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1133,
                    "nodeType": "StructuredDocumentation",
                    "src": "711:305:5",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "79cc6790",
                  "id": 1153,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burnFrom",
                  "nameLocation": "1030:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1138,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1135,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1047:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1153,
                        "src": "1039:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1134,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1039:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1137,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1064:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1153,
                        "src": "1056:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1136,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1056:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1038:32:5"
                  },
                  "returnParameters": {
                    "id": 1139,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1086:0:5"
                  },
                  "scope": 1154,
                  "src": "1021:158:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 1155,
              "src": "448:733:5",
              "usedErrors": [
                390,
                395,
                400,
                409,
                414,
                419
              ],
              "usedEvents": [
                1042,
                1051
              ]
            }
          ],
          "src": "124:1058:5"
        },
        "id": 5
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
          "exportedSymbols": {
            "ERC20": [
              1030
            ],
            "ERC20Pausable": [
              1188
            ],
            "Pausable": [
              1352
            ]
          },
          "id": 1189,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1156,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "124:24:6"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "../ERC20.sol",
              "id": 1158,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1189,
              "sourceUnit": 1031,
              "src": "150:35:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1157,
                    "name": "ERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1030,
                    "src": "158:5:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
              "file": "../../../utils/Pausable.sol",
              "id": 1160,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1189,
              "sourceUnit": 1353,
              "src": "186:53:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1159,
                    "name": "Pausable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1352,
                    "src": "194:8:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1162,
                    "name": "ERC20",
                    "nameLocations": [
                      "965:5:6"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1030,
                    "src": "965:5:6"
                  },
                  "id": 1163,
                  "nodeType": "InheritanceSpecifier",
                  "src": "965:5:6"
                },
                {
                  "baseName": {
                    "id": 1164,
                    "name": "Pausable",
                    "nameLocations": [
                      "972:8:6"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1352,
                    "src": "972:8:6"
                  },
                  "id": 1165,
                  "nodeType": "InheritanceSpecifier",
                  "src": "972:8:6"
                }
              ],
              "canonicalName": "ERC20Pausable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1161,
                "nodeType": "StructuredDocumentation",
                "src": "241:688:6",
                "text": " @dev ERC-20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."
              },
              "fullyImplemented": true,
              "id": 1188,
              "linearizedBaseContracts": [
                1188,
                1352,
                1030,
                420,
                1214,
                1108,
                1244
              ],
              "name": "ERC20Pausable",
              "nameLocation": "948:13:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    837
                  ],
                  "body": {
                    "id": 1186,
                    "nodeType": "Block",
                    "src": "1211:47:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1181,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1168,
                              "src": "1235:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1182,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1170,
                              "src": "1241:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1183,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1172,
                              "src": "1245:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1178,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -25,
                              "src": "1221:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC20Pausable_$1188_$",
                                "typeString": "type(contract super ERC20Pausable)"
                              }
                            },
                            "id": 1180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1227:7:6",
                            "memberName": "_update",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 837,
                            "src": "1221:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1221:30:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1185,
                        "nodeType": "ExpressionStatement",
                        "src": "1221:30:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1166,
                    "nodeType": "StructuredDocumentation",
                    "src": "987:121:6",
                    "text": " @dev See {ERC20-_update}.\n Requirements:\n - the contract must not be paused."
                  },
                  "id": 1187,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1176,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1175,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "1197:13:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1277,
                        "src": "1197:13:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1197:13:6"
                    }
                  ],
                  "name": "_update",
                  "nameLocation": "1122:7:6",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1174,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1188:8:6"
                  },
                  "parameters": {
                    "id": 1173,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1168,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1138:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1187,
                        "src": "1130:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1167,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1130:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1170,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1152:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1187,
                        "src": "1144:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1169,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1144:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1172,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1164:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1187,
                        "src": "1156:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1171,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1156:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1129:41:6"
                  },
                  "returnParameters": {
                    "id": 1177,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1211:0:6"
                  },
                  "scope": 1188,
                  "src": "1113:145:6",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1189,
              "src": "930:330:6",
              "usedErrors": [
                390,
                395,
                400,
                409,
                414,
                419,
                1266,
                1269
              ],
              "usedEvents": [
                1042,
                1051,
                1258,
                1263
              ]
            }
          ],
          "src": "124:1137:6"
        },
        "id": 6
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              1108
            ],
            "IERC20Metadata": [
              1214
            ]
          },
          "id": 1215,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1190,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "125:24:7"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 1192,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1215,
              "sourceUnit": 1109,
              "src": "151:37:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1191,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1108,
                    "src": "159:6:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1194,
                    "name": "IERC20",
                    "nameLocations": [
                      "306:6:7"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1108,
                    "src": "306:6:7"
                  },
                  "id": 1195,
                  "nodeType": "InheritanceSpecifier",
                  "src": "306:6:7"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1193,
                "nodeType": "StructuredDocumentation",
                "src": "190:87:7",
                "text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
              },
              "fullyImplemented": false,
              "id": 1214,
              "linearizedBaseContracts": [
                1214,
                1108
              ],
              "name": "IERC20Metadata",
              "nameLocation": "288:14:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1196,
                    "nodeType": "StructuredDocumentation",
                    "src": "319:54:7",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 1201,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "387:4:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1197,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "391:2:7"
                  },
                  "returnParameters": {
                    "id": 1200,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1199,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1201,
                        "src": "417:13:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1198,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "417:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "416:15:7"
                  },
                  "scope": 1214,
                  "src": "378:54:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1202,
                    "nodeType": "StructuredDocumentation",
                    "src": "438:56:7",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 1207,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "508:6:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1203,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "514:2:7"
                  },
                  "returnParameters": {
                    "id": 1206,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1205,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1207,
                        "src": "540:13:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1204,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "540:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "539:15:7"
                  },
                  "scope": 1214,
                  "src": "499:56:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1208,
                    "nodeType": "StructuredDocumentation",
                    "src": "561:65:7",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 1213,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "640:8:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1209,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "648:2:7"
                  },
                  "returnParameters": {
                    "id": 1212,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1211,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1213,
                        "src": "674:5:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1210,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "673:7:7"
                  },
                  "scope": 1214,
                  "src": "631:50:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1215,
              "src": "278:405:7",
              "usedErrors": [],
              "usedEvents": [
                1042,
                1051
              ]
            }
          ],
          "src": "125:559:7"
        },
        "id": 7
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              1244
            ]
          },
          "id": 1245,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1216,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:8"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1217,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:8",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 1244,
              "linearizedBaseContracts": [
                1244
              ],
              "name": "Context",
              "nameLocation": "642:7:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1225,
                    "nodeType": "Block",
                    "src": "718:34:8",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1222,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:8",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1221,
                        "id": 1224,
                        "nodeType": "Return",
                        "src": "728:17:8"
                      }
                    ]
                  },
                  "id": 1226,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1218,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:8"
                  },
                  "returnParameters": {
                    "id": 1221,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1220,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1226,
                        "src": "709:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1219,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:8"
                  },
                  "scope": 1244,
                  "src": "656:96:8",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1234,
                    "nodeType": "Block",
                    "src": "825:32:8",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1231,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:8",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 1230,
                        "id": 1233,
                        "nodeType": "Return",
                        "src": "835:15:8"
                      }
                    ]
                  },
                  "id": 1235,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1227,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:8"
                  },
                  "returnParameters": {
                    "id": 1230,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1229,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1235,
                        "src": "809:14:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1228,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:8"
                  },
                  "scope": 1244,
                  "src": "758:99:8",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1242,
                    "nodeType": "Block",
                    "src": "935:25:8",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 1240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1239,
                        "id": 1241,
                        "nodeType": "Return",
                        "src": "945:8:8"
                      }
                    ]
                  },
                  "id": 1243,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1236,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:8"
                  },
                  "returnParameters": {
                    "id": 1239,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1238,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1243,
                        "src": "926:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1237,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:8"
                  },
                  "scope": 1244,
                  "src": "863:97:8",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1245,
              "src": "624:338:8",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:8"
        },
        "id": 8
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
          "exportedSymbols": {
            "Context": [
              1244
            ],
            "Pausable": [
              1352
            ]
          },
          "id": 1353,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1246,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:9"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 1248,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1353,
              "sourceUnit": 1245,
              "src": "128:45:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1247,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1244,
                    "src": "136:7:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1250,
                    "name": "Context",
                    "nameLocations": [
                      "645:7:9"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1244,
                    "src": "645:7:9"
                  },
                  "id": 1251,
                  "nodeType": "InheritanceSpecifier",
                  "src": "645:7:9"
                }
              ],
              "canonicalName": "Pausable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1249,
                "nodeType": "StructuredDocumentation",
                "src": "175:439:9",
                "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
              },
              "fullyImplemented": true,
              "id": 1352,
              "linearizedBaseContracts": [
                1352,
                1244
              ],
              "name": "Pausable",
              "nameLocation": "633:8:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1253,
                  "mutability": "mutable",
                  "name": "_paused",
                  "nameLocation": "672:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1352,
                  "src": "659:20:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1252,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1254,
                    "nodeType": "StructuredDocumentation",
                    "src": "686:73:9",
                    "text": " @dev Emitted when the pause is triggered by `account`."
                  },
                  "eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
                  "id": 1258,
                  "name": "Paused",
                  "nameLocation": "770:6:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1257,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1256,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "785:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1258,
                        "src": "777:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1255,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "777:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "776:17:9"
                  },
                  "src": "764:30:9"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1259,
                    "nodeType": "StructuredDocumentation",
                    "src": "800:70:9",
                    "text": " @dev Emitted when the pause is lifted by `account`."
                  },
                  "eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
                  "id": 1263,
                  "name": "Unpaused",
                  "nameLocation": "881:8:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1262,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1261,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "898:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1263,
                        "src": "890:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1260,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "890:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "889:17:9"
                  },
                  "src": "875:32:9"
                },
                {
                  "documentation": {
                    "id": 1264,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:76:9",
                    "text": " @dev The operation failed because the contract is paused."
                  },
                  "errorSelector": "d93c0665",
                  "id": 1266,
                  "name": "EnforcedPause",
                  "nameLocation": "1000:13:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1265,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1013:2:9"
                  },
                  "src": "994:22:9"
                },
                {
                  "documentation": {
                    "id": 1267,
                    "nodeType": "StructuredDocumentation",
                    "src": "1022:80:9",
                    "text": " @dev The operation failed because the contract is not paused."
                  },
                  "errorSelector": "8dfc202b",
                  "id": 1269,
                  "name": "ExpectedPause",
                  "nameLocation": "1113:13:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1268,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1126:2:9"
                  },
                  "src": "1107:22:9"
                },
                {
                  "body": {
                    "id": 1276,
                    "nodeType": "Block",
                    "src": "1340:47:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1272,
                            "name": "_requireNotPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1306,
                            "src": "1350:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 1273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1350:19:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1274,
                        "nodeType": "ExpressionStatement",
                        "src": "1350:19:9"
                      },
                      {
                        "id": 1275,
                        "nodeType": "PlaceholderStatement",
                        "src": "1379:1:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1270,
                    "nodeType": "StructuredDocumentation",
                    "src": "1135:175:9",
                    "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 1277,
                  "name": "whenNotPaused",
                  "nameLocation": "1324:13:9",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1271,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1337:2:9"
                  },
                  "src": "1315:72:9",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1284,
                    "nodeType": "Block",
                    "src": "1587:44:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1280,
                            "name": "_requirePaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1319,
                            "src": "1597:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 1281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1597:16:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1282,
                        "nodeType": "ExpressionStatement",
                        "src": "1597:16:9"
                      },
                      {
                        "id": 1283,
                        "nodeType": "PlaceholderStatement",
                        "src": "1623:1:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1278,
                    "nodeType": "StructuredDocumentation",
                    "src": "1393:167:9",
                    "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 1285,
                  "name": "whenPaused",
                  "nameLocation": "1574:10:9",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1279,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1584:2:9"
                  },
                  "src": "1565:66:9",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1293,
                    "nodeType": "Block",
                    "src": "1779:31:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 1291,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1253,
                          "src": "1796:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1290,
                        "id": 1292,
                        "nodeType": "Return",
                        "src": "1789:14:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1286,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:84:9",
                    "text": " @dev Returns true if the contract is paused, and false otherwise."
                  },
                  "functionSelector": "5c975abb",
                  "id": 1294,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "paused",
                  "nameLocation": "1735:6:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1287,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1741:2:9"
                  },
                  "returnParameters": {
                    "id": 1290,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1289,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1294,
                        "src": "1773:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1288,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1773:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1772:6:9"
                  },
                  "scope": 1352,
                  "src": "1726:84:9",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1305,
                    "nodeType": "Block",
                    "src": "1929:77:9",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1298,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1294,
                            "src": "1943:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 1299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1943:8:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1304,
                        "nodeType": "IfStatement",
                        "src": "1939:61:9",
                        "trueBody": {
                          "id": 1303,
                          "nodeType": "Block",
                          "src": "1953:47:9",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1300,
                                  "name": "EnforcedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1266,
                                  "src": "1974:13:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1301,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1974:15:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1302,
                              "nodeType": "RevertStatement",
                              "src": "1967:22:9"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1295,
                    "nodeType": "StructuredDocumentation",
                    "src": "1816:57:9",
                    "text": " @dev Throws if the contract is paused."
                  },
                  "id": 1306,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requireNotPaused",
                  "nameLocation": "1887:17:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1296,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1904:2:9"
                  },
                  "returnParameters": {
                    "id": 1297,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1929:0:9"
                  },
                  "scope": 1352,
                  "src": "1878:128:9",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1318,
                    "nodeType": "Block",
                    "src": "2126:78:9",
                    "statements": [
                      {
                        "condition": {
                          "id": 1312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2140:9:9",
                          "subExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1310,
                              "name": "paused",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1294,
                              "src": "2141:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                "typeString": "function () view returns (bool)"
                              }
                            },
                            "id": 1311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2141:8:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1317,
                        "nodeType": "IfStatement",
                        "src": "2136:62:9",
                        "trueBody": {
                          "id": 1316,
                          "nodeType": "Block",
                          "src": "2151:47:9",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1313,
                                  "name": "ExpectedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1269,
                                  "src": "2172:13:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1314,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2172:15:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1315,
                              "nodeType": "RevertStatement",
                              "src": "2165:22:9"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1307,
                    "nodeType": "StructuredDocumentation",
                    "src": "2012:61:9",
                    "text": " @dev Throws if the contract is not paused."
                  },
                  "id": 1319,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requirePaused",
                  "nameLocation": "2087:14:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1308,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2101:2:9"
                  },
                  "returnParameters": {
                    "id": 1309,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2126:0:9"
                  },
                  "scope": 1352,
                  "src": "2078:126:9",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1334,
                    "nodeType": "Block",
                    "src": "2388:66:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 1327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1325,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1253,
                            "src": "2398:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2408:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2398:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1328,
                        "nodeType": "ExpressionStatement",
                        "src": "2398:14:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1330,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1226,
                                "src": "2434:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1331,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2434:12:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1329,
                            "name": "Paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1258,
                            "src": "2427:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2427:20:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1333,
                        "nodeType": "EmitStatement",
                        "src": "2422:25:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1320,
                    "nodeType": "StructuredDocumentation",
                    "src": "2210:124:9",
                    "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 1335,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1323,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1322,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "2374:13:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1277,
                        "src": "2374:13:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2374:13:9"
                    }
                  ],
                  "name": "_pause",
                  "nameLocation": "2348:6:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1321,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2354:2:9"
                  },
                  "returnParameters": {
                    "id": 1324,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2388:0:9"
                  },
                  "scope": 1352,
                  "src": "2339:115:9",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1350,
                    "nodeType": "Block",
                    "src": "2634:69:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 1343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1341,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1253,
                            "src": "2644:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 1342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2654:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2644:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1344,
                        "nodeType": "ExpressionStatement",
                        "src": "2644:15:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1346,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1226,
                                "src": "2683:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1347,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2683:12:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1345,
                            "name": "Unpaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1263,
                            "src": "2674:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2674:22:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1349,
                        "nodeType": "EmitStatement",
                        "src": "2669:27:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1336,
                    "nodeType": "StructuredDocumentation",
                    "src": "2460:121:9",
                    "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 1351,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1339,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1338,
                        "name": "whenPaused",
                        "nameLocations": [
                          "2623:10:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1285,
                        "src": "2623:10:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2623:10:9"
                    }
                  ],
                  "name": "_unpause",
                  "nameLocation": "2595:8:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1337,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2603:2:9"
                  },
                  "returnParameters": {
                    "id": 1340,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2634:0:9"
                  },
                  "scope": 1352,
                  "src": "2586:117:9",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1353,
              "src": "615:2090:9",
              "usedErrors": [
                1266,
                1269
              ],
              "usedEvents": [
                1258,
                1263
              ]
            }
          ],
          "src": "102:2604:9"
        },
        "id": 9
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
          "exportedSymbols": {
            "ERC165": [
              1376
            ],
            "IERC165": [
              1388
            ]
          },
          "id": 1377,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1354,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "114:24:10"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "file": "./IERC165.sol",
              "id": 1356,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1377,
              "sourceUnit": 1389,
              "src": "140:38:10",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1355,
                    "name": "IERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1388,
                    "src": "148:7:10",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1358,
                    "name": "IERC165",
                    "nameLocations": [
                      "688:7:10"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1388,
                    "src": "688:7:10"
                  },
                  "id": 1359,
                  "nodeType": "InheritanceSpecifier",
                  "src": "688:7:10"
                }
              ],
              "canonicalName": "ERC165",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1357,
                "nodeType": "StructuredDocumentation",
                "src": "180:479:10",
                "text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
              },
              "fullyImplemented": true,
              "id": 1376,
              "linearizedBaseContracts": [
                1376,
                1388
              ],
              "name": "ERC165",
              "nameLocation": "678:6:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    1387
                  ],
                  "body": {
                    "id": 1374,
                    "nodeType": "Block",
                    "src": "845:64:10",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 1372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1367,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1362,
                            "src": "862:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1369,
                                  "name": "IERC165",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1388,
                                  "src": "882:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC165_$1388_$",
                                    "typeString": "type(contract IERC165)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_IERC165_$1388_$",
                                    "typeString": "type(contract IERC165)"
                                  }
                                ],
                                "id": 1368,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "877:4:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1370,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "877:13:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1388",
                                "typeString": "type(contract IERC165)"
                              }
                            },
                            "id": 1371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "891:11:10",
                            "memberName": "interfaceId",
                            "nodeType": "MemberAccess",
                            "src": "877:25:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "862:40:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1366,
                        "id": 1373,
                        "nodeType": "Return",
                        "src": "855:47:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1360,
                    "nodeType": "StructuredDocumentation",
                    "src": "702:56:10",
                    "text": " @dev See {IERC165-supportsInterface}."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 1375,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "772:17:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1363,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1362,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "797:11:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1375,
                        "src": "790:18:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1361,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "790:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "789:20:10"
                  },
                  "returnParameters": {
                    "id": 1366,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1365,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1375,
                        "src": "839:4:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1364,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "839:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "838:6:10"
                  },
                  "scope": 1376,
                  "src": "763:146:10",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 1377,
              "src": "660:251:10",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "114:798:10"
        },
        "id": 10
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              1388
            ]
          },
          "id": 1389,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1378,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "115:24:11"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC165",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1379,
                "nodeType": "StructuredDocumentation",
                "src": "141:280:11",
                "text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
              },
              "fullyImplemented": false,
              "id": 1388,
              "linearizedBaseContracts": [
                1388
              ],
              "name": "IERC165",
              "nameLocation": "432:7:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1380,
                    "nodeType": "StructuredDocumentation",
                    "src": "446:340:11",
                    "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 1387,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "800:17:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1383,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1382,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "825:11:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1387,
                        "src": "818:18:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1381,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "818:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "817:20:11"
                  },
                  "returnParameters": {
                    "id": 1386,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1385,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1387,
                        "src": "861:4:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1384,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "861:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "860:6:11"
                  },
                  "scope": 1388,
                  "src": "791:76:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1389,
              "src": "422:447:11",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "115:755:11"
        },
        "id": 11
      },
      "contracts/CampusCredit.sol": {
        "ast": {
          "absolutePath": "contracts/CampusCredit.sol",
          "exportedSymbols": {
            "AccessControl": [
              295
            ],
            "CampusCredit": [
              1929
            ],
            "ERC20": [
              1030
            ],
            "ERC20Burnable": [
              1154
            ],
            "ERC20Pausable": [
              1188
            ]
          },
          "id": 1930,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1390,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".26"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:12"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "id": 1392,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1930,
              "sourceUnit": 1031,
              "src": "58:68:12",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1391,
                    "name": "ERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1030,
                    "src": "66:5:12",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
              "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
              "id": 1394,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1930,
              "sourceUnit": 1155,
              "src": "127:95:12",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1393,
                    "name": "ERC20Burnable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1154,
                    "src": "135:13:12",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
              "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
              "id": 1396,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1930,
              "sourceUnit": 1189,
              "src": "223:95:12",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1395,
                    "name": "ERC20Pausable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1188,
                    "src": "231:13:12",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
              "file": "@openzeppelin/contracts/access/AccessControl.sol",
              "id": 1398,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1930,
              "sourceUnit": 296,
              "src": "319:79:12",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1397,
                    "name": "AccessControl",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 295,
                    "src": "327:13:12",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1400,
                    "name": "ERC20",
                    "nameLocations": [
                      "629:5:12"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1030,
                    "src": "629:5:12"
                  },
                  "id": 1401,
                  "nodeType": "InheritanceSpecifier",
                  "src": "629:5:12"
                },
                {
                  "baseName": {
                    "id": 1402,
                    "name": "ERC20Burnable",
                    "nameLocations": [
                      "636:13:12"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1154,
                    "src": "636:13:12"
                  },
                  "id": 1403,
                  "nodeType": "InheritanceSpecifier",
                  "src": "636:13:12"
                },
                {
                  "baseName": {
                    "id": 1404,
                    "name": "ERC20Pausable",
                    "nameLocations": [
                      "651:13:12"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1188,
                    "src": "651:13:12"
                  },
                  "id": 1405,
                  "nodeType": "InheritanceSpecifier",
                  "src": "651:13:12"
                },
                {
                  "baseName": {
                    "id": 1406,
                    "name": "AccessControl",
                    "nameLocations": [
                      "666:13:12"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 295,
                    "src": "666:13:12"
                  },
                  "id": 1407,
                  "nodeType": "InheritanceSpecifier",
                  "src": "666:13:12"
                }
              ],
              "canonicalName": "CampusCredit",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1399,
                "nodeType": "StructuredDocumentation",
                "src": "400:203:12",
                "text": " @title CampusCredit\n @dev ERC-20 token untuk transaksi dalam kampus\n Use cases:\n - Pembayaran di kafetaria\n - Biaya printing dan fotokopi\n - Laundry service\n - Peminjaman equipment"
              },
              "fullyImplemented": true,
              "id": 1929,
              "linearizedBaseContracts": [
                1929,
                295,
                1376,
                1388,
                378,
                1188,
                1352,
                1154,
                1030,
                420,
                1214,
                1108,
                1244
              ],
              "name": "CampusCredit",
              "nameLocation": "613:12:12",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "functionSelector": "e63ab1e9",
                  "id": 1412,
                  "mutability": "constant",
                  "name": "PAUSER_ROLE",
                  "nameLocation": "745:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1929,
                  "src": "721:62:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1408,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "721:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "5041555345525f524f4c45",
                        "id": 1410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "769:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                          "typeString": "literal_string \"PAUSER_ROLE\""
                        },
                        "value": "PAUSER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                          "typeString": "literal_string \"PAUSER_ROLE\""
                        }
                      ],
                      "id": 1409,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "759:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "759:24:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "d5391393",
                  "id": 1417,
                  "mutability": "constant",
                  "name": "MINTER_ROLE",
                  "nameLocation": "813:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1929,
                  "src": "789:62:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1413,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "789:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "4d494e5445525f524f4c45",
                        "id": 1415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "837:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        },
                        "value": "MINTER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        }
                      ],
                      "id": 1414,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "827:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "827:24:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "257caf9e",
                  "id": 1421,
                  "mutability": "mutable",
                  "name": "dailySpendingLimit",
                  "nameLocation": "933:18:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1929,
                  "src": "898:53:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 1420,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1418,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "906:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "898:27:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1419,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "917:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8aeac501",
                  "id": 1425,
                  "mutability": "mutable",
                  "name": "spentToday",
                  "nameLocation": "992:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1929,
                  "src": "957:45:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 1424,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1422,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "965:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "957:27:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1423,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "976:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "251de801",
                  "id": 1429,
                  "mutability": "mutable",
                  "name": "lastSpendingReset",
                  "nameLocation": "1043:17:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1929,
                  "src": "1008:52:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 1428,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1426,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1016:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1008:27:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1427,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1027:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "1a2f7167",
                  "id": 1433,
                  "mutability": "mutable",
                  "name": "isMerchant",
                  "nameLocation": "1125:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1929,
                  "src": "1093:42:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 1432,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1430,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1101:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1093:24:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1431,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1112:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "60caa609",
                  "id": 1437,
                  "mutability": "mutable",
                  "name": "merchantName",
                  "nameLocation": "1175:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1929,
                  "src": "1141:46:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                    "typeString": "mapping(address => string)"
                  },
                  "typeName": {
                    "id": 1436,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1434,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1149:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1141:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                      "typeString": "mapping(address => string)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1435,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "1160:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "eventSelector": "9b66a6e551cb32ff1fa78830f83b93be1aa031a3b2bd93aa16818d97ba5602a1",
                  "id": 1447,
                  "name": "TransferWithCashback",
                  "nameLocation": "1214:20:12",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1446,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1439,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1260:4:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1447,
                        "src": "1244:20:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1438,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1244:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1441,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "merchant",
                        "nameLocation": "1290:8:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1447,
                        "src": "1274:24:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1440,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1274:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1443,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1316:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1447,
                        "src": "1308:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1442,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1308:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1445,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "cashback",
                        "nameLocation": "1340:8:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1447,
                        "src": "1332:16:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1444,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1332:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1234:120:12"
                  },
                  "src": "1208:147:12"
                },
                {
                  "body": {
                    "id": 1483,
                    "nodeType": "Block",
                    "src": "1408:448:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1455,
                              "name": "DEFAULT_ADMIN_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "1528:18:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 1456,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1548:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1457,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1552:6:12",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1548:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1454,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "1517:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 1458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1517:42:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1459,
                        "nodeType": "ExpressionStatement",
                        "src": "1517:42:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1461,
                              "name": "PAUSER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1412,
                              "src": "1626:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 1462,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1639:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1643:6:12",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1639:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1460,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "1615:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 1464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1615:35:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1465,
                        "nodeType": "ExpressionStatement",
                        "src": "1615:35:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1467,
                              "name": "MINTER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1417,
                              "src": "1717:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 1468,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1730:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1469,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1734:6:12",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1730:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1466,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "1706:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 1470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1706:35:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1471,
                        "nodeType": "ExpressionStatement",
                        "src": "1706:35:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1473,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1808:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1812:6:12",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1808:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1480,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "315f3030305f303030",
                                "id": 1475,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1820:9:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                },
                                "value": "1_000_000"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1479,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 1476,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1832:2:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 1477,
                                    "name": "decimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 594,
                                    "src": "1838:8:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view returns (uint8)"
                                    }
                                  },
                                  "id": 1478,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1838:10:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "1832:16:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1820:28:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1472,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 870,
                            "src": "1802:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1802:47:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1482,
                        "nodeType": "ExpressionStatement",
                        "src": "1802:47:12"
                      }
                    ]
                  },
                  "id": 1484,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "hexValue": "43616d70757320437265646974",
                          "id": 1450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1381:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_b0b1590f9cb680acdef26d2e03b64ceae00a46f1623bedd71daa1b471b4ba0d1",
                            "typeString": "literal_string \"Campus Credit\""
                          },
                          "value": "Campus Credit"
                        },
                        {
                          "hexValue": "435245444954",
                          "id": 1451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1398:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_e183fcc7137c4abd2b9e2d583d9ad7673e069bba99e13fdd3290ef2d378aa2ef",
                            "typeString": "literal_string \"CREDIT\""
                          },
                          "value": "CREDIT"
                        }
                      ],
                      "id": 1452,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1449,
                        "name": "ERC20",
                        "nameLocations": [
                          "1375:5:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1030,
                        "src": "1375:5:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1375:32:12"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1448,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1372:2:12"
                  },
                  "returnParameters": {
                    "id": 1453,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1408:0:12"
                  },
                  "scope": 1929,
                  "src": "1361:495:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1500,
                    "nodeType": "Block",
                    "src": "1984:186:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1490,
                                  "name": "PAUSER_ROLE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1412,
                                  "src": "2093:11:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1491,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2106:3:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1492,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2110:6:12",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2106:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1489,
                                "name": "hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80,
                                "src": "2085:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 1493,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2085:32:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616c6c6572206973206e6f7420612070617573303072",
                              "id": 1494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2119:25:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_280f51dd4b2d9aac10d97a682ab568ef4a4c97c88f4fba0273878925c25fa0f2",
                                "typeString": "literal_string \"Caller is not a paus00r\""
                              },
                              "value": "Caller is not a paus00r"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_280f51dd4b2d9aac10d97a682ab568ef4a4c97c88f4fba0273878925c25fa0f2",
                                "typeString": "literal_string \"Caller is not a paus00r\""
                              }
                            ],
                            "id": 1488,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2077:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2077:68:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1496,
                        "nodeType": "ExpressionStatement",
                        "src": "2077:68:12"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1497,
                            "name": "_pause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1335,
                            "src": "2155:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2155:8:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1499,
                        "nodeType": "ExpressionStatement",
                        "src": "2155:8:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1485,
                    "nodeType": "StructuredDocumentation",
                    "src": "1862:93:12",
                    "text": " @dev Pause all token transfers\n Use case: Emergency atau maintenance"
                  },
                  "functionSelector": "8456cb59",
                  "id": 1501,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "pause",
                  "nameLocation": "1969:5:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1486,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1974:2:12"
                  },
                  "returnParameters": {
                    "id": 1487,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1984:0:12"
                  },
                  "scope": 1929,
                  "src": "1960:210:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1516,
                    "nodeType": "Block",
                    "src": "2202:140:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1506,
                                  "name": "PAUSER_ROLE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1412,
                                  "src": "2263:11:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1507,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2276:3:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1508,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2280:6:12",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2276:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1505,
                                "name": "hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80,
                                "src": "2255:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 1509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2255:32:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616c6c6572206973206e6f7420612070617573303072",
                              "id": 1510,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2289:25:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_280f51dd4b2d9aac10d97a682ab568ef4a4c97c88f4fba0273878925c25fa0f2",
                                "typeString": "literal_string \"Caller is not a paus00r\""
                              },
                              "value": "Caller is not a paus00r"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_280f51dd4b2d9aac10d97a682ab568ef4a4c97c88f4fba0273878925c25fa0f2",
                                "typeString": "literal_string \"Caller is not a paus00r\""
                              }
                            ],
                            "id": 1504,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2247:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2247:68:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1512,
                        "nodeType": "ExpressionStatement",
                        "src": "2247:68:12"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1513,
                            "name": "_unpause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1351,
                            "src": "2325:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2325:10:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1515,
                        "nodeType": "ExpressionStatement",
                        "src": "2325:10:12"
                      }
                    ]
                  },
                  "functionSelector": "3f4ba83a",
                  "id": 1517,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "unpause",
                  "nameLocation": "2185:7:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1502,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2192:2:12"
                  },
                  "returnParameters": {
                    "id": 1503,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2202:0:12"
                  },
                  "scope": 1929,
                  "src": "2176:166:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1572,
                    "nodeType": "Block",
                    "src": "2481:500:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1527,
                                  "name": "MINTER_ROLE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1417,
                                  "src": "2631:11:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1528,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2644:3:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1529,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2648:6:12",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2644:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1526,
                                "name": "hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80,
                                "src": "2623:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 1530,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2623:32:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616c6c6572206973206e6f742061206d696e746572",
                              "id": 1531,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2657:24:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf",
                                "typeString": "literal_string \"Caller is not a minter\""
                              },
                              "value": "Caller is not a minter"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf",
                                "typeString": "literal_string \"Caller is not a minter\""
                              }
                            ],
                            "id": 1525,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2615:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2615:67:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1533,
                        "nodeType": "ExpressionStatement",
                        "src": "2615:67:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1535,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1522,
                                "src": "2700:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1536,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2709:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2700:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
                              "id": 1538,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2712:34:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
                                "typeString": "literal_string \"Amount must be greater than zero\""
                              },
                              "value": "Amount must be greater than zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
                                "typeString": "literal_string \"Amount must be greater than zero\""
                              }
                            ],
                            "id": 1534,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2692:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2692:55:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1540,
                        "nodeType": "ExpressionStatement",
                        "src": "2692:55:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1547,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1542,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1520,
                                "src": "2765:2:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1545,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2779:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1544,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2771:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1543,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2771:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1546,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2771:10:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2765:16:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e6e6f74206d696e7420746f207a65726f2061646472657373",
                              "id": 1548,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2783:29:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9",
                                "typeString": "literal_string \"Cannot mint to zero address\""
                              },
                              "value": "Cannot mint to zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9",
                                "typeString": "literal_string \"Cannot mint to zero address\""
                              }
                            ],
                            "id": 1541,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2757:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2757:56:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1550,
                        "nodeType": "ExpressionStatement",
                        "src": "2757:56:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1556,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "id": 1553,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1520,
                                      "src": "2854:2:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1552,
                                    "name": "balanceOf",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 616,
                                    "src": "2844:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view returns (uint256)"
                                    }
                                  },
                                  "id": 1554,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2844:13:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 1555,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1522,
                                  "src": "2860:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2844:22:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1562,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "315f3030305f303030",
                                  "id": 1557,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2870:9:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000_by_1",
                                    "typeString": "int_const 1000000"
                                  },
                                  "value": "1_000_000"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1561,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3130",
                                    "id": 1558,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2882:2:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 1559,
                                      "name": "decimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 594,
                                      "src": "2888:8:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                        "typeString": "function () view returns (uint8)"
                                      }
                                    },
                                    "id": 1560,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2888:10:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "src": "2882:16:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2870:28:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2844:54:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d696e74696e67206c696d6974206578636565646564",
                              "id": 1564,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2912:24:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5a56aca9391f1fa989756252b3eedac50c830c68a92d7f8bc00446bc8dd728b9",
                                "typeString": "literal_string \"Minting limit exceeded\""
                              },
                              "value": "Minting limit exceeded"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5a56aca9391f1fa989756252b3eedac50c830c68a92d7f8bc00446bc8dd728b9",
                                "typeString": "literal_string \"Minting limit exceeded\""
                              }
                            ],
                            "id": 1551,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2823:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2823:123:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1566,
                        "nodeType": "ExpressionStatement",
                        "src": "2823:123:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1568,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1520,
                              "src": "2963:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1569,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1522,
                              "src": "2967:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1567,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 870,
                            "src": "2957:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2957:17:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1571,
                        "nodeType": "ExpressionStatement",
                        "src": "2957:17:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1518,
                    "nodeType": "StructuredDocumentation",
                    "src": "2348:79:12",
                    "text": " @dev Mint new tokens\n Use case: Top-up saldo mahasiswa"
                  },
                  "functionSelector": "40c10f19",
                  "id": 1573,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mint",
                  "nameLocation": "2441:4:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1523,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1520,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2454:2:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1573,
                        "src": "2446:10:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1519,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2446:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1522,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2466:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1573,
                        "src": "2458:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1521,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2458:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2445:28:12"
                  },
                  "returnParameters": {
                    "id": 1524,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2481:0:12"
                  },
                  "scope": 1929,
                  "src": "2432:549:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1625,
                    "nodeType": "Block",
                    "src": "3202:355:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1590,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1585,
                                "name": "merchant",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1576,
                                "src": "3277:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1588,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3297:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1587,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3289:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1586,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3289:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1589,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3289:10:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3277:22:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964206d65726368616e742061646472657373",
                              "id": 1591,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3301:26:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9e97933809d36609dc0e60ec9fa94106f35937d2c2d362ba775655fdaa86bd8a",
                                "typeString": "literal_string \"Invalid merchant address\""
                              },
                              "value": "Invalid merchant address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9e97933809d36609dc0e60ec9fa94106f35937d2c2d362ba775655fdaa86bd8a",
                                "typeString": "literal_string \"Invalid merchant address\""
                              }
                            ],
                            "id": 1584,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3269:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3269:59:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1593,
                        "nodeType": "ExpressionStatement",
                        "src": "3269:59:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1601,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1597,
                                      "name": "name",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1578,
                                      "src": "3352:4:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    ],
                                    "id": 1596,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3346:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                      "typeString": "type(bytes storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 1595,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3346:5:12",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1598,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3346:11:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 1599,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3358:6:12",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "3346:18:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1600,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3367:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3346:22:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d65726368616e74206e616d652063616e6e6f7420626520656d707479",
                              "id": 1602,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3370:31:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f53a24e56c3d863b5ed56a4089a9290fc00844c63109070e1d585d687f90ed4c",
                                "typeString": "literal_string \"Merchant name cannot be empty\""
                              },
                              "value": "Merchant name cannot be empty"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f53a24e56c3d863b5ed56a4089a9290fc00844c63109070e1d585d687f90ed4c",
                                "typeString": "literal_string \"Merchant name cannot be empty\""
                              }
                            ],
                            "id": 1594,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3338:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3338:64:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1604,
                        "nodeType": "ExpressionStatement",
                        "src": "3338:64:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1609,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "3420:21:12",
                              "subExpression": {
                                "baseExpression": {
                                  "id": 1606,
                                  "name": "isMerchant",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1433,
                                  "src": "3421:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 1608,
                                "indexExpression": {
                                  "id": 1607,
                                  "name": "merchant",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1576,
                                  "src": "3432:8:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3421:20:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d65726368616e7420616c72656164792072656769737465726564",
                              "id": 1610,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3443:29:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dee17f4db42edcb0841b61c9c04adb525cc97e27b4a06dec39b87ce8db6596f2",
                                "typeString": "literal_string \"Merchant already registered\""
                              },
                              "value": "Merchant already registered"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dee17f4db42edcb0841b61c9c04adb525cc97e27b4a06dec39b87ce8db6596f2",
                                "typeString": "literal_string \"Merchant already registered\""
                              }
                            ],
                            "id": 1605,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3412:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3412:61:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1612,
                        "nodeType": "ExpressionStatement",
                        "src": "3412:61:12"
                      },
                      {
                        "expression": {
                          "id": 1617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1613,
                              "name": "isMerchant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1433,
                              "src": "3484:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1615,
                            "indexExpression": {
                              "id": 1614,
                              "name": "merchant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1576,
                              "src": "3495:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3484:20:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1616,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3507:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3484:27:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1618,
                        "nodeType": "ExpressionStatement",
                        "src": "3484:27:12"
                      },
                      {
                        "expression": {
                          "id": 1623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1619,
                              "name": "merchantName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1437,
                              "src": "3521:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                                "typeString": "mapping(address => string storage ref)"
                              }
                            },
                            "id": 1621,
                            "indexExpression": {
                              "id": 1620,
                              "name": "merchant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1576,
                              "src": "3534:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3521:22:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1622,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1578,
                            "src": "3546:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "3521:29:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 1624,
                        "nodeType": "ExpressionStatement",
                        "src": "3521:29:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1574,
                    "nodeType": "StructuredDocumentation",
                    "src": "2987:88:12",
                    "text": " @dev Register merchant\n Use case: Kafetaria, toko buku, laundry"
                  },
                  "functionSelector": "a6c8a384",
                  "id": 1626,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1581,
                          "name": "DEFAULT_ADMIN_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "3182:18:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 1582,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1580,
                        "name": "onlyRole",
                        "nameLocations": [
                          "3173:8:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "3173:8:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3173:28:12"
                    }
                  ],
                  "name": "registerMerchant",
                  "nameLocation": "3089:16:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1579,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1576,
                        "mutability": "mutable",
                        "name": "merchant",
                        "nameLocation": "3123:8:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1626,
                        "src": "3115:16:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1575,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3115:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1578,
                        "mutability": "mutable",
                        "name": "name",
                        "nameLocation": "3155:4:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1626,
                        "src": "3141:18:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1577,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3141:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3105:60:12"
                  },
                  "returnParameters": {
                    "id": 1583,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3202:0:12"
                  },
                  "scope": 1929,
                  "src": "3080:477:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1673,
                    "nodeType": "Block",
                    "src": "3797:306:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1643,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1638,
                                "name": "student",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1629,
                                "src": "3851:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1641,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3870:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1640,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3862:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1639,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3862:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1642,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3862:10:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3851:21:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642073747564656e742061646472657373",
                              "id": 1644,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3874:25:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3975d1816c3ca2e29b3bbab35c0be7b15164d704eb9cfbad43aedad5b5a01085",
                                "typeString": "literal_string \"Invalid student address\""
                              },
                              "value": "Invalid student address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3975d1816c3ca2e29b3bbab35c0be7b15164d704eb9cfbad43aedad5b5a01085",
                                "typeString": "literal_string \"Invalid student address\""
                              }
                            ],
                            "id": 1637,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3843:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3843:57:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1646,
                        "nodeType": "ExpressionStatement",
                        "src": "3843:57:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1650,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1648,
                                "name": "limit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1631,
                                "src": "3918:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1649,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3926:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3918:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4c696d6974206d7573742062652067726561746572207468616e207a65726f",
                              "id": 1651,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3929:33:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2586c6f2c479ed85c187a54ca5dcfccd81d2a491bb7f43f1a090d05c2cb9ee92",
                                "typeString": "literal_string \"Limit must be greater than zero\""
                              },
                              "value": "Limit must be greater than zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2586c6f2c479ed85c187a54ca5dcfccd81d2a491bb7f43f1a090d05c2cb9ee92",
                                "typeString": "literal_string \"Limit must be greater than zero\""
                              }
                            ],
                            "id": 1647,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3910:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3910:53:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1653,
                        "nodeType": "ExpressionStatement",
                        "src": "3910:53:12"
                      },
                      {
                        "expression": {
                          "id": 1658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1654,
                              "name": "dailySpendingLimit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1421,
                              "src": "3974:18:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1656,
                            "indexExpression": {
                              "id": 1655,
                              "name": "student",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1629,
                              "src": "3993:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3974:27:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1657,
                            "name": "limit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1631,
                            "src": "4004:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3974:35:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1659,
                        "nodeType": "ExpressionStatement",
                        "src": "3974:35:12"
                      },
                      {
                        "expression": {
                          "id": 1665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1660,
                              "name": "lastSpendingReset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1429,
                              "src": "4019:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1662,
                            "indexExpression": {
                              "id": 1661,
                              "name": "student",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1629,
                              "src": "4037:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4019:26:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1663,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "4048:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1664,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4054:9:12",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "4048:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4019:44:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1666,
                        "nodeType": "ExpressionStatement",
                        "src": "4019:44:12"
                      },
                      {
                        "expression": {
                          "id": 1671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1667,
                              "name": "spentToday",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1425,
                              "src": "4073:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1669,
                            "indexExpression": {
                              "id": 1668,
                              "name": "student",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1629,
                              "src": "4084:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4073:19:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1670,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4095:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4073:23:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1672,
                        "nodeType": "ExpressionStatement",
                        "src": "4073:23:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1627,
                    "nodeType": "StructuredDocumentation",
                    "src": "3563:116:12",
                    "text": " @dev Set daily spending limit untuk mahasiswa\n Use case: Parental control atau self-control"
                  },
                  "functionSelector": "2803212f",
                  "id": 1674,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1634,
                          "name": "DEFAULT_ADMIN_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "3777:18:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 1635,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1633,
                        "name": "onlyRole",
                        "nameLocations": [
                          "3768:8:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "3768:8:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3768:28:12"
                    }
                  ],
                  "name": "setDailyLimit",
                  "nameLocation": "3693:13:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1632,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1629,
                        "mutability": "mutable",
                        "name": "student",
                        "nameLocation": "3724:7:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1674,
                        "src": "3716:15:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1628,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3716:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1631,
                        "mutability": "mutable",
                        "name": "limit",
                        "nameLocation": "3749:5:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1674,
                        "src": "3741:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1630,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3741:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3706:54:12"
                  },
                  "returnParameters": {
                    "id": 1636,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3797:0:12"
                  },
                  "scope": 1929,
                  "src": "3684:419:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1774,
                    "nodeType": "Block",
                    "src": "4236:867:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1688,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1683,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1677,
                                "src": "4405:2:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1686,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4419:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1685,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4411:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1684,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4411:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1687,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4411:10:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4405:16:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e6e6f74207472616e7366657220746f207a65726f2061646472657373",
                              "id": 1689,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4423:33:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bb6ef8259868f621162cf2269ec456fd6e3660c295ef634f53db3982172a569f",
                                "typeString": "literal_string \"Cannot transfer to zero address\""
                              },
                              "value": "Cannot transfer to zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bb6ef8259868f621162cf2269ec456fd6e3660c295ef634f53db3982172a569f",
                                "typeString": "literal_string \"Cannot transfer to zero address\""
                              }
                            ],
                            "id": 1682,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4397:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4397:60:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1691,
                        "nodeType": "ExpressionStatement",
                        "src": "4397:60:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1695,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1693,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1679,
                                "src": "4475:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1694,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4484:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4475:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
                              "id": 1696,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4487:34:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
                                "typeString": "literal_string \"Amount must be greater than zero\""
                              },
                              "value": "Amount must be greater than zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
                                "typeString": "literal_string \"Amount must be greater than zero\""
                              }
                            ],
                            "id": 1692,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4467:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4467:55:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1698,
                        "nodeType": "ExpressionStatement",
                        "src": "4467:55:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1705,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1701,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "4550:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1702,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4554:6:12",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "4550:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1700,
                                  "name": "balanceOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 616,
                                  "src": "4540:9:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view returns (uint256)"
                                  }
                                },
                                "id": 1703,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4540:21:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1704,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1679,
                                "src": "4565:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4540:31:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e742062616c616e6365",
                              "id": 1706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4573:22:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                                "typeString": "literal_string \"Insufficient balance\""
                              },
                              "value": "Insufficient balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                                "typeString": "literal_string \"Insufficient balance\""
                              }
                            ],
                            "id": 1699,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4532:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4532:64:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1708,
                        "nodeType": "ExpressionStatement",
                        "src": "4532:64:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1715,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 1710,
                                  "name": "dailySpendingLimit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1421,
                                  "src": "4615:18:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1713,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1711,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4634:3:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1712,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4638:6:12",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4634:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4615:30:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1714,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4648:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4615:34:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4461696c79206c696d6974206e6f7420736574",
                              "id": 1716,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4651:21:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f46a208452d481cbabd737d10144d3db436474a848cac326801210ec7a5aad99",
                                "typeString": "literal_string \"Daily limit not set\""
                              },
                              "value": "Daily limit not set"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f46a208452d481cbabd737d10144d3db436474a848cac326801210ec7a5aad99",
                                "typeString": "literal_string \"Daily limit not set\""
                              }
                            ],
                            "id": 1709,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4607:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4607:66:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1718,
                        "nodeType": "ExpressionStatement",
                        "src": "4607:66:12"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1719,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "4688:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1720,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4694:9:12",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "4688:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 1721,
                                "name": "lastSpendingReset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1429,
                                "src": "4706:17:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 1724,
                              "indexExpression": {
                                "expression": {
                                  "id": 1722,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "4724:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1723,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4728:6:12",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4724:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4706:29:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4688:47:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4739:6:12",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_86400_by_1",
                              "typeString": "int_const 86400"
                            },
                            "value": "1"
                          },
                          "src": "4688:57:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1744,
                        "nodeType": "IfStatement",
                        "src": "4684:175:12",
                        "trueBody": {
                          "id": 1743,
                          "nodeType": "Block",
                          "src": "4747:112:12",
                          "statements": [
                            {
                              "expression": {
                                "id": 1733,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1728,
                                    "name": "spentToday",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1425,
                                    "src": "4761:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1731,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1729,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "4772:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1730,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4776:6:12",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "4772:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4761:22:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 1732,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4786:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "4761:26:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1734,
                              "nodeType": "ExpressionStatement",
                              "src": "4761:26:12"
                            },
                            {
                              "expression": {
                                "id": 1741,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1735,
                                    "name": "lastSpendingReset",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1429,
                                    "src": "4801:17:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1738,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1736,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "4819:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1737,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4823:6:12",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "4819:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4801:29:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 1739,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "4833:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1740,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4839:9:12",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "4833:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4801:47:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1742,
                              "nodeType": "ExpressionStatement",
                              "src": "4801:47:12"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1756,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1751,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 1746,
                                    "name": "spentToday",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1425,
                                    "src": "4890:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1749,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1747,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "4901:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1748,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4905:6:12",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "4901:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4890:22:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 1750,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1679,
                                  "src": "4915:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4890:31:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "baseExpression": {
                                  "id": 1752,
                                  "name": "dailySpendingLimit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1421,
                                  "src": "4925:18:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1755,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1753,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4944:3:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1754,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4948:6:12",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4944:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4925:30:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4890:65:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4461696c79207370656e64696e67206c696d6974206578636565646564",
                              "id": 1757,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4969:31:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0b14ed7c5f1e7324d1cb0362112747b7060ac0bd8d6956f2822396b5cffbc877",
                                "typeString": "literal_string \"Daily spending limit exceeded\""
                              },
                              "value": "Daily spending limit exceeded"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0b14ed7c5f1e7324d1cb0362112747b7060ac0bd8d6956f2822396b5cffbc877",
                                "typeString": "literal_string \"Daily spending limit exceeded\""
                              }
                            ],
                            "id": 1745,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4869:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4869:141:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1759,
                        "nodeType": "ExpressionStatement",
                        "src": "4869:141:12"
                      },
                      {
                        "expression": {
                          "id": 1765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1760,
                              "name": "spentToday",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1425,
                              "src": "5021:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1763,
                            "indexExpression": {
                              "expression": {
                                "id": 1761,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5032:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5036:6:12",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5032:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5021:22:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1764,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1679,
                            "src": "5047:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5021:32:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1766,
                        "nodeType": "ExpressionStatement",
                        "src": "5021:32:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1768,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5073:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5077:6:12",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5073:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1770,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1677,
                              "src": "5085:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1771,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1679,
                              "src": "5089:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1767,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 760,
                            "src": "5063:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5063:33:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1773,
                        "nodeType": "ExpressionStatement",
                        "src": "5063:33:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1675,
                    "nodeType": "StructuredDocumentation",
                    "src": "4109:60:12",
                    "text": " @dev Transfer dengan spending limit check"
                  },
                  "functionSelector": "22083bd0",
                  "id": 1775,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferWithLimit",
                  "nameLocation": "4183:17:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1680,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1677,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4209:2:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1775,
                        "src": "4201:10:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1676,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4201:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1679,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "4221:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1775,
                        "src": "4213:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1678,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4213:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4200:28:12"
                  },
                  "returnParameters": {
                    "id": 1681,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4236:0:12"
                  },
                  "scope": 1929,
                  "src": "4174:929:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    837,
                    1187
                  ],
                  "body": {
                    "id": 1803,
                    "nodeType": "Block",
                    "src": "5658:102:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1791,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "5676:9:12",
                              "subExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1789,
                                  "name": "paused",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1294,
                                  "src": "5677:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                    "typeString": "function () view returns (bool)"
                                  }
                                },
                                "id": 1790,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5677:8:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546f6b656e207472616e736665727320706175736564",
                              "id": 1792,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5687:24:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6da2590c3034ef1da0b0fb0657e080f278b93f51f0369c416eeea6511934843d",
                                "typeString": "literal_string \"Token transfers paused\""
                              },
                              "value": "Token transfers paused"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6da2590c3034ef1da0b0fb0657e080f278b93f51f0369c416eeea6511934843d",
                                "typeString": "literal_string \"Token transfers paused\""
                              }
                            ],
                            "id": 1788,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5668:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5668:44:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1794,
                        "nodeType": "ExpressionStatement",
                        "src": "5668:44:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1798,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1778,
                              "src": "5737:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1799,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1780,
                              "src": "5743:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1800,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1782,
                              "src": "5747:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1795,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -25,
                              "src": "5723:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_CampusCredit_$1929_$",
                                "typeString": "type(contract super CampusCredit)"
                              }
                            },
                            "id": 1797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5729:7:12",
                            "memberName": "_update",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1187,
                            "src": "5723:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5723:30:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1802,
                        "nodeType": "ExpressionStatement",
                        "src": "5723:30:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1776,
                    "nodeType": "StructuredDocumentation",
                    "src": "5197:328:12",
                    "text": "function _beforeTokenTransfer(\naddress from,\naddress to,\nuint256 amount\n) internal override(ERC20) {\n// TODO: Add pause check\nsuper._beforeTokenTransfer(from, to, amount);\nrequire(!paused(), \"Token transfers paused\");\n}"
                  },
                  "id": 1804,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "5539:7:12",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1786,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1784,
                        "name": "ERC20",
                        "nameLocations": [
                          "5636:5:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1030,
                        "src": "5636:5:12"
                      },
                      {
                        "id": 1785,
                        "name": "ERC20Pausable",
                        "nameLocations": [
                          "5643:13:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1188,
                        "src": "5643:13:12"
                      }
                    ],
                    "src": "5627:30:12"
                  },
                  "parameters": {
                    "id": 1783,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1778,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5564:4:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1804,
                        "src": "5556:12:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1777,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5556:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1780,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5586:2:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1804,
                        "src": "5578:10:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1779,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5578:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1782,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5606:5:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1804,
                        "src": "5598:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1781,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5598:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5546:71:12"
                  },
                  "returnParameters": {
                    "id": 1787,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5658:0:12"
                  },
                  "scope": 1929,
                  "src": "5530:230:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1805,
                    "nodeType": "StructuredDocumentation",
                    "src": "5766:64:12",
                    "text": " @dev Cashback mechanism untuk encourage usage"
                  },
                  "functionSelector": "1c9cef04",
                  "id": 1808,
                  "mutability": "mutable",
                  "name": "cashbackPercentage",
                  "nameLocation": "5850:18:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1929,
                  "src": "5835:37:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1806,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5835:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 1807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5871:1:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1927,
                    "nodeType": "Block",
                    "src": "5956:1151:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 1816,
                                "name": "isMerchant",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1433,
                                "src": "6135:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 1818,
                              "indexExpression": {
                                "id": 1817,
                                "name": "merchant",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1810,
                                "src": "6146:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6135:20:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420612072656769737465726564206d65726368616e74",
                              "id": 1819,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6157:27:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3dc561c043b7bbf10378c02b4bdb83aba886793b5fccfadedca9560c9bcf4554",
                                "typeString": "literal_string \"Not a registered merchant\""
                              },
                              "value": "Not a registered merchant"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3dc561c043b7bbf10378c02b4bdb83aba886793b5fccfadedca9560c9bcf4554",
                                "typeString": "literal_string \"Not a registered merchant\""
                              }
                            ],
                            "id": 1815,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6127:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6127:58:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1821,
                        "nodeType": "ExpressionStatement",
                        "src": "6127:58:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1825,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1823,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1812,
                                "src": "6203:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1824,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6212:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "6203:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
                              "id": 1826,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6215:34:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
                                "typeString": "literal_string \"Amount must be greater than zero\""
                              },
                              "value": "Amount must be greater than zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
                                "typeString": "literal_string \"Amount must be greater than zero\""
                              }
                            ],
                            "id": 1822,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6195:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6195:55:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1828,
                        "nodeType": "ExpressionStatement",
                        "src": "6195:55:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1835,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1831,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "6291:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1832,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6295:6:12",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "6291:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1830,
                                  "name": "balanceOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 616,
                                  "src": "6281:9:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view returns (uint256)"
                                  }
                                },
                                "id": 1833,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6281:21:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1834,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1812,
                                "src": "6306:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6281:31:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e742043616d707573204372656469742062616c616e6365",
                              "id": 1836,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6326:36:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5e171efca29268c8f7dc8b49a0bc6b73082696199ffa2d46cfb8da8065884ea7",
                                "typeString": "literal_string \"Insufficient Campus Credit balance\""
                              },
                              "value": "Insufficient Campus Credit balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5e171efca29268c8f7dc8b49a0bc6b73082696199ffa2d46cfb8da8065884ea7",
                                "typeString": "literal_string \"Insufficient Campus Credit balance\""
                              }
                            ],
                            "id": 1829,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6260:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6260:112:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1838,
                        "nodeType": "ExpressionStatement",
                        "src": "6260:112:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1845,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 1840,
                                  "name": "dailySpendingLimit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1421,
                                  "src": "6403:18:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1843,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1841,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "6422:3:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1842,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6426:6:12",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "6422:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6403:30:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1844,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6436:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "6403:34:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4461696c79206c696d6974206e6f742073657420666f722073656e646572",
                              "id": 1846,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6451:32:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7df341e7dab656fd761183664b8736fe0983ccb8c343026c17b8695ea5ea5982",
                                "typeString": "literal_string \"Daily limit not set for sender\""
                              },
                              "value": "Daily limit not set for sender"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7df341e7dab656fd761183664b8736fe0983ccb8c343026c17b8695ea5ea5982",
                                "typeString": "literal_string \"Daily limit not set for sender\""
                              }
                            ],
                            "id": 1839,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6382:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6382:111:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1848,
                        "nodeType": "ExpressionStatement",
                        "src": "6382:111:12"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1855,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1849,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "6508:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1850,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6514:9:12",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "6508:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 1851,
                                "name": "lastSpendingReset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1429,
                                "src": "6526:17:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 1854,
                              "indexExpression": {
                                "expression": {
                                  "id": 1852,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "6544:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1853,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6548:6:12",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "6544:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6526:29:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6508:47:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1856,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6559:6:12",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_86400_by_1",
                              "typeString": "int_const 86400"
                            },
                            "value": "1"
                          },
                          "src": "6508:57:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1874,
                        "nodeType": "IfStatement",
                        "src": "6504:175:12",
                        "trueBody": {
                          "id": 1873,
                          "nodeType": "Block",
                          "src": "6567:112:12",
                          "statements": [
                            {
                              "expression": {
                                "id": 1863,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1858,
                                    "name": "spentToday",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1425,
                                    "src": "6581:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1861,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1859,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "6592:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1860,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6596:6:12",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "6592:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6581:22:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 1862,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6606:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "6581:26:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1864,
                              "nodeType": "ExpressionStatement",
                              "src": "6581:26:12"
                            },
                            {
                              "expression": {
                                "id": 1871,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1865,
                                    "name": "lastSpendingReset",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1429,
                                    "src": "6621:17:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1868,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1866,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "6639:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1867,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6643:6:12",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "6639:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6621:29:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 1869,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "6653:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1870,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6659:9:12",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "6653:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6621:47:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1872,
                              "nodeType": "ExpressionStatement",
                              "src": "6621:47:12"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1881,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 1876,
                                    "name": "spentToday",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1425,
                                    "src": "6710:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1879,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1877,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "6721:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1878,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6725:6:12",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "6721:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6710:22:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 1880,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1812,
                                  "src": "6735:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6710:31:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "baseExpression": {
                                  "id": 1882,
                                  "name": "dailySpendingLimit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1421,
                                  "src": "6745:18:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1885,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1883,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "6764:3:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1884,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6768:6:12",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "6764:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6745:30:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6710:65:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4461696c79207370656e64696e67206c696d6974206578636565646564",
                              "id": 1887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6789:31:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0b14ed7c5f1e7324d1cb0362112747b7060ac0bd8d6956f2822396b5cffbc877",
                                "typeString": "literal_string \"Daily spending limit exceeded\""
                              },
                              "value": "Daily spending limit exceeded"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0b14ed7c5f1e7324d1cb0362112747b7060ac0bd8d6956f2822396b5cffbc877",
                                "typeString": "literal_string \"Daily spending limit exceeded\""
                              }
                            ],
                            "id": 1875,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6689:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6689:141:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1889,
                        "nodeType": "ExpressionStatement",
                        "src": "6689:141:12"
                      },
                      {
                        "expression": {
                          "id": 1895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1890,
                              "name": "spentToday",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1425,
                              "src": "6841:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1893,
                            "indexExpression": {
                              "expression": {
                                "id": 1891,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6852:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1892,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6856:6:12",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6852:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6841:22:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1894,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1812,
                            "src": "6867:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6841:32:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1896,
                        "nodeType": "ExpressionStatement",
                        "src": "6841:32:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1898,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6893:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1899,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6897:6:12",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6893:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1900,
                              "name": "merchant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1810,
                              "src": "6905:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1901,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1812,
                              "src": "6915:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1897,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 760,
                            "src": "6883:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6883:39:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1903,
                        "nodeType": "ExpressionStatement",
                        "src": "6883:39:12"
                      },
                      {
                        "assignments": [
                          1905
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1905,
                            "mutability": "mutable",
                            "name": "cashback",
                            "nameLocation": "6941:8:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1927,
                            "src": "6933:16:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1904,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6933:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1912,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1908,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1906,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1812,
                                  "src": "6953:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1907,
                                  "name": "cashbackPercentage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1808,
                                  "src": "6962:18:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6953:27:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1909,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "6952:29:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 1910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6984:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "6952:35:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6933:54:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1914,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7003:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1915,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7007:6:12",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7003:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1916,
                              "name": "cashback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1905,
                              "src": "7015:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1913,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 870,
                            "src": "6997:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6997:27:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1918,
                        "nodeType": "ExpressionStatement",
                        "src": "6997:27:12"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1920,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7061:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1921,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7065:6:12",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7061:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1922,
                              "name": "merchant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1810,
                              "src": "7073:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1923,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1812,
                              "src": "7083:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1924,
                              "name": "cashback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1905,
                              "src": "7091:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1919,
                            "name": "TransferWithCashback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1447,
                            "src": "7040:20:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256,uint256)"
                            }
                          },
                          "id": 1925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7040:60:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1926,
                        "nodeType": "EmitStatement",
                        "src": "7035:65:12"
                      }
                    ]
                  },
                  "functionSelector": "5cc18e2f",
                  "id": 1928,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferWithCashback",
                  "nameLocation": "5894:20:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1813,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1810,
                        "mutability": "mutable",
                        "name": "merchant",
                        "nameLocation": "5923:8:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1928,
                        "src": "5915:16:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1809,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5915:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1812,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "5941:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1928,
                        "src": "5933:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1811,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5933:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5914:34:12"
                  },
                  "returnParameters": {
                    "id": 1814,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5956:0:12"
                  },
                  "scope": 1929,
                  "src": "5885:1222:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 1930,
              "src": "604:6505:12",
              "usedErrors": [
                305,
                308,
                390,
                395,
                400,
                409,
                414,
                419,
                1266,
                1269
              ],
              "usedEvents": [
                317,
                326,
                335,
                1042,
                1051,
                1258,
                1263,
                1447
              ]
            }
          ],
          "src": "32:7078:12"
        },
        "id": 12
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/AccessControl.sol": {
        "AccessControl": {
          "abi": [
            {
              "inputs": [],
              "name": "AccessControlBadConfirmation",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "neededRole",
                  "type": "bytes32"
                }
              ],
              "name": "AccessControlUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "previousAdminRole",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "newAdminRole",
                  "type": "bytes32"
                }
              ],
              "name": "RoleAdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleGranted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleRevoked",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DEFAULT_ADMIN_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                }
              ],
              "name": "getRoleAdmin",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasRole",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "callerConfirmation",
                  "type": "address"
                }
              ],
              "name": "renounceRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "DEFAULT_ADMIN_ROLE()": "a217fddf",
              "getRoleAdmin(bytes32)": "248a9ca3",
              "grantRole(bytes32,address)": "2f2ff15d",
              "hasRole(bytes32,address)": "91d14854",
              "renounceRole(bytes32,address)": "36568abe",
              "revokeRole(bytes32,address)": "d547741f",
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IAccessControl} from \\\"./IAccessControl.sol\\\";\\nimport {Context} from \\\"../utils/Context.sol\\\";\\nimport {ERC165} from \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```solidity\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```solidity\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\\n * to enforce additional security measures for this role.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address account => bool) hasRole;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 role => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\\n        return _roles[role].hasRole[account];\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\\n     * is missing `role`.\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert AccessControlUnauthorizedAccount(account, role);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\\n        if (callerConfirmation != _msgSender()) {\\n            revert AccessControlBadConfirmation();\\n        }\\n\\n        _revokeRole(role, callerConfirmation);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (!hasRole(role, account)) {\\n            _roles[role].hasRole[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (hasRole(role, account)) {\\n            _roles[role].hasRole[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC-165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev The `account` is missing a role.\\n     */\\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\\n\\n    /**\\n     * @dev The caller of a function is not the expected one.\\n     *\\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\\n     */\\n    error AccessControlBadConfirmation();\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted to signal this.\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) external;\\n}\\n\",\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/access/IAccessControl.sol": {
        "IAccessControl": {
          "abi": [
            {
              "inputs": [],
              "name": "AccessControlBadConfirmation",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "neededRole",
                  "type": "bytes32"
                }
              ],
              "name": "AccessControlUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "previousAdminRole",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "newAdminRole",
                  "type": "bytes32"
                }
              ],
              "name": "RoleAdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleGranted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleRevoked",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                }
              ],
              "name": "getRoleAdmin",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasRole",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "callerConfirmation",
                  "type": "address"
                }
              ],
              "name": "renounceRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "getRoleAdmin(bytes32)": "248a9ca3",
              "grantRole(bytes32,address)": "2f2ff15d",
              "hasRole(bytes32,address)": "91d14854",
              "renounceRole(bytes32,address)": "36568abe",
              "revokeRole(bytes32,address)": "d547741f"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC-165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev The `account` is missing a role.\\n     */\\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\\n\\n    /**\\n     * @dev The caller of a function is not the expected one.\\n     *\\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\\n     */\\n    error AccessControlBadConfirmation();\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted to signal this.\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) external;\\n}\\n\",\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\"}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "IERC1155Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "idsLength",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valuesLength",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InvalidArrayLength",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC1155MissingApprovalForAll",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"}},\"version\":1}"
        },
        "IERC20Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"}},\"version\":1}"
        },
        "IERC721Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721IncorrectOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721InsufficientApproval",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721NonexistentToken",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC-20\\n * applications.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * Both values are immutable: they can only be set once during construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     *\\n     * ```solidity\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance < type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "ERC20Burnable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burnFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burn(uint256)": "42966c68",
              "burnFrom(address,uint256)": "79cc6790",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC-20\\n * applications.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * Both values are immutable: they can only be set once during construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     *\\n     * ```solidity\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance < type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ERC20} from \\\"../ERC20.sol\\\";\\nimport {Context} from \\\"../../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\\n * tokens and those that they have an allowance for, in a way that can be\\n * recognized off-chain (via event analysis).\\n */\\nabstract contract ERC20Burnable is Context, ERC20 {\\n    /**\\n     * @dev Destroys a `value` amount of tokens from the caller.\\n     *\\n     * See {ERC20-_burn}.\\n     */\\n    function burn(uint256 value) public virtual {\\n        _burn(_msgSender(), value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\\n     * the caller's allowance.\\n     *\\n     * See {ERC20-_burn} and {ERC20-allowance}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have allowance for ``accounts``'s tokens of at least\\n     * `value`.\\n     */\\n    function burnFrom(address account, uint256 value) public virtual {\\n        _spendAllowance(account, _msgSender(), value);\\n        _burn(account, value);\\n    }\\n}\\n\",\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
        "ERC20Pausable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "paused()": "5c975abb",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC-20\\n * applications.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * Both values are immutable: they can only be set once during construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     *\\n     * ```solidity\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance < type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Pausable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ERC20} from \\\"../ERC20.sol\\\";\\nimport {Pausable} from \\\"../../../utils/Pausable.sol\\\";\\n\\n/**\\n * @dev ERC-20 token with pausable token transfers, minting and burning.\\n *\\n * Useful for scenarios such as preventing trades until the end of an evaluation\\n * period, or having an emergency switch for freezing all token transfers in the\\n * event of a large bug.\\n *\\n * IMPORTANT: This contract does not include public pause and unpause functions. In\\n * addition to inheriting this contract, you must define both functions, invoking the\\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\\n */\\nabstract contract ERC20Pausable is ERC20, Pausable {\\n    /**\\n     * @dev See {ERC20-_update}.\\n     *\\n     * Requirements:\\n     *\\n     * - the contract must not be paused.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\\n        super._update(from, to, value);\\n    }\\n}\\n\",\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    bool private _paused;\\n\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    /**\\n     * @dev The operation failed because the contract is paused.\\n     */\\n    error EnforcedPause();\\n\\n    /**\\n     * @dev The operation failed because the contract is not paused.\\n     */\\n    error ExpectedPause();\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        if (paused()) {\\n            revert EnforcedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        if (!paused()) {\\n            revert ExpectedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\"}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\"}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "Pausable": {
          "abi": [
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "paused()": "5c975abb"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    bool private _paused;\\n\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    /**\\n     * @dev The operation failed because the contract is paused.\\n     */\\n    error EnforcedPause();\\n\\n    /**\\n     * @dev The operation failed because the contract is not paused.\\n     */\\n    error ExpectedPause();\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        if (paused()) {\\n            revert EnforcedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        if (!paused()) {\\n            revert ExpectedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\"}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "ERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "IERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"}},\"version\":1}"
        }
      },
      "contracts/CampusCredit.sol": {
        "CampusCredit": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "AccessControlBadConfirmation",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "neededRole",
                  "type": "bytes32"
                }
              ],
              "name": "AccessControlUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "previousAdminRole",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "newAdminRole",
                  "type": "bytes32"
                }
              ],
              "name": "RoleAdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleGranted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleRevoked",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "merchant",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "cashback",
                  "type": "uint256"
                }
              ],
              "name": "TransferWithCashback",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DEFAULT_ADMIN_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MINTER_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PAUSER_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burnFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "cashbackPercentage",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "dailySpendingLimit",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                }
              ],
              "name": "getRoleAdmin",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasRole",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "isMerchant",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "lastSpendingReset",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "merchantName",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "mint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "merchant",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                }
              ],
              "name": "registerMerchant",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "callerConfirmation",
                  "type": "address"
                }
              ],
              "name": "renounceRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "student",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                }
              ],
              "name": "setDailyLimit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "spentToday",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "merchant",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferWithCashback",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferWithLimit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "unpause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_1484": {
                  "entryPoint": null,
                  "id": 1484,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_567": {
                  "entryPoint": null,
                  "id": 567,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_grantRole_256": {
                  "entryPoint": 261,
                  "id": 256,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@_mint_870": {
                  "entryPoint": 437,
                  "id": 870,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_msgSender_1226": {
                  "entryPoint": null,
                  "id": 1226,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_requireNotPaused_1306": {
                  "entryPoint": 618,
                  "id": 1306,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_update_1187": {
                  "entryPoint": 599,
                  "id": 1187,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_update_1804": {
                  "entryPoint": 500,
                  "id": 1804,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_update_837": {
                  "entryPoint": 656,
                  "id": 837,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@decimals_594": {
                  "entryPoint": null,
                  "id": 594,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@hasRole_80": {
                  "entryPoint": null,
                  "id": 80,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@paused_1294": {
                  "entryPoint": null,
                  "id": 1294,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_6da2590c3034ef1da0b0fb0657e080f278b93f51f0369c416eeea6511934843d__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_dataslot_string_storage": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 1600,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_exp_helper": {
                  "entryPoint": 1324,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 2
                },
                "checked_exp_t_uint256_t_uint8": {
                  "entryPoint": 1555,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_exp_unsigned": {
                  "entryPoint": 1391,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_t_uint256": {
                  "entryPoint": 1577,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "clean_up_bytearray_end_slots_string_storage": {
                  "entryPoint": 1034,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
                  "entryPoint": 1112,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "extract_byte_array_length": {
                  "entryPoint": 976,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_used_part_and_set_length_of_short_byte_array": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 1302,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 954,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nativeSrc": "0:5610:13",
                    "nodeType": "YulBlock",
                    "src": "0:5610:13",
                    "statements": [
                      {
                        "nativeSrc": "6:3:13",
                        "nodeType": "YulBlock",
                        "src": "6:3:13",
                        "statements": []
                      },
                      {
                        "body": {
                          "nativeSrc": "46:95:13",
                          "nodeType": "YulBlock",
                          "src": "46:95:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "63:1:13",
                                    "nodeType": "YulLiteral",
                                    "src": "63:1:13",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "70:3:13",
                                        "nodeType": "YulLiteral",
                                        "src": "70:3:13",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "75:10:13",
                                        "nodeType": "YulLiteral",
                                        "src": "75:10:13",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "66:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "66:3:13"
                                    },
                                    "nativeSrc": "66:20:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "66:20:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "56:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "56:6:13"
                                },
                                "nativeSrc": "56:31:13",
                                "nodeType": "YulFunctionCall",
                                "src": "56:31:13"
                              },
                              "nativeSrc": "56:31:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "56:31:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "103:1:13",
                                    "nodeType": "YulLiteral",
                                    "src": "103:1:13",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "106:4:13",
                                    "nodeType": "YulLiteral",
                                    "src": "106:4:13",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "96:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "96:6:13"
                                },
                                "nativeSrc": "96:15:13",
                                "nodeType": "YulFunctionCall",
                                "src": "96:15:13"
                              },
                              "nativeSrc": "96:15:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "96:15:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "127:1:13",
                                    "nodeType": "YulLiteral",
                                    "src": "127:1:13",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "130:4:13",
                                    "nodeType": "YulLiteral",
                                    "src": "130:4:13",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "120:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "120:6:13"
                                },
                                "nativeSrc": "120:15:13",
                                "nodeType": "YulFunctionCall",
                                "src": "120:15:13"
                              },
                              "nativeSrc": "120:15:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "120:15:13"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nativeSrc": "14:127:13",
                        "nodeType": "YulFunctionDefinition",
                        "src": "14:127:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "201:325:13",
                          "nodeType": "YulBlock",
                          "src": "201:325:13",
                          "statements": [
                            {
                              "nativeSrc": "211:22:13",
                              "nodeType": "YulAssignment",
                              "src": "211:22:13",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "225:1:13",
                                    "nodeType": "YulLiteral",
                                    "src": "225:1:13",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "data",
                                    "nativeSrc": "228:4:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "228:4:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nativeSrc": "221:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "221:3:13"
                                },
                                "nativeSrc": "221:12:13",
                                "nodeType": "YulFunctionCall",
                                "src": "221:12:13"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nativeSrc": "211:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "211:6:13"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "242:38:13",
                              "nodeType": "YulVariableDeclaration",
                              "src": "242:38:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nativeSrc": "272:4:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "272:4:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "278:1:13",
                                    "nodeType": "YulLiteral",
                                    "src": "278:1:13",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "268:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "268:3:13"
                                },
                                "nativeSrc": "268:12:13",
                                "nodeType": "YulFunctionCall",
                                "src": "268:12:13"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nativeSrc": "246:18:13",
                                  "nodeType": "YulTypedName",
                                  "src": "246:18:13",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "319:31:13",
                                "nodeType": "YulBlock",
                                "src": "319:31:13",
                                "statements": [
                                  {
                                    "nativeSrc": "321:27:13",
                                    "nodeType": "YulAssignment",
                                    "src": "321:27:13",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nativeSrc": "335:6:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "335:6:13"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "343:4:13",
                                          "nodeType": "YulLiteral",
                                          "src": "343:4:13",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nativeSrc": "331:3:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "331:3:13"
                                      },
                                      "nativeSrc": "331:17:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "331:17:13"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nativeSrc": "321:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "321:6:13"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nativeSrc": "299:18:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "299:18:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "292:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "292:6:13"
                                },
                                "nativeSrc": "292:26:13",
                                "nodeType": "YulFunctionCall",
                                "src": "292:26:13"
                              },
                              "nativeSrc": "289:61:13",
                              "nodeType": "YulIf",
                              "src": "289:61:13"
                            },
                            {
                              "body": {
                                "nativeSrc": "409:111:13",
                                "nodeType": "YulBlock",
                                "src": "409:111:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "430:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "430:1:13",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "437:3:13",
                                              "nodeType": "YulLiteral",
                                              "src": "437:3:13",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "442:10:13",
                                              "nodeType": "YulLiteral",
                                              "src": "442:10:13",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nativeSrc": "433:3:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "433:3:13"
                                          },
                                          "nativeSrc": "433:20:13",
                                          "nodeType": "YulFunctionCall",
                                          "src": "433:20:13"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "423:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "423:6:13"
                                      },
                                      "nativeSrc": "423:31:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "423:31:13"
                                    },
                                    "nativeSrc": "423:31:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "423:31:13"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "474:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "474:1:13",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "477:4:13",
                                          "nodeType": "YulLiteral",
                                          "src": "477:4:13",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "467:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "467:6:13"
                                      },
                                      "nativeSrc": "467:15:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "467:15:13"
                                    },
                                    "nativeSrc": "467:15:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "467:15:13"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "502:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "502:1:13",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "505:4:13",
                                          "nodeType": "YulLiteral",
                                          "src": "505:4:13",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "495:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "495:6:13"
                                      },
                                      "nativeSrc": "495:15:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "495:15:13"
                                    },
                                    "nativeSrc": "495:15:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "495:15:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nativeSrc": "365:18:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "365:18:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nativeSrc": "388:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "388:6:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "396:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "396:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nativeSrc": "385:2:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "385:2:13"
                                    },
                                    "nativeSrc": "385:14:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "385:14:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nativeSrc": "362:2:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "362:2:13"
                                },
                                "nativeSrc": "362:38:13",
                                "nodeType": "YulFunctionCall",
                                "src": "362:38:13"
                              },
                              "nativeSrc": "359:161:13",
                              "nodeType": "YulIf",
                              "src": "359:161:13"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nativeSrc": "146:380:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nativeSrc": "181:4:13",
                            "nodeType": "YulTypedName",
                            "src": "181:4:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nativeSrc": "190:6:13",
                            "nodeType": "YulTypedName",
                            "src": "190:6:13",
                            "type": ""
                          }
                        ],
                        "src": "146:380:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "587:65:13",
                          "nodeType": "YulBlock",
                          "src": "587:65:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "604:1:13",
                                    "nodeType": "YulLiteral",
                                    "src": "604:1:13",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "ptr",
                                    "nativeSrc": "607:3:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "607:3:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "597:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "597:6:13"
                                },
                                "nativeSrc": "597:14:13",
                                "nodeType": "YulFunctionCall",
                                "src": "597:14:13"
                              },
                              "nativeSrc": "597:14:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "597:14:13"
                            },
                            {
                              "nativeSrc": "620:26:13",
                              "nodeType": "YulAssignment",
                              "src": "620:26:13",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "638:1:13",
                                    "nodeType": "YulLiteral",
                                    "src": "638:1:13",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "641:4:13",
                                    "nodeType": "YulLiteral",
                                    "src": "641:4:13",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "keccak256",
                                  "nativeSrc": "628:9:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "628:9:13"
                                },
                                "nativeSrc": "628:18:13",
                                "nodeType": "YulFunctionCall",
                                "src": "628:18:13"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nativeSrc": "620:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "620:4:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_string_storage",
                        "nativeSrc": "531:121:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nativeSrc": "570:3:13",
                            "nodeType": "YulTypedName",
                            "src": "570:3:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nativeSrc": "578:4:13",
                            "nodeType": "YulTypedName",
                            "src": "578:4:13",
                            "type": ""
                          }
                        ],
                        "src": "531:121:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "738:437:13",
                          "nodeType": "YulBlock",
                          "src": "738:437:13",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "771:398:13",
                                "nodeType": "YulBlock",
                                "src": "771:398:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "792:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "792:1:13",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "name": "array",
                                          "nativeSrc": "795:5:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "795:5:13"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "785:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "785:6:13"
                                      },
                                      "nativeSrc": "785:16:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "785:16:13"
                                    },
                                    "nativeSrc": "785:16:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "785:16:13"
                                  },
                                  {
                                    "nativeSrc": "814:30:13",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "814:30:13",
                                    "value": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "836:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "836:1:13",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "839:4:13",
                                          "nodeType": "YulLiteral",
                                          "src": "839:4:13",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "keccak256",
                                        "nativeSrc": "826:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "826:9:13"
                                      },
                                      "nativeSrc": "826:18:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "826:18:13"
                                    },
                                    "variables": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "818:4:13",
                                        "nodeType": "YulTypedName",
                                        "src": "818:4:13",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "857:57:13",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "857:57:13",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "data",
                                          "nativeSrc": "880:4:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "880:4:13"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "890:1:13",
                                              "nodeType": "YulLiteral",
                                              "src": "890:1:13",
                                              "type": "",
                                              "value": "5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "startIndex",
                                                  "nativeSrc": "897:10:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "897:10:13"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "909:2:13",
                                                  "nodeType": "YulLiteral",
                                                  "src": "909:2:13",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "893:3:13",
                                                "nodeType": "YulIdentifier",
                                                "src": "893:3:13"
                                              },
                                              "nativeSrc": "893:19:13",
                                              "nodeType": "YulFunctionCall",
                                              "src": "893:19:13"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shr",
                                            "nativeSrc": "886:3:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "886:3:13"
                                          },
                                          "nativeSrc": "886:27:13",
                                          "nodeType": "YulFunctionCall",
                                          "src": "886:27:13"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "876:3:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "876:3:13"
                                      },
                                      "nativeSrc": "876:38:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "876:38:13"
                                    },
                                    "variables": [
                                      {
                                        "name": "deleteStart",
                                        "nativeSrc": "861:11:13",
                                        "nodeType": "YulTypedName",
                                        "src": "861:11:13",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nativeSrc": "951:23:13",
                                      "nodeType": "YulBlock",
                                      "src": "951:23:13",
                                      "statements": [
                                        {
                                          "nativeSrc": "953:19:13",
                                          "nodeType": "YulAssignment",
                                          "src": "953:19:13",
                                          "value": {
                                            "name": "data",
                                            "nativeSrc": "968:4:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "968:4:13"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "deleteStart",
                                              "nativeSrc": "953:11:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "953:11:13"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "startIndex",
                                          "nativeSrc": "933:10:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "933:10:13"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "945:4:13",
                                          "nodeType": "YulLiteral",
                                          "src": "945:4:13",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nativeSrc": "930:2:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "930:2:13"
                                      },
                                      "nativeSrc": "930:20:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "930:20:13"
                                    },
                                    "nativeSrc": "927:47:13",
                                    "nodeType": "YulIf",
                                    "src": "927:47:13"
                                  },
                                  {
                                    "nativeSrc": "987:41:13",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "987:41:13",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "data",
                                          "nativeSrc": "1001:4:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "1001:4:13"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "1011:1:13",
                                              "nodeType": "YulLiteral",
                                              "src": "1011:1:13",
                                              "type": "",
                                              "value": "5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "len",
                                                  "nativeSrc": "1018:3:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1018:3:13"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "1023:2:13",
                                                  "nodeType": "YulLiteral",
                                                  "src": "1023:2:13",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "1014:3:13",
                                                "nodeType": "YulIdentifier",
                                                "src": "1014:3:13"
                                              },
                                              "nativeSrc": "1014:12:13",
                                              "nodeType": "YulFunctionCall",
                                              "src": "1014:12:13"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shr",
                                            "nativeSrc": "1007:3:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "1007:3:13"
                                          },
                                          "nativeSrc": "1007:20:13",
                                          "nodeType": "YulFunctionCall",
                                          "src": "1007:20:13"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "997:3:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "997:3:13"
                                      },
                                      "nativeSrc": "997:31:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "997:31:13"
                                    },
                                    "variables": [
                                      {
                                        "name": "_1",
                                        "nativeSrc": "991:2:13",
                                        "nodeType": "YulTypedName",
                                        "src": "991:2:13",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "1041:24:13",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "1041:24:13",
                                    "value": {
                                      "name": "deleteStart",
                                      "nativeSrc": "1054:11:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "1054:11:13"
                                    },
                                    "variables": [
                                      {
                                        "name": "start",
                                        "nativeSrc": "1045:5:13",
                                        "nodeType": "YulTypedName",
                                        "src": "1045:5:13",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nativeSrc": "1139:20:13",
                                      "nodeType": "YulBlock",
                                      "src": "1139:20:13",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "start",
                                                "nativeSrc": "1148:5:13",
                                                "nodeType": "YulIdentifier",
                                                "src": "1148:5:13"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1155:1:13",
                                                "nodeType": "YulLiteral",
                                                "src": "1155:1:13",
                                                "type": "",
                                                "value": "0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sstore",
                                              "nativeSrc": "1141:6:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "1141:6:13"
                                            },
                                            "nativeSrc": "1141:16:13",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1141:16:13"
                                          },
                                          "nativeSrc": "1141:16:13",
                                          "nodeType": "YulExpressionStatement",
                                          "src": "1141:16:13"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "start",
                                          "nativeSrc": "1089:5:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "1089:5:13"
                                        },
                                        {
                                          "name": "_1",
                                          "nativeSrc": "1096:2:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "1096:2:13"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nativeSrc": "1086:2:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "1086:2:13"
                                      },
                                      "nativeSrc": "1086:13:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1086:13:13"
                                    },
                                    "nativeSrc": "1078:81:13",
                                    "nodeType": "YulForLoop",
                                    "post": {
                                      "nativeSrc": "1100:26:13",
                                      "nodeType": "YulBlock",
                                      "src": "1100:26:13",
                                      "statements": [
                                        {
                                          "nativeSrc": "1102:22:13",
                                          "nodeType": "YulAssignment",
                                          "src": "1102:22:13",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "start",
                                                "nativeSrc": "1115:5:13",
                                                "nodeType": "YulIdentifier",
                                                "src": "1115:5:13"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1122:1:13",
                                                "nodeType": "YulLiteral",
                                                "src": "1122:1:13",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nativeSrc": "1111:3:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "1111:3:13"
                                            },
                                            "nativeSrc": "1111:13:13",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1111:13:13"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "start",
                                              "nativeSrc": "1102:5:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "1102:5:13"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "pre": {
                                      "nativeSrc": "1082:3:13",
                                      "nodeType": "YulBlock",
                                      "src": "1082:3:13",
                                      "statements": []
                                    },
                                    "src": "1078:81:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "len",
                                    "nativeSrc": "754:3:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "754:3:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "759:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "759:2:13",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "751:2:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "751:2:13"
                                },
                                "nativeSrc": "751:11:13",
                                "nodeType": "YulFunctionCall",
                                "src": "751:11:13"
                              },
                              "nativeSrc": "748:421:13",
                              "nodeType": "YulIf",
                              "src": "748:421:13"
                            }
                          ]
                        },
                        "name": "clean_up_bytearray_end_slots_string_storage",
                        "nativeSrc": "657:518:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "array",
                            "nativeSrc": "710:5:13",
                            "nodeType": "YulTypedName",
                            "src": "710:5:13",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nativeSrc": "717:3:13",
                            "nodeType": "YulTypedName",
                            "src": "717:3:13",
                            "type": ""
                          },
                          {
                            "name": "startIndex",
                            "nativeSrc": "722:10:13",
                            "nodeType": "YulTypedName",
                            "src": "722:10:13",
                            "type": ""
                          }
                        ],
                        "src": "657:518:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "1265:81:13",
                          "nodeType": "YulBlock",
                          "src": "1265:81:13",
                          "statements": [
                            {
                              "nativeSrc": "1275:65:13",
                              "nodeType": "YulAssignment",
                              "src": "1275:65:13",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "1290:4:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "1290:4:13"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "1308:1:13",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1308:1:13",
                                                    "type": "",
                                                    "value": "3"
                                                  },
                                                  {
                                                    "name": "len",
                                                    "nativeSrc": "1311:3:13",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "1311:3:13"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "1304:3:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1304:3:13"
                                                },
                                                "nativeSrc": "1304:11:13",
                                                "nodeType": "YulFunctionCall",
                                                "src": "1304:11:13"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "1321:1:13",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1321:1:13",
                                                    "type": "",
                                                    "value": "0"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "not",
                                                  "nativeSrc": "1317:3:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1317:3:13"
                                                },
                                                "nativeSrc": "1317:6:13",
                                                "nodeType": "YulFunctionCall",
                                                "src": "1317:6:13"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shr",
                                              "nativeSrc": "1300:3:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "1300:3:13"
                                            },
                                            "nativeSrc": "1300:24:13",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1300:24:13"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nativeSrc": "1296:3:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "1296:3:13"
                                        },
                                        "nativeSrc": "1296:29:13",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1296:29:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "1286:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "1286:3:13"
                                    },
                                    "nativeSrc": "1286:40:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1286:40:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1332:1:13",
                                        "nodeType": "YulLiteral",
                                        "src": "1332:1:13",
                                        "type": "",
                                        "value": "1"
                                      },
                                      {
                                        "name": "len",
                                        "nativeSrc": "1335:3:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "1335:3:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "1328:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "1328:3:13"
                                    },
                                    "nativeSrc": "1328:11:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1328:11:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nativeSrc": "1283:2:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "1283:2:13"
                                },
                                "nativeSrc": "1283:57:13",
                                "nodeType": "YulFunctionCall",
                                "src": "1283:57:13"
                              },
                              "variableNames": [
                                {
                                  "name": "used",
                                  "nativeSrc": "1275:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "1275:4:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "extract_used_part_and_set_length_of_short_byte_array",
                        "nativeSrc": "1180:166:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nativeSrc": "1242:4:13",
                            "nodeType": "YulTypedName",
                            "src": "1242:4:13",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nativeSrc": "1248:3:13",
                            "nodeType": "YulTypedName",
                            "src": "1248:3:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "used",
                            "nativeSrc": "1256:4:13",
                            "nodeType": "YulTypedName",
                            "src": "1256:4:13",
                            "type": ""
                          }
                        ],
                        "src": "1180:166:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "1447:1203:13",
                          "nodeType": "YulBlock",
                          "src": "1447:1203:13",
                          "statements": [
                            {
                              "nativeSrc": "1457:24:13",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1457:24:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nativeSrc": "1477:3:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "1477:3:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "1471:5:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "1471:5:13"
                                },
                                "nativeSrc": "1471:10:13",
                                "nodeType": "YulFunctionCall",
                                "src": "1471:10:13"
                              },
                              "variables": [
                                {
                                  "name": "newLen",
                                  "nativeSrc": "1461:6:13",
                                  "nodeType": "YulTypedName",
                                  "src": "1461:6:13",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "1524:22:13",
                                "nodeType": "YulBlock",
                                "src": "1524:22:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nativeSrc": "1526:16:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "1526:16:13"
                                      },
                                      "nativeSrc": "1526:18:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1526:18:13"
                                    },
                                    "nativeSrc": "1526:18:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1526:18:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nativeSrc": "1496:6:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "1496:6:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1512:2:13",
                                            "nodeType": "YulLiteral",
                                            "src": "1512:2:13",
                                            "type": "",
                                            "value": "64"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1516:1:13",
                                            "nodeType": "YulLiteral",
                                            "src": "1516:1:13",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nativeSrc": "1508:3:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "1508:3:13"
                                        },
                                        "nativeSrc": "1508:10:13",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1508:10:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1520:1:13",
                                        "nodeType": "YulLiteral",
                                        "src": "1520:1:13",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "1504:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "1504:3:13"
                                    },
                                    "nativeSrc": "1504:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1504:18:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "1493:2:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "1493:2:13"
                                },
                                "nativeSrc": "1493:30:13",
                                "nodeType": "YulFunctionCall",
                                "src": "1493:30:13"
                              },
                              "nativeSrc": "1490:56:13",
                              "nodeType": "YulIf",
                              "src": "1490:56:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nativeSrc": "1599:4:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "1599:4:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "slot",
                                            "nativeSrc": "1637:4:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "1637:4:13"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sload",
                                          "nativeSrc": "1631:5:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "1631:5:13"
                                        },
                                        "nativeSrc": "1631:11:13",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1631:11:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "extract_byte_array_length",
                                      "nativeSrc": "1605:25:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "1605:25:13"
                                    },
                                    "nativeSrc": "1605:38:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1605:38:13"
                                  },
                                  {
                                    "name": "newLen",
                                    "nativeSrc": "1645:6:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "1645:6:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "clean_up_bytearray_end_slots_string_storage",
                                  "nativeSrc": "1555:43:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "1555:43:13"
                                },
                                "nativeSrc": "1555:97:13",
                                "nodeType": "YulFunctionCall",
                                "src": "1555:97:13"
                              },
                              "nativeSrc": "1555:97:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "1555:97:13"
                            },
                            {
                              "nativeSrc": "1661:18:13",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1661:18:13",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "1678:1:13",
                                "nodeType": "YulLiteral",
                                "src": "1678:1:13",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "srcOffset",
                                  "nativeSrc": "1665:9:13",
                                  "nodeType": "YulTypedName",
                                  "src": "1665:9:13",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1688:17:13",
                              "nodeType": "YulAssignment",
                              "src": "1688:17:13",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "1701:4:13",
                                "nodeType": "YulLiteral",
                                "src": "1701:4:13",
                                "type": "",
                                "value": "0x20"
                              },
                              "variableNames": [
                                {
                                  "name": "srcOffset",
                                  "nativeSrc": "1688:9:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "1688:9:13"
                                }
                              ]
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nativeSrc": "1751:642:13",
                                    "nodeType": "YulBlock",
                                    "src": "1751:642:13",
                                    "statements": [
                                      {
                                        "nativeSrc": "1765:35:13",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "1765:35:13",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "newLen",
                                              "nativeSrc": "1784:6:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "1784:6:13"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "1796:2:13",
                                                  "nodeType": "YulLiteral",
                                                  "src": "1796:2:13",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "not",
                                                "nativeSrc": "1792:3:13",
                                                "nodeType": "YulIdentifier",
                                                "src": "1792:3:13"
                                              },
                                              "nativeSrc": "1792:7:13",
                                              "nodeType": "YulFunctionCall",
                                              "src": "1792:7:13"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nativeSrc": "1780:3:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "1780:3:13"
                                          },
                                          "nativeSrc": "1780:20:13",
                                          "nodeType": "YulFunctionCall",
                                          "src": "1780:20:13"
                                        },
                                        "variables": [
                                          {
                                            "name": "loopEnd",
                                            "nativeSrc": "1769:7:13",
                                            "nodeType": "YulTypedName",
                                            "src": "1769:7:13",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "1813:49:13",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "1813:49:13",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nativeSrc": "1857:4:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "1857:4:13"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "array_dataslot_string_storage",
                                            "nativeSrc": "1827:29:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "1827:29:13"
                                          },
                                          "nativeSrc": "1827:35:13",
                                          "nodeType": "YulFunctionCall",
                                          "src": "1827:35:13"
                                        },
                                        "variables": [
                                          {
                                            "name": "dstPtr",
                                            "nativeSrc": "1817:6:13",
                                            "nodeType": "YulTypedName",
                                            "src": "1817:6:13",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "1875:10:13",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "1875:10:13",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "1884:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "1884:1:13",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "i",
                                            "nativeSrc": "1879:1:13",
                                            "nodeType": "YulTypedName",
                                            "src": "1879:1:13",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nativeSrc": "1955:165:13",
                                          "nodeType": "YulBlock",
                                          "src": "1955:165:13",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nativeSrc": "1980:6:13",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "1980:6:13"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "name": "src",
                                                            "nativeSrc": "1998:3:13",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "1998:3:13"
                                                          },
                                                          {
                                                            "name": "srcOffset",
                                                            "nativeSrc": "2003:9:13",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "2003:9:13"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "add",
                                                          "nativeSrc": "1994:3:13",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "1994:3:13"
                                                        },
                                                        "nativeSrc": "1994:19:13",
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "1994:19:13"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nativeSrc": "1988:5:13",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "1988:5:13"
                                                    },
                                                    "nativeSrc": "1988:26:13",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "1988:26:13"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nativeSrc": "1973:6:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1973:6:13"
                                                },
                                                "nativeSrc": "1973:42:13",
                                                "nodeType": "YulFunctionCall",
                                                "src": "1973:42:13"
                                              },
                                              "nativeSrc": "1973:42:13",
                                              "nodeType": "YulExpressionStatement",
                                              "src": "1973:42:13"
                                            },
                                            {
                                              "nativeSrc": "2032:24:13",
                                              "nodeType": "YulAssignment",
                                              "src": "2032:24:13",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nativeSrc": "2046:6:13",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2046:6:13"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "2054:1:13",
                                                    "nodeType": "YulLiteral",
                                                    "src": "2054:1:13",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "2042:3:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2042:3:13"
                                                },
                                                "nativeSrc": "2042:14:13",
                                                "nodeType": "YulFunctionCall",
                                                "src": "2042:14:13"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "dstPtr",
                                                  "nativeSrc": "2032:6:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2032:6:13"
                                                }
                                              ]
                                            },
                                            {
                                              "nativeSrc": "2073:33:13",
                                              "nodeType": "YulAssignment",
                                              "src": "2073:33:13",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "srcOffset",
                                                    "nativeSrc": "2090:9:13",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2090:9:13"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "2101:4:13",
                                                    "nodeType": "YulLiteral",
                                                    "src": "2101:4:13",
                                                    "type": "",
                                                    "value": "0x20"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "2086:3:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2086:3:13"
                                                },
                                                "nativeSrc": "2086:20:13",
                                                "nodeType": "YulFunctionCall",
                                                "src": "2086:20:13"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "srcOffset",
                                                  "nativeSrc": "2073:9:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2073:9:13"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "i",
                                              "nativeSrc": "1909:1:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "1909:1:13"
                                            },
                                            {
                                              "name": "loopEnd",
                                              "nativeSrc": "1912:7:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "1912:7:13"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nativeSrc": "1906:2:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "1906:2:13"
                                          },
                                          "nativeSrc": "1906:14:13",
                                          "nodeType": "YulFunctionCall",
                                          "src": "1906:14:13"
                                        },
                                        "nativeSrc": "1898:222:13",
                                        "nodeType": "YulForLoop",
                                        "post": {
                                          "nativeSrc": "1921:21:13",
                                          "nodeType": "YulBlock",
                                          "src": "1921:21:13",
                                          "statements": [
                                            {
                                              "nativeSrc": "1923:17:13",
                                              "nodeType": "YulAssignment",
                                              "src": "1923:17:13",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "i",
                                                    "nativeSrc": "1932:1:13",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "1932:1:13"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "1935:4:13",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1935:4:13",
                                                    "type": "",
                                                    "value": "0x20"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "1928:3:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1928:3:13"
                                                },
                                                "nativeSrc": "1928:12:13",
                                                "nodeType": "YulFunctionCall",
                                                "src": "1928:12:13"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "i",
                                                  "nativeSrc": "1923:1:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1923:1:13"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "pre": {
                                          "nativeSrc": "1902:3:13",
                                          "nodeType": "YulBlock",
                                          "src": "1902:3:13",
                                          "statements": []
                                        },
                                        "src": "1898:222:13"
                                      },
                                      {
                                        "body": {
                                          "nativeSrc": "2168:166:13",
                                          "nodeType": "YulBlock",
                                          "src": "2168:166:13",
                                          "statements": [
                                            {
                                              "nativeSrc": "2186:43:13",
                                              "nodeType": "YulVariableDeclaration",
                                              "src": "2186:43:13",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nativeSrc": "2213:3:13",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "2213:3:13"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nativeSrc": "2218:9:13",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "2218:9:13"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nativeSrc": "2209:3:13",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2209:3:13"
                                                    },
                                                    "nativeSrc": "2209:19:13",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "2209:19:13"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nativeSrc": "2203:5:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2203:5:13"
                                                },
                                                "nativeSrc": "2203:26:13",
                                                "nodeType": "YulFunctionCall",
                                                "src": "2203:26:13"
                                              },
                                              "variables": [
                                                {
                                                  "name": "lastValue",
                                                  "nativeSrc": "2190:9:13",
                                                  "nodeType": "YulTypedName",
                                                  "src": "2190:9:13",
                                                  "type": ""
                                                }
                                              ]
                                            },
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nativeSrc": "2253:6:13",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2253:6:13"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "lastValue",
                                                        "nativeSrc": "2265:9:13",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "2265:9:13"
                                                      },
                                                      {
                                                        "arguments": [
                                                          {
                                                            "arguments": [
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "arguments": [
                                                                      {
                                                                        "kind": "number",
                                                                        "nativeSrc": "2292:1:13",
                                                                        "nodeType": "YulLiteral",
                                                                        "src": "2292:1:13",
                                                                        "type": "",
                                                                        "value": "3"
                                                                      },
                                                                      {
                                                                        "name": "newLen",
                                                                        "nativeSrc": "2295:6:13",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2295:6:13"
                                                                      }
                                                                    ],
                                                                    "functionName": {
                                                                      "name": "shl",
                                                                      "nativeSrc": "2288:3:13",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "2288:3:13"
                                                                    },
                                                                    "nativeSrc": "2288:14:13",
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2288:14:13"
                                                                  },
                                                                  {
                                                                    "kind": "number",
                                                                    "nativeSrc": "2304:3:13",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "2304:3:13",
                                                                    "type": "",
                                                                    "value": "248"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "and",
                                                                  "nativeSrc": "2284:3:13",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "2284:3:13"
                                                                },
                                                                "nativeSrc": "2284:24:13",
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "2284:24:13"
                                                              },
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "kind": "number",
                                                                    "nativeSrc": "2314:1:13",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "2314:1:13",
                                                                    "type": "",
                                                                    "value": "0"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "not",
                                                                  "nativeSrc": "2310:3:13",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "2310:3:13"
                                                                },
                                                                "nativeSrc": "2310:6:13",
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "2310:6:13"
                                                              }
                                                            ],
                                                            "functionName": {
                                                              "name": "shr",
                                                              "nativeSrc": "2280:3:13",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "2280:3:13"
                                                            },
                                                            "nativeSrc": "2280:37:13",
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "2280:37:13"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "not",
                                                          "nativeSrc": "2276:3:13",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "2276:3:13"
                                                        },
                                                        "nativeSrc": "2276:42:13",
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "2276:42:13"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "and",
                                                      "nativeSrc": "2261:3:13",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2261:3:13"
                                                    },
                                                    "nativeSrc": "2261:58:13",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "2261:58:13"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nativeSrc": "2246:6:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2246:6:13"
                                                },
                                                "nativeSrc": "2246:74:13",
                                                "nodeType": "YulFunctionCall",
                                                "src": "2246:74:13"
                                              },
                                              "nativeSrc": "2246:74:13",
                                              "nodeType": "YulExpressionStatement",
                                              "src": "2246:74:13"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "loopEnd",
                                              "nativeSrc": "2139:7:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "2139:7:13"
                                            },
                                            {
                                              "name": "newLen",
                                              "nativeSrc": "2148:6:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "2148:6:13"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nativeSrc": "2136:2:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "2136:2:13"
                                          },
                                          "nativeSrc": "2136:19:13",
                                          "nodeType": "YulFunctionCall",
                                          "src": "2136:19:13"
                                        },
                                        "nativeSrc": "2133:201:13",
                                        "nodeType": "YulIf",
                                        "src": "2133:201:13"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nativeSrc": "2354:4:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "2354:4:13"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nativeSrc": "2368:1:13",
                                                      "nodeType": "YulLiteral",
                                                      "src": "2368:1:13",
                                                      "type": "",
                                                      "value": "1"
                                                    },
                                                    {
                                                      "name": "newLen",
                                                      "nativeSrc": "2371:6:13",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2371:6:13"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "shl",
                                                    "nativeSrc": "2364:3:13",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2364:3:13"
                                                  },
                                                  "nativeSrc": "2364:14:13",
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "2364:14:13"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "2380:1:13",
                                                  "nodeType": "YulLiteral",
                                                  "src": "2380:1:13",
                                                  "type": "",
                                                  "value": "1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "2360:3:13",
                                                "nodeType": "YulIdentifier",
                                                "src": "2360:3:13"
                                              },
                                              "nativeSrc": "2360:22:13",
                                              "nodeType": "YulFunctionCall",
                                              "src": "2360:22:13"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nativeSrc": "2347:6:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "2347:6:13"
                                          },
                                          "nativeSrc": "2347:36:13",
                                          "nodeType": "YulFunctionCall",
                                          "src": "2347:36:13"
                                        },
                                        "nativeSrc": "2347:36:13",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "2347:36:13"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "1744:649:13",
                                  "nodeType": "YulCase",
                                  "src": "1744:649:13",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "1749:1:13",
                                    "nodeType": "YulLiteral",
                                    "src": "1749:1:13",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nativeSrc": "2410:234:13",
                                    "nodeType": "YulBlock",
                                    "src": "2410:234:13",
                                    "statements": [
                                      {
                                        "nativeSrc": "2424:14:13",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "2424:14:13",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "2437:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "2437:1:13",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "2428:5:13",
                                            "nodeType": "YulTypedName",
                                            "src": "2428:5:13",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nativeSrc": "2473:67:13",
                                          "nodeType": "YulBlock",
                                          "src": "2473:67:13",
                                          "statements": [
                                            {
                                              "nativeSrc": "2491:35:13",
                                              "nodeType": "YulAssignment",
                                              "src": "2491:35:13",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nativeSrc": "2510:3:13",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "2510:3:13"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nativeSrc": "2515:9:13",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "2515:9:13"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nativeSrc": "2506:3:13",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2506:3:13"
                                                    },
                                                    "nativeSrc": "2506:19:13",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "2506:19:13"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nativeSrc": "2500:5:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2500:5:13"
                                                },
                                                "nativeSrc": "2500:26:13",
                                                "nodeType": "YulFunctionCall",
                                                "src": "2500:26:13"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "value",
                                                  "nativeSrc": "2491:5:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2491:5:13"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "name": "newLen",
                                          "nativeSrc": "2454:6:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "2454:6:13"
                                        },
                                        "nativeSrc": "2451:89:13",
                                        "nodeType": "YulIf",
                                        "src": "2451:89:13"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nativeSrc": "2560:4:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "2560:4:13"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "value",
                                                  "nativeSrc": "2619:5:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2619:5:13"
                                                },
                                                {
                                                  "name": "newLen",
                                                  "nativeSrc": "2626:6:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2626:6:13"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "extract_used_part_and_set_length_of_short_byte_array",
                                                "nativeSrc": "2566:52:13",
                                                "nodeType": "YulIdentifier",
                                                "src": "2566:52:13"
                                              },
                                              "nativeSrc": "2566:67:13",
                                              "nodeType": "YulFunctionCall",
                                              "src": "2566:67:13"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nativeSrc": "2553:6:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "2553:6:13"
                                          },
                                          "nativeSrc": "2553:81:13",
                                          "nodeType": "YulFunctionCall",
                                          "src": "2553:81:13"
                                        },
                                        "nativeSrc": "2553:81:13",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "2553:81:13"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "2402:242:13",
                                  "nodeType": "YulCase",
                                  "src": "2402:242:13",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nativeSrc": "1724:6:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "1724:6:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1732:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "1732:2:13",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "1721:2:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "1721:2:13"
                                },
                                "nativeSrc": "1721:14:13",
                                "nodeType": "YulFunctionCall",
                                "src": "1721:14:13"
                              },
                              "nativeSrc": "1714:930:13",
                              "nodeType": "YulSwitch",
                              "src": "1714:930:13"
                            }
                          ]
                        },
                        "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
                        "nativeSrc": "1351:1299:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "slot",
                            "nativeSrc": "1432:4:13",
                            "nodeType": "YulTypedName",
                            "src": "1432:4:13",
                            "type": ""
                          },
                          {
                            "name": "src",
                            "nativeSrc": "1438:3:13",
                            "nodeType": "YulTypedName",
                            "src": "1438:3:13",
                            "type": ""
                          }
                        ],
                        "src": "1351:1299:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "2687:95:13",
                          "nodeType": "YulBlock",
                          "src": "2687:95:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2704:1:13",
                                    "nodeType": "YulLiteral",
                                    "src": "2704:1:13",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2711:3:13",
                                        "nodeType": "YulLiteral",
                                        "src": "2711:3:13",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2716:10:13",
                                        "nodeType": "YulLiteral",
                                        "src": "2716:10:13",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "2707:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "2707:3:13"
                                    },
                                    "nativeSrc": "2707:20:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2707:20:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "2697:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "2697:6:13"
                                },
                                "nativeSrc": "2697:31:13",
                                "nodeType": "YulFunctionCall",
                                "src": "2697:31:13"
                              },
                              "nativeSrc": "2697:31:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "2697:31:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2744:1:13",
                                    "nodeType": "YulLiteral",
                                    "src": "2744:1:13",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2747:4:13",
                                    "nodeType": "YulLiteral",
                                    "src": "2747:4:13",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "2737:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "2737:6:13"
                                },
                                "nativeSrc": "2737:15:13",
                                "nodeType": "YulFunctionCall",
                                "src": "2737:15:13"
                              },
                              "nativeSrc": "2737:15:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "2737:15:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2768:1:13",
                                    "nodeType": "YulLiteral",
                                    "src": "2768:1:13",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2771:4:13",
                                    "nodeType": "YulLiteral",
                                    "src": "2771:4:13",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "2761:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "2761:6:13"
                                },
                                "nativeSrc": "2761:15:13",
                                "nodeType": "YulFunctionCall",
                                "src": "2761:15:13"
                              },
                              "nativeSrc": "2761:15:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "2761:15:13"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nativeSrc": "2655:127:13",
                        "nodeType": "YulFunctionDefinition",
                        "src": "2655:127:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "2856:306:13",
                          "nodeType": "YulBlock",
                          "src": "2856:306:13",
                          "statements": [
                            {
                              "nativeSrc": "2866:10:13",
                              "nodeType": "YulAssignment",
                              "src": "2866:10:13",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "2875:1:13",
                                "nodeType": "YulLiteral",
                                "src": "2875:1:13",
                                "type": "",
                                "value": "1"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nativeSrc": "2866:5:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "2866:5:13"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2885:13:13",
                              "nodeType": "YulAssignment",
                              "src": "2885:13:13",
                              "value": {
                                "name": "_base",
                                "nativeSrc": "2893:5:13",
                                "nodeType": "YulIdentifier",
                                "src": "2893:5:13"
                              },
                              "variableNames": [
                                {
                                  "name": "base",
                                  "nativeSrc": "2885:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "2885:4:13"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "2943:213:13",
                                "nodeType": "YulBlock",
                                "src": "2943:213:13",
                                "statements": [
                                  {
                                    "body": {
                                      "nativeSrc": "2985:22:13",
                                      "nodeType": "YulBlock",
                                      "src": "2985:22:13",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "panic_error_0x11",
                                              "nativeSrc": "2987:16:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "2987:16:13"
                                            },
                                            "nativeSrc": "2987:18:13",
                                            "nodeType": "YulFunctionCall",
                                            "src": "2987:18:13"
                                          },
                                          "nativeSrc": "2987:18:13",
                                          "nodeType": "YulExpressionStatement",
                                          "src": "2987:18:13"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nativeSrc": "2963:4:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "2963:4:13"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "max",
                                              "nativeSrc": "2973:3:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "2973:3:13"
                                            },
                                            {
                                              "name": "base",
                                              "nativeSrc": "2978:4:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "2978:4:13"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "div",
                                            "nativeSrc": "2969:3:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "2969:3:13"
                                          },
                                          "nativeSrc": "2969:14:13",
                                          "nodeType": "YulFunctionCall",
                                          "src": "2969:14:13"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "gt",
                                        "nativeSrc": "2960:2:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "2960:2:13"
                                      },
                                      "nativeSrc": "2960:24:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2960:24:13"
                                    },
                                    "nativeSrc": "2957:50:13",
                                    "nodeType": "YulIf",
                                    "src": "2957:50:13"
                                  },
                                  {
                                    "body": {
                                      "nativeSrc": "3040:29:13",
                                      "nodeType": "YulBlock",
                                      "src": "3040:29:13",
                                      "statements": [
                                        {
                                          "nativeSrc": "3042:25:13",
                                          "nodeType": "YulAssignment",
                                          "src": "3042:25:13",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "power",
                                                "nativeSrc": "3055:5:13",
                                                "nodeType": "YulIdentifier",
                                                "src": "3055:5:13"
                                              },
                                              {
                                                "name": "base",
                                                "nativeSrc": "3062:4:13",
                                                "nodeType": "YulIdentifier",
                                                "src": "3062:4:13"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mul",
                                              "nativeSrc": "3051:3:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "3051:3:13"
                                            },
                                            "nativeSrc": "3051:16:13",
                                            "nodeType": "YulFunctionCall",
                                            "src": "3051:16:13"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "power",
                                              "nativeSrc": "3042:5:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "3042:5:13"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "exponent",
                                          "nativeSrc": "3027:8:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "3027:8:13"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3037:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "3037:1:13",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nativeSrc": "3023:3:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "3023:3:13"
                                      },
                                      "nativeSrc": "3023:16:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3023:16:13"
                                    },
                                    "nativeSrc": "3020:49:13",
                                    "nodeType": "YulIf",
                                    "src": "3020:49:13"
                                  },
                                  {
                                    "nativeSrc": "3082:23:13",
                                    "nodeType": "YulAssignment",
                                    "src": "3082:23:13",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nativeSrc": "3094:4:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "3094:4:13"
                                        },
                                        {
                                          "name": "base",
                                          "nativeSrc": "3100:4:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "3100:4:13"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mul",
                                        "nativeSrc": "3090:3:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "3090:3:13"
                                      },
                                      "nativeSrc": "3090:15:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3090:15:13"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "base",
                                        "nativeSrc": "3082:4:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "3082:4:13"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "3118:28:13",
                                    "nodeType": "YulAssignment",
                                    "src": "3118:28:13",
                                    "value": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3134:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "3134:1:13",
                                          "type": "",
                                          "value": "1"
                                        },
                                        {
                                          "name": "exponent",
                                          "nativeSrc": "3137:8:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "3137:8:13"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shr",
                                        "nativeSrc": "3130:3:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "3130:3:13"
                                      },
                                      "nativeSrc": "3130:16:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3130:16:13"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "exponent",
                                        "nativeSrc": "3118:8:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "3118:8:13"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nativeSrc": "2918:8:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "2918:8:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2928:1:13",
                                    "nodeType": "YulLiteral",
                                    "src": "2928:1:13",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "2915:2:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "2915:2:13"
                                },
                                "nativeSrc": "2915:15:13",
                                "nodeType": "YulFunctionCall",
                                "src": "2915:15:13"
                              },
                              "nativeSrc": "2907:249:13",
                              "nodeType": "YulForLoop",
                              "post": {
                                "nativeSrc": "2931:3:13",
                                "nodeType": "YulBlock",
                                "src": "2931:3:13",
                                "statements": []
                              },
                              "pre": {
                                "nativeSrc": "2911:3:13",
                                "nodeType": "YulBlock",
                                "src": "2911:3:13",
                                "statements": []
                              },
                              "src": "2907:249:13"
                            }
                          ]
                        },
                        "name": "checked_exp_helper",
                        "nativeSrc": "2787:375:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "_base",
                            "nativeSrc": "2815:5:13",
                            "nodeType": "YulTypedName",
                            "src": "2815:5:13",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nativeSrc": "2822:8:13",
                            "nodeType": "YulTypedName",
                            "src": "2822:8:13",
                            "type": ""
                          },
                          {
                            "name": "max",
                            "nativeSrc": "2832:3:13",
                            "nodeType": "YulTypedName",
                            "src": "2832:3:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nativeSrc": "2840:5:13",
                            "nodeType": "YulTypedName",
                            "src": "2840:5:13",
                            "type": ""
                          },
                          {
                            "name": "base",
                            "nativeSrc": "2847:4:13",
                            "nodeType": "YulTypedName",
                            "src": "2847:4:13",
                            "type": ""
                          }
                        ],
                        "src": "2787:375:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "3226:843:13",
                          "nodeType": "YulBlock",
                          "src": "3226:843:13",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "3264:52:13",
                                "nodeType": "YulBlock",
                                "src": "3264:52:13",
                                "statements": [
                                  {
                                    "nativeSrc": "3278:10:13",
                                    "nodeType": "YulAssignment",
                                    "src": "3278:10:13",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "3287:1:13",
                                      "nodeType": "YulLiteral",
                                      "src": "3287:1:13",
                                      "type": "",
                                      "value": "1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nativeSrc": "3278:5:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "3278:5:13"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "3301:5:13",
                                    "nodeType": "YulLeave",
                                    "src": "3301:5:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nativeSrc": "3246:8:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "3246:8:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "3239:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "3239:6:13"
                                },
                                "nativeSrc": "3239:16:13",
                                "nodeType": "YulFunctionCall",
                                "src": "3239:16:13"
                              },
                              "nativeSrc": "3236:80:13",
                              "nodeType": "YulIf",
                              "src": "3236:80:13"
                            },
                            {
                              "body": {
                                "nativeSrc": "3349:52:13",
                                "nodeType": "YulBlock",
                                "src": "3349:52:13",
                                "statements": [
                                  {
                                    "nativeSrc": "3363:10:13",
                                    "nodeType": "YulAssignment",
                                    "src": "3363:10:13",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "3372:1:13",
                                      "nodeType": "YulLiteral",
                                      "src": "3372:1:13",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nativeSrc": "3363:5:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "3363:5:13"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "3386:5:13",
                                    "nodeType": "YulLeave",
                                    "src": "3386:5:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nativeSrc": "3335:4:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "3335:4:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "3328:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "3328:6:13"
                                },
                                "nativeSrc": "3328:12:13",
                                "nodeType": "YulFunctionCall",
                                "src": "3328:12:13"
                              },
                              "nativeSrc": "3325:76:13",
                              "nodeType": "YulIf",
                              "src": "3325:76:13"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nativeSrc": "3437:52:13",
                                    "nodeType": "YulBlock",
                                    "src": "3437:52:13",
                                    "statements": [
                                      {
                                        "nativeSrc": "3451:10:13",
                                        "nodeType": "YulAssignment",
                                        "src": "3451:10:13",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "3460:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "3460:1:13",
                                          "type": "",
                                          "value": "1"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nativeSrc": "3451:5:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "3451:5:13"
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "3474:5:13",
                                        "nodeType": "YulLeave",
                                        "src": "3474:5:13"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "3430:59:13",
                                  "nodeType": "YulCase",
                                  "src": "3430:59:13",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "3435:1:13",
                                    "nodeType": "YulLiteral",
                                    "src": "3435:1:13",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nativeSrc": "3505:167:13",
                                    "nodeType": "YulBlock",
                                    "src": "3505:167:13",
                                    "statements": [
                                      {
                                        "body": {
                                          "nativeSrc": "3540:22:13",
                                          "nodeType": "YulBlock",
                                          "src": "3540:22:13",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "panic_error_0x11",
                                                  "nativeSrc": "3542:16:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3542:16:13"
                                                },
                                                "nativeSrc": "3542:18:13",
                                                "nodeType": "YulFunctionCall",
                                                "src": "3542:18:13"
                                              },
                                              "nativeSrc": "3542:18:13",
                                              "nodeType": "YulExpressionStatement",
                                              "src": "3542:18:13"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "exponent",
                                              "nativeSrc": "3525:8:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "3525:8:13"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "3535:3:13",
                                              "nodeType": "YulLiteral",
                                              "src": "3535:3:13",
                                              "type": "",
                                              "value": "255"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "gt",
                                            "nativeSrc": "3522:2:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "3522:2:13"
                                          },
                                          "nativeSrc": "3522:17:13",
                                          "nodeType": "YulFunctionCall",
                                          "src": "3522:17:13"
                                        },
                                        "nativeSrc": "3519:43:13",
                                        "nodeType": "YulIf",
                                        "src": "3519:43:13"
                                      },
                                      {
                                        "nativeSrc": "3575:25:13",
                                        "nodeType": "YulAssignment",
                                        "src": "3575:25:13",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "exponent",
                                              "nativeSrc": "3588:8:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "3588:8:13"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "3598:1:13",
                                              "nodeType": "YulLiteral",
                                              "src": "3598:1:13",
                                              "type": "",
                                              "value": "1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nativeSrc": "3584:3:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "3584:3:13"
                                          },
                                          "nativeSrc": "3584:16:13",
                                          "nodeType": "YulFunctionCall",
                                          "src": "3584:16:13"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nativeSrc": "3575:5:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "3575:5:13"
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "3613:11:13",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "3613:11:13",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "3623:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "3623:1:13",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "_1",
                                            "nativeSrc": "3617:2:13",
                                            "nodeType": "YulTypedName",
                                            "src": "3617:2:13",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "3637:7:13",
                                        "nodeType": "YulAssignment",
                                        "src": "3637:7:13",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "3643:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "3643:1:13",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "_1",
                                            "nativeSrc": "3637:2:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "3637:2:13"
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "3657:5:13",
                                        "nodeType": "YulLeave",
                                        "src": "3657:5:13"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "3498:174:13",
                                  "nodeType": "YulCase",
                                  "src": "3498:174:13",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "3503:1:13",
                                    "nodeType": "YulLiteral",
                                    "src": "3503:1:13",
                                    "type": "",
                                    "value": "2"
                                  }
                                }
                              ],
                              "expression": {
                                "name": "base",
                                "nativeSrc": "3417:4:13",
                                "nodeType": "YulIdentifier",
                                "src": "3417:4:13"
                              },
                              "nativeSrc": "3410:262:13",
                              "nodeType": "YulSwitch",
                              "src": "3410:262:13"
                            },
                            {
                              "body": {
                                "nativeSrc": "3770:114:13",
                                "nodeType": "YulBlock",
                                "src": "3770:114:13",
                                "statements": [
                                  {
                                    "nativeSrc": "3784:28:13",
                                    "nodeType": "YulAssignment",
                                    "src": "3784:28:13",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nativeSrc": "3797:4:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "3797:4:13"
                                        },
                                        {
                                          "name": "exponent",
                                          "nativeSrc": "3803:8:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "3803:8:13"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "exp",
                                        "nativeSrc": "3793:3:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "3793:3:13"
                                      },
                                      "nativeSrc": "3793:19:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3793:19:13"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nativeSrc": "3784:5:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "3784:5:13"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "3825:11:13",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "3825:11:13",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "3835:1:13",
                                      "nodeType": "YulLiteral",
                                      "src": "3835:1:13",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "_2",
                                        "nativeSrc": "3829:2:13",
                                        "nodeType": "YulTypedName",
                                        "src": "3829:2:13",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "3849:7:13",
                                    "nodeType": "YulAssignment",
                                    "src": "3849:7:13",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "3855:1:13",
                                      "nodeType": "YulLiteral",
                                      "src": "3855:1:13",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "_2",
                                        "nativeSrc": "3849:2:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "3849:2:13"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "3869:5:13",
                                    "nodeType": "YulLeave",
                                    "src": "3869:5:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nativeSrc": "3694:4:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "3694:4:13"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "3700:2:13",
                                            "nodeType": "YulLiteral",
                                            "src": "3700:2:13",
                                            "type": "",
                                            "value": "11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "3691:2:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "3691:2:13"
                                        },
                                        "nativeSrc": "3691:12:13",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3691:12:13"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nativeSrc": "3708:8:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "3708:8:13"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "3718:2:13",
                                            "nodeType": "YulLiteral",
                                            "src": "3718:2:13",
                                            "type": "",
                                            "value": "78"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "3705:2:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "3705:2:13"
                                        },
                                        "nativeSrc": "3705:16:13",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3705:16:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "3687:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "3687:3:13"
                                    },
                                    "nativeSrc": "3687:35:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3687:35:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nativeSrc": "3731:4:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "3731:4:13"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "3737:3:13",
                                            "nodeType": "YulLiteral",
                                            "src": "3737:3:13",
                                            "type": "",
                                            "value": "307"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "3728:2:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "3728:2:13"
                                        },
                                        "nativeSrc": "3728:13:13",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3728:13:13"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nativeSrc": "3746:8:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "3746:8:13"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "3756:2:13",
                                            "nodeType": "YulLiteral",
                                            "src": "3756:2:13",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "3743:2:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "3743:2:13"
                                        },
                                        "nativeSrc": "3743:16:13",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3743:16:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "3724:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "3724:3:13"
                                    },
                                    "nativeSrc": "3724:36:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3724:36:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nativeSrc": "3684:2:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "3684:2:13"
                                },
                                "nativeSrc": "3684:77:13",
                                "nodeType": "YulFunctionCall",
                                "src": "3684:77:13"
                              },
                              "nativeSrc": "3681:203:13",
                              "nodeType": "YulIf",
                              "src": "3681:203:13"
                            },
                            {
                              "nativeSrc": "3893:65:13",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3893:65:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nativeSrc": "3935:4:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "3935:4:13"
                                  },
                                  {
                                    "name": "exponent",
                                    "nativeSrc": "3941:8:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "3941:8:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3955:1:13",
                                        "nodeType": "YulLiteral",
                                        "src": "3955:1:13",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nativeSrc": "3951:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "3951:3:13"
                                    },
                                    "nativeSrc": "3951:6:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3951:6:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_helper",
                                  "nativeSrc": "3916:18:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "3916:18:13"
                                },
                                "nativeSrc": "3916:42:13",
                                "nodeType": "YulFunctionCall",
                                "src": "3916:42:13"
                              },
                              "variables": [
                                {
                                  "name": "power_1",
                                  "nativeSrc": "3897:7:13",
                                  "nodeType": "YulTypedName",
                                  "src": "3897:7:13",
                                  "type": ""
                                },
                                {
                                  "name": "base_1",
                                  "nativeSrc": "3906:6:13",
                                  "nodeType": "YulTypedName",
                                  "src": "3906:6:13",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "4003:22:13",
                                "nodeType": "YulBlock",
                                "src": "4003:22:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "4005:16:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "4005:16:13"
                                      },
                                      "nativeSrc": "4005:18:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4005:18:13"
                                    },
                                    "nativeSrc": "4005:18:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4005:18:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "power_1",
                                    "nativeSrc": "3973:7:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "3973:7:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "3990:1:13",
                                            "nodeType": "YulLiteral",
                                            "src": "3990:1:13",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nativeSrc": "3986:3:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "3986:3:13"
                                        },
                                        "nativeSrc": "3986:6:13",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3986:6:13"
                                      },
                                      {
                                        "name": "base_1",
                                        "nativeSrc": "3994:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "3994:6:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "div",
                                      "nativeSrc": "3982:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "3982:3:13"
                                    },
                                    "nativeSrc": "3982:19:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3982:19:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "3970:2:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "3970:2:13"
                                },
                                "nativeSrc": "3970:32:13",
                                "nodeType": "YulFunctionCall",
                                "src": "3970:32:13"
                              },
                              "nativeSrc": "3967:58:13",
                              "nodeType": "YulIf",
                              "src": "3967:58:13"
                            },
                            {
                              "nativeSrc": "4034:29:13",
                              "nodeType": "YulAssignment",
                              "src": "4034:29:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power_1",
                                    "nativeSrc": "4047:7:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "4047:7:13"
                                  },
                                  {
                                    "name": "base_1",
                                    "nativeSrc": "4056:6:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "4056:6:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nativeSrc": "4043:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "4043:3:13"
                                },
                                "nativeSrc": "4043:20:13",
                                "nodeType": "YulFunctionCall",
                                "src": "4043:20:13"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nativeSrc": "4034:5:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "4034:5:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_unsigned",
                        "nativeSrc": "3167:902:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nativeSrc": "3197:4:13",
                            "nodeType": "YulTypedName",
                            "src": "3197:4:13",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nativeSrc": "3203:8:13",
                            "nodeType": "YulTypedName",
                            "src": "3203:8:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nativeSrc": "3216:5:13",
                            "nodeType": "YulTypedName",
                            "src": "3216:5:13",
                            "type": ""
                          }
                        ],
                        "src": "3167:902:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "4142:72:13",
                          "nodeType": "YulBlock",
                          "src": "4142:72:13",
                          "statements": [
                            {
                              "nativeSrc": "4152:56:13",
                              "nodeType": "YulAssignment",
                              "src": "4152:56:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nativeSrc": "4182:4:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "4182:4:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "exponent",
                                        "nativeSrc": "4192:8:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "4192:8:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4202:4:13",
                                        "nodeType": "YulLiteral",
                                        "src": "4202:4:13",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "4188:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "4188:3:13"
                                    },
                                    "nativeSrc": "4188:19:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4188:19:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_unsigned",
                                  "nativeSrc": "4161:20:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "4161:20:13"
                                },
                                "nativeSrc": "4161:47:13",
                                "nodeType": "YulFunctionCall",
                                "src": "4161:47:13"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nativeSrc": "4152:5:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "4152:5:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_t_uint256_t_uint8",
                        "nativeSrc": "4074:140:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nativeSrc": "4113:4:13",
                            "nodeType": "YulTypedName",
                            "src": "4113:4:13",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nativeSrc": "4119:8:13",
                            "nodeType": "YulTypedName",
                            "src": "4119:8:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nativeSrc": "4132:5:13",
                            "nodeType": "YulTypedName",
                            "src": "4132:5:13",
                            "type": ""
                          }
                        ],
                        "src": "4074:140:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "4271:116:13",
                          "nodeType": "YulBlock",
                          "src": "4271:116:13",
                          "statements": [
                            {
                              "nativeSrc": "4281:20:13",
                              "nodeType": "YulAssignment",
                              "src": "4281:20:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "4296:1:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "4296:1:13"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "4299:1:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "4299:1:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nativeSrc": "4292:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "4292:3:13"
                                },
                                "nativeSrc": "4292:9:13",
                                "nodeType": "YulFunctionCall",
                                "src": "4292:9:13"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nativeSrc": "4281:7:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "4281:7:13"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "4359:22:13",
                                "nodeType": "YulBlock",
                                "src": "4359:22:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "4361:16:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "4361:16:13"
                                      },
                                      "nativeSrc": "4361:18:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4361:18:13"
                                    },
                                    "nativeSrc": "4361:18:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4361:18:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nativeSrc": "4330:1:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "4330:1:13"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nativeSrc": "4323:6:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "4323:6:13"
                                        },
                                        "nativeSrc": "4323:9:13",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4323:9:13"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "y",
                                            "nativeSrc": "4337:1:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "4337:1:13"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "name": "product",
                                                "nativeSrc": "4344:7:13",
                                                "nodeType": "YulIdentifier",
                                                "src": "4344:7:13"
                                              },
                                              {
                                                "name": "x",
                                                "nativeSrc": "4353:1:13",
                                                "nodeType": "YulIdentifier",
                                                "src": "4353:1:13"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "div",
                                              "nativeSrc": "4340:3:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "4340:3:13"
                                            },
                                            "nativeSrc": "4340:15:13",
                                            "nodeType": "YulFunctionCall",
                                            "src": "4340:15:13"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "eq",
                                          "nativeSrc": "4334:2:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "4334:2:13"
                                        },
                                        "nativeSrc": "4334:22:13",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4334:22:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "or",
                                      "nativeSrc": "4320:2:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "4320:2:13"
                                    },
                                    "nativeSrc": "4320:37:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4320:37:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "4313:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "4313:6:13"
                                },
                                "nativeSrc": "4313:45:13",
                                "nodeType": "YulFunctionCall",
                                "src": "4313:45:13"
                              },
                              "nativeSrc": "4310:71:13",
                              "nodeType": "YulIf",
                              "src": "4310:71:13"
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nativeSrc": "4219:168:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "4250:1:13",
                            "nodeType": "YulTypedName",
                            "src": "4250:1:13",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "4253:1:13",
                            "nodeType": "YulTypedName",
                            "src": "4253:1:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nativeSrc": "4259:7:13",
                            "nodeType": "YulTypedName",
                            "src": "4259:7:13",
                            "type": ""
                          }
                        ],
                        "src": "4219:168:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "4493:102:13",
                          "nodeType": "YulBlock",
                          "src": "4493:102:13",
                          "statements": [
                            {
                              "nativeSrc": "4503:26:13",
                              "nodeType": "YulAssignment",
                              "src": "4503:26:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4515:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "4515:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4526:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "4526:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "4511:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "4511:3:13"
                                },
                                "nativeSrc": "4511:18:13",
                                "nodeType": "YulFunctionCall",
                                "src": "4511:18:13"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "4503:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "4503:4:13"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4545:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "4545:9:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "4560:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "4560:6:13"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "4576:3:13",
                                                "nodeType": "YulLiteral",
                                                "src": "4576:3:13",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "4581:1:13",
                                                "nodeType": "YulLiteral",
                                                "src": "4581:1:13",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "4572:3:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "4572:3:13"
                                            },
                                            "nativeSrc": "4572:11:13",
                                            "nodeType": "YulFunctionCall",
                                            "src": "4572:11:13"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4585:1:13",
                                            "nodeType": "YulLiteral",
                                            "src": "4585:1:13",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "4568:3:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "4568:3:13"
                                        },
                                        "nativeSrc": "4568:19:13",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4568:19:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "4556:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "4556:3:13"
                                    },
                                    "nativeSrc": "4556:32:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4556:32:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4538:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "4538:6:13"
                                },
                                "nativeSrc": "4538:51:13",
                                "nodeType": "YulFunctionCall",
                                "src": "4538:51:13"
                              },
                              "nativeSrc": "4538:51:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "4538:51:13"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nativeSrc": "4392:203:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "4462:9:13",
                            "nodeType": "YulTypedName",
                            "src": "4462:9:13",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "4473:6:13",
                            "nodeType": "YulTypedName",
                            "src": "4473:6:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "4484:4:13",
                            "nodeType": "YulTypedName",
                            "src": "4484:4:13",
                            "type": ""
                          }
                        ],
                        "src": "4392:203:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "4774:172:13",
                          "nodeType": "YulBlock",
                          "src": "4774:172:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4791:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "4791:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4802:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "4802:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4784:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "4784:6:13"
                                },
                                "nativeSrc": "4784:21:13",
                                "nodeType": "YulFunctionCall",
                                "src": "4784:21:13"
                              },
                              "nativeSrc": "4784:21:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "4784:21:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "4825:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "4825:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4836:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "4836:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "4821:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "4821:3:13"
                                    },
                                    "nativeSrc": "4821:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4821:18:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4841:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "4841:2:13",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4814:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "4814:6:13"
                                },
                                "nativeSrc": "4814:30:13",
                                "nodeType": "YulFunctionCall",
                                "src": "4814:30:13"
                              },
                              "nativeSrc": "4814:30:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "4814:30:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "4864:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "4864:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4875:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "4875:2:13",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "4860:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "4860:3:13"
                                    },
                                    "nativeSrc": "4860:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4860:18:13"
                                  },
                                  {
                                    "hexValue": "546f6b656e207472616e736665727320706175736564",
                                    "kind": "string",
                                    "nativeSrc": "4880:24:13",
                                    "nodeType": "YulLiteral",
                                    "src": "4880:24:13",
                                    "type": "",
                                    "value": "Token transfers paused"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4853:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "4853:6:13"
                                },
                                "nativeSrc": "4853:52:13",
                                "nodeType": "YulFunctionCall",
                                "src": "4853:52:13"
                              },
                              "nativeSrc": "4853:52:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "4853:52:13"
                            },
                            {
                              "nativeSrc": "4914:26:13",
                              "nodeType": "YulAssignment",
                              "src": "4914:26:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4926:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "4926:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4937:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "4937:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "4922:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "4922:3:13"
                                },
                                "nativeSrc": "4922:18:13",
                                "nodeType": "YulFunctionCall",
                                "src": "4922:18:13"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "4914:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "4914:4:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_6da2590c3034ef1da0b0fb0657e080f278b93f51f0369c416eeea6511934843d__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "4600:346:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "4751:9:13",
                            "nodeType": "YulTypedName",
                            "src": "4751:9:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "4765:4:13",
                            "nodeType": "YulTypedName",
                            "src": "4765:4:13",
                            "type": ""
                          }
                        ],
                        "src": "4600:346:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "4999:77:13",
                          "nodeType": "YulBlock",
                          "src": "4999:77:13",
                          "statements": [
                            {
                              "nativeSrc": "5009:16:13",
                              "nodeType": "YulAssignment",
                              "src": "5009:16:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "5020:1:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "5020:1:13"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "5023:1:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "5023:1:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5016:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "5016:3:13"
                                },
                                "nativeSrc": "5016:9:13",
                                "nodeType": "YulFunctionCall",
                                "src": "5016:9:13"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nativeSrc": "5009:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "5009:3:13"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "5048:22:13",
                                "nodeType": "YulBlock",
                                "src": "5048:22:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "5050:16:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "5050:16:13"
                                      },
                                      "nativeSrc": "5050:18:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5050:18:13"
                                    },
                                    "nativeSrc": "5050:18:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5050:18:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "5040:1:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "5040:1:13"
                                  },
                                  {
                                    "name": "sum",
                                    "nativeSrc": "5043:3:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "5043:3:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "5037:2:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "5037:2:13"
                                },
                                "nativeSrc": "5037:10:13",
                                "nodeType": "YulFunctionCall",
                                "src": "5037:10:13"
                              },
                              "nativeSrc": "5034:36:13",
                              "nodeType": "YulIf",
                              "src": "5034:36:13"
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nativeSrc": "4951:125:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "4982:1:13",
                            "nodeType": "YulTypedName",
                            "src": "4982:1:13",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "4985:1:13",
                            "nodeType": "YulTypedName",
                            "src": "4985:1:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nativeSrc": "4991:3:13",
                            "nodeType": "YulTypedName",
                            "src": "4991:3:13",
                            "type": ""
                          }
                        ],
                        "src": "4951:125:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "5238:188:13",
                          "nodeType": "YulBlock",
                          "src": "5238:188:13",
                          "statements": [
                            {
                              "nativeSrc": "5248:26:13",
                              "nodeType": "YulAssignment",
                              "src": "5248:26:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5260:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "5260:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5271:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "5271:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5256:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "5256:3:13"
                                },
                                "nativeSrc": "5256:18:13",
                                "nodeType": "YulFunctionCall",
                                "src": "5256:18:13"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "5248:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "5248:4:13"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5290:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "5290:9:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "5305:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "5305:6:13"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "5321:3:13",
                                                "nodeType": "YulLiteral",
                                                "src": "5321:3:13",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "5326:1:13",
                                                "nodeType": "YulLiteral",
                                                "src": "5326:1:13",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "5317:3:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "5317:3:13"
                                            },
                                            "nativeSrc": "5317:11:13",
                                            "nodeType": "YulFunctionCall",
                                            "src": "5317:11:13"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "5330:1:13",
                                            "nodeType": "YulLiteral",
                                            "src": "5330:1:13",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "5313:3:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "5313:3:13"
                                        },
                                        "nativeSrc": "5313:19:13",
                                        "nodeType": "YulFunctionCall",
                                        "src": "5313:19:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "5301:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "5301:3:13"
                                    },
                                    "nativeSrc": "5301:32:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5301:32:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5283:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "5283:6:13"
                                },
                                "nativeSrc": "5283:51:13",
                                "nodeType": "YulFunctionCall",
                                "src": "5283:51:13"
                              },
                              "nativeSrc": "5283:51:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "5283:51:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5354:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "5354:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5365:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "5365:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5350:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "5350:3:13"
                                    },
                                    "nativeSrc": "5350:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5350:18:13"
                                  },
                                  {
                                    "name": "value1",
                                    "nativeSrc": "5370:6:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "5370:6:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5343:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "5343:6:13"
                                },
                                "nativeSrc": "5343:34:13",
                                "nodeType": "YulFunctionCall",
                                "src": "5343:34:13"
                              },
                              "nativeSrc": "5343:34:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "5343:34:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5397:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "5397:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5408:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "5408:2:13",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5393:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "5393:3:13"
                                    },
                                    "nativeSrc": "5393:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5393:18:13"
                                  },
                                  {
                                    "name": "value2",
                                    "nativeSrc": "5413:6:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "5413:6:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5386:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "5386:6:13"
                                },
                                "nativeSrc": "5386:34:13",
                                "nodeType": "YulFunctionCall",
                                "src": "5386:34:13"
                              },
                              "nativeSrc": "5386:34:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "5386:34:13"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
                        "nativeSrc": "5081:345:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "5191:9:13",
                            "nodeType": "YulTypedName",
                            "src": "5191:9:13",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "5202:6:13",
                            "nodeType": "YulTypedName",
                            "src": "5202:6:13",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "5210:6:13",
                            "nodeType": "YulTypedName",
                            "src": "5210:6:13",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "5218:6:13",
                            "nodeType": "YulTypedName",
                            "src": "5218:6:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "5229:4:13",
                            "nodeType": "YulTypedName",
                            "src": "5229:4:13",
                            "type": ""
                          }
                        ],
                        "src": "5081:345:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "5532:76:13",
                          "nodeType": "YulBlock",
                          "src": "5532:76:13",
                          "statements": [
                            {
                              "nativeSrc": "5542:26:13",
                              "nodeType": "YulAssignment",
                              "src": "5542:26:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5554:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "5554:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5565:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "5565:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5550:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "5550:3:13"
                                },
                                "nativeSrc": "5550:18:13",
                                "nodeType": "YulFunctionCall",
                                "src": "5550:18:13"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "5542:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "5542:4:13"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5584:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "5584:9:13"
                                  },
                                  {
                                    "name": "value0",
                                    "nativeSrc": "5595:6:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "5595:6:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5577:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "5577:6:13"
                                },
                                "nativeSrc": "5577:25:13",
                                "nodeType": "YulFunctionCall",
                                "src": "5577:25:13"
                              },
                              "nativeSrc": "5577:25:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "5577:25:13"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nativeSrc": "5431:177:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "5501:9:13",
                            "nodeType": "YulTypedName",
                            "src": "5501:9:13",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "5512:6:13",
                            "nodeType": "YulTypedName",
                            "src": "5512:6:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "5523:4:13",
                            "nodeType": "YulTypedName",
                            "src": "5523:4:13",
                            "type": ""
                          }
                        ],
                        "src": "5431:177:13"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent, max) -> power, base\n    {\n        power := 1\n        base := _base\n        for { } gt(exponent, 1) { }\n        {\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            let _1 := 0\n            _1 := 0\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            let _2 := 0\n            _2 := 0\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent, not(0))\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_6da2590c3034ef1da0b0fb0657e080f278b93f51f0369c416eeea6511934843d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Token transfers paused\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
                  "id": 13,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x2 PUSH1 0xC SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH13 0x10D85B5C1D5CC810DC99591A5D PUSH1 0x9A SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x10D491511255 PUSH1 0xD2 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x6A SWAP2 SWAP1 PUSH2 0x458 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x77 DUP3 DUP3 PUSH2 0x458 JUMP JUMPDEST POP PUSH2 0x87 SWAP2 POP PUSH1 0x0 SWAP1 POP CALLER PUSH2 0x105 JUMP JUMPDEST POP PUSH2 0xB2 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A CALLER PUSH2 0x105 JUMP JUMPDEST POP PUSH2 0xDD PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 CALLER PUSH2 0x105 JUMP JUMPDEST POP PUSH2 0x100 CALLER PUSH2 0xEE PUSH1 0x12 PUSH1 0xA PUSH2 0x613 JUMP JUMPDEST PUSH2 0xFB SWAP1 PUSH3 0xF4240 PUSH2 0x629 JUMP JUMPDEST PUSH2 0x1B5 JUMP JUMPDEST PUSH2 0x653 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1AB JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x163 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x1AF JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1E4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F0 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1F4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x247 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E207472616E73666572732070617573656400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1DB JUMP JUMPDEST PUSH2 0x252 DUP4 DUP4 DUP4 PUSH2 0x257 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x25F PUSH2 0x26A JUMP JUMPDEST PUSH2 0x252 DUP4 DUP4 DUP4 PUSH2 0x290 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x28E JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2BB JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x640 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x32D SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x30E JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x1DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x349 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x368 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x3AD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3E4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x404 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x252 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x431 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x451 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x43D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x471 JUMPI PUSH2 0x471 PUSH2 0x3BA JUMP JUMPDEST PUSH2 0x485 DUP2 PUSH2 0x47F DUP5 SLOAD PUSH2 0x3D0 JUMP JUMPDEST DUP5 PUSH2 0x40A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4B9 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x4A1 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x451 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4E9 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x4C9 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x507 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x567 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x54B JUMPI PUSH2 0x54B PUSH2 0x516 JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x559 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x530 JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x57E JUMPI POP PUSH1 0x1 PUSH2 0x1AF JUMP JUMPDEST DUP2 PUSH2 0x58B JUMPI POP PUSH1 0x0 PUSH2 0x1AF JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x5A1 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x5AB JUMPI PUSH2 0x5C7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1AF JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x5BC JUMPI PUSH2 0x5BC PUSH2 0x516 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x1AF JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x5EA JUMPI POP DUP2 DUP2 EXP PUSH2 0x1AF JUMP JUMPDEST PUSH2 0x5F7 PUSH1 0x0 NOT DUP5 DUP5 PUSH2 0x52C JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x60B JUMPI PUSH2 0x60B PUSH2 0x516 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x622 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x56F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1AF JUMPI PUSH2 0x1AF PUSH2 0x516 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1AF JUMPI PUSH2 0x1AF PUSH2 0x516 JUMP JUMPDEST PUSH2 0x1C23 DUP1 PUSH2 0x662 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x206 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42966C68 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0x91D14854 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x4EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x44A JUMPI DUP1 PUSH4 0xA6C8A384 EQ PUSH2 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0x8AEAC501 EQ PUSH2 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0x5CC18E2F EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x60CAA609 EQ PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x16C JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x251DE801 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x257CAF9E EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x2803212F EQ PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1A2F7167 GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x1A2F7167 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x1C9CEF04 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x22083BD0 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x25B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21E PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x16C3 JUMP JUMPDEST PUSH2 0x512 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23B PUSH2 0x549 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x16F4 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0x175E JUMP JUMPDEST PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22A JUMP JUMPDEST PUSH2 0x21E PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x25F PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x2A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x175E JUMP JUMPDEST PUSH2 0x5F3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21E PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x17A3 JUMP JUMPDEST PUSH2 0x803 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x17E0 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x312 CALLDATASIZE PUSH1 0x4 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x332 CALLDATASIZE PUSH1 0x4 PUSH2 0x175E JUMP JUMPDEST PUSH2 0x827 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0x17F9 JUMP JUMPDEST PUSH2 0x90D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22A JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x367 CALLDATASIZE PUSH1 0x4 PUSH2 0x17F9 JUMP JUMPDEST PUSH2 0x938 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x970 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x382 CALLDATASIZE PUSH1 0x4 PUSH2 0x175E JUMP JUMPDEST PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x395 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E0 JUMP JUMPDEST PUSH2 0xB63 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x21E JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x3B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x175E JUMP JUMPDEST PUSH2 0xB70 JUMP JUMPDEST PUSH2 0x23B PUSH2 0x3C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1788 JUMP JUMPDEST PUSH2 0xE1B JUMP JUMPDEST PUSH2 0x25F PUSH2 0x3D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x402 CALLDATASIZE PUSH1 0x4 PUSH2 0x175E JUMP JUMPDEST PUSH2 0xEB5 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0xECA JUMP JUMPDEST PUSH2 0x25F PUSH2 0x41D CALLDATASIZE PUSH1 0x4 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x43D CALLDATASIZE PUSH1 0x4 PUSH2 0x17F9 JUMP JUMPDEST PUSH2 0xF42 JUMP JUMPDEST PUSH2 0x23B PUSH2 0xF6D JUMP JUMPDEST PUSH2 0x25F PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x460 CALLDATASIZE PUSH1 0x4 PUSH2 0x183B JUMP JUMPDEST PUSH2 0xF7C JUMP JUMPDEST PUSH2 0x21E PUSH2 0x473 CALLDATASIZE PUSH1 0x4 PUSH2 0x175E JUMP JUMPDEST PUSH2 0x10CE JUMP JUMPDEST PUSH2 0x25F PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x4AD CALLDATASIZE PUSH1 0x4 PUSH2 0x17F9 JUMP JUMPDEST PUSH2 0x10DC JUMP JUMPDEST PUSH2 0x25F PUSH2 0x4C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1905 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x25F PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x543 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x558 SWAP1 PUSH2 0x192F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x584 SWAP1 PUSH2 0x192F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5D1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5A6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5D1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5B4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x5E9 DUP2 DUP6 DUP6 PUSH2 0x1101 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x64E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x66E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x645 SWAP1 PUSH2 0x1969 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x6C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x716 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x11185A5B1E481B1A5B5A5D081B9BDD081CD95D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x15180 SWAP1 PUSH2 0x735 SWAP1 TIMESTAMP PUSH2 0x19B4 JUMP JUMPDEST LT PUSH2 0x75A JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x8 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x781 SWAP1 DUP4 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST GT ISZERO PUSH2 0x7CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4461696C79207370656E64696E67206C696D6974206578636565646564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x7EE SWAP1 DUP5 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x7FF SWAP1 POP CALLER DUP4 DUP4 PUSH2 0x110E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x811 DUP6 DUP3 DUP6 PUSH2 0x116D JUMP JUMPDEST PUSH2 0x81C DUP6 DUP6 DUP6 PUSH2 0x110E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x832 DUP2 PUSH2 0x11E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x888 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642073747564656E742061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x8D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C696D6974206D7573742062652067726561746572207468616E207A65726F00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x9 DUP2 MSTORE DUP3 DUP3 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH1 0x8 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x928 DUP2 PUSH2 0x11E6 JUMP JUMPDEST PUSH2 0x932 DUP4 DUP4 PUSH2 0x11F0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x961 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x96B DUP3 DUP3 PUSH2 0x1284 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x99A PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A CALLER PUSH2 0xF42 JUMP JUMPDEST PUSH2 0x9E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x21B0B63632B91034B9903737BA1030903830BAB9981839 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST PUSH2 0x9E8 PUSH2 0x12F1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA14 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 CALLER PUSH2 0xF42 JUMP JUMPDEST PUSH2 0xA59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x21B0B63632B91034B9903737BA10309036B4B73A32B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xA79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x645 SWAP1 PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xACF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206D696E7420746F207A65726F20616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST PUSH2 0xADB PUSH1 0x12 PUSH1 0xA PUSH2 0x1AC1 JUMP JUMPDEST PUSH2 0xAE8 SWAP1 PUSH3 0xF4240 PUSH2 0x1AD0 JUMP JUMPDEST DUP2 PUSH2 0xB08 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB12 SWAP2 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST GT ISZERO PUSH2 0xB59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x135A5B9D1A5B99C81B1A5B5A5D08195E18D959591959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST PUSH2 0x7FF DUP3 DUP3 PUSH2 0x1343 JUMP JUMPDEST PUSH2 0xB6D CALLER DUP3 PUSH2 0x1379 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xBD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420612072656769737465726564206D65726368616E7400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xBF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x645 SWAP1 PUSH2 0x1969 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0xC62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742043616D707573204372656469742062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x645 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xCBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4461696C79206C696D6974206E6F742073657420666F722073656E6465720000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x15180 SWAP1 PUSH2 0xCDD SWAP1 TIMESTAMP PUSH2 0x19B4 JUMP JUMPDEST LT PUSH2 0xD02 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x8 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0xD29 SWAP1 DUP4 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST GT ISZERO PUSH2 0xD77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4461696C79207370656E64696E67206C696D6974206578636565646564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xD96 SWAP1 DUP5 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xDA7 SWAP1 POP CALLER DUP4 DUP4 PUSH2 0x110E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0xC SLOAD DUP4 PUSH2 0xDB9 SWAP2 SWAP1 PUSH2 0x1AD0 JUMP JUMPDEST PUSH2 0xDC3 SWAP2 SWAP1 PUSH2 0x1AE7 JUMP JUMPDEST SWAP1 POP PUSH2 0xDCF CALLER DUP3 PUSH2 0x1343 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 CALLER SWAP2 PUSH32 0x9B66A6E551CB32FF1FA78830F83B93BE1AA031A3B2BD93AA16818D97BA5602A1 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xE34 SWAP1 PUSH2 0x192F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE60 SWAP1 PUSH2 0x192F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEAD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE82 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEAD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE90 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0xEC0 DUP3 CALLER DUP4 PUSH2 0x116D JUMP JUMPDEST PUSH2 0x7FF DUP3 DUP3 PUSH2 0x1379 JUMP JUMPDEST PUSH2 0xEF4 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A CALLER PUSH2 0xF42 JUMP JUMPDEST PUSH2 0xF3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x21B0B63632B91034B9903737BA1030903830BAB9981839 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST PUSH2 0x9E8 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x558 SWAP1 PUSH2 0x192F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF87 DUP2 PUSH2 0x11E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xFDD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206D65726368616E7420616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT PUSH2 0x102E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726368616E74206E616D652063616E6E6F7420626520656D707479000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1097 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726368616E7420616C726561647920726567697374657265640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH2 0x932 DUP4 DUP3 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x5E9 DUP2 DUP6 DUP6 PUSH2 0x110E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x10F7 DUP2 PUSH2 0x11E6 JUMP JUMPDEST PUSH2 0x932 DUP4 DUP4 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x96B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x13EC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1138 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x645 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1162 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x645 JUMP JUMPDEST PUSH2 0x96B DUP4 DUP4 DUP4 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x932 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x11D7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST PUSH2 0x932 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x13EC JUMP JUMPDEST PUSH2 0xB6D DUP2 CALLER PUSH2 0x1518 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11FC DUP4 DUP4 PUSH2 0xF42 JUMP JUMPDEST PUSH2 0x127C JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1234 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x543 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1290 DUP4 DUP4 PUSH2 0xF42 JUMP JUMPDEST ISZERO PUSH2 0x127C JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x543 JUMP JUMPDEST PUSH2 0x12F9 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x136D JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x645 JUMP JUMPDEST PUSH2 0x7FF PUSH1 0x0 DUP4 DUP4 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x13A3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x645 JUMP JUMPDEST PUSH2 0x7FF DUP3 PUSH1 0x0 DUP4 PUSH2 0x14C1 JUMP JUMPDEST PUSH2 0x13B7 PUSH2 0x1574 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1326 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1416 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x645 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1440 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x645 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x932 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x14B3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x150D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x151BDAD95B881D1C985B9CD9995C9CC81C185D5CD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST PUSH2 0x96B DUP4 DUP4 DUP4 PUSH2 0x1598 JUMP JUMPDEST PUSH2 0x1522 DUP3 DUP3 PUSH2 0xF42 JUMP JUMPDEST PUSH2 0x7FF JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x645 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x9E8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x9E8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15A0 PUSH2 0x1574 JUMP JUMPDEST PUSH2 0x96B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x15D1 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x15C6 SWAP2 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1643 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1624 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x165F JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x167E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xE0E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x16ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1722 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x1705 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1771 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x177A DUP4 PUSH2 0x1742 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16ED DUP3 PUSH2 0x1742 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17C1 DUP5 PUSH2 0x1742 JUMP JUMPDEST SWAP3 POP PUSH2 0x17CF PUSH1 0x20 DUP6 ADD PUSH2 0x1742 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x180C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x181C PUSH1 0x20 DUP5 ADD PUSH2 0x1742 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x184E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1857 DUP4 PUSH2 0x1742 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1873 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1884 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x189E JUMPI PUSH2 0x189E PUSH2 0x1825 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x18CD JUMPI PUSH2 0x18CD PUSH2 0x1825 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x18E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1918 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1921 DUP4 PUSH2 0x1742 JUMP JUMPDEST SWAP2 POP PUSH2 0x181C PUSH1 0x20 DUP5 ADD PUSH2 0x1742 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1943 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1963 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x543 JUMPI PUSH2 0x543 PUSH2 0x199E JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x543 JUMPI PUSH2 0x543 PUSH2 0x199E JUMP JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x1A15 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x19F9 JUMPI PUSH2 0x19F9 PUSH2 0x199E JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x1A07 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x19DE JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1A2C JUMPI POP PUSH1 0x1 PUSH2 0x543 JUMP JUMPDEST DUP2 PUSH2 0x1A39 JUMPI POP PUSH1 0x0 PUSH2 0x543 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1A4F JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1A59 JUMPI PUSH2 0x1A75 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x543 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1A6A JUMPI PUSH2 0x1A6A PUSH2 0x199E JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x543 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1A98 JUMPI POP DUP2 DUP2 EXP PUSH2 0x543 JUMP JUMPDEST PUSH2 0x1AA5 PUSH1 0x0 NOT DUP5 DUP5 PUSH2 0x19DA JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1AB9 JUMPI PUSH2 0x1AB9 PUSH2 0x199E JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16ED PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x1A1D JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x543 JUMPI PUSH2 0x543 PUSH2 0x199E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1B04 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x96B JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1B30 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B50 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1B3C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B71 JUMPI PUSH2 0x1B71 PUSH2 0x1825 JUMP JUMPDEST PUSH2 0x1B85 DUP2 PUSH2 0x1B7F DUP5 SLOAD PUSH2 0x192F JUMP JUMPDEST DUP5 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1BB9 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x1BA1 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1B50 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1BE9 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1BC9 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x1C07 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ",
              "sourceMap": "604:6505:12:-:0;;;5871:1;5835:37;;1361:495;;;;;;;;;;1582:113:3;;;;;;;;;;;;;-1:-1:-1;;;1582:113:3;;;;;;;;;;;;;;;;-1:-1:-1;;;1582:113:3;;;1656:5;1648;:13;;;;;;:::i;:::-;-1:-1:-1;1671:7:3;:17;1681:7;1671;:17;:::i;:::-;-1:-1:-1;1517:42:12::1;::::0;-1:-1:-1;2232:4:0::1;::::0;-1:-1:-1;1548:10:12::1;1517;:42::i;:::-;-1:-1:-1::0;1615:35:12::1;759:24;1639:10;1615;:35::i;:::-;-1:-1:-1::0;1706:35:12::1;827:24;1730:10;1706;:35::i;:::-;-1:-1:-1::0;1802:47:12::1;1808:10;1832:16;2761:2:3::0;1832::12::1;:16;:::i;:::-;1820:28;::::0;:9:::1;:28;:::i;:::-;1802:5;:47::i;:::-;604:6505:::0;;6179:316:0;6256:4;2954:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;6272:217;;6315:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:8;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6272:217;6179:316;;;;:::o;7439:208:3:-;-1:-1:-1;;;;;7509:21:3;;7505:91;;7553:32;;-1:-1:-1;;;7553:32:3;;7582:1;7553:32;;;4538:51:13;4511:18;;7553:32:3;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;5530:230:12:-;1796:7:9;;;;5676:9:12;5668:44;;;;-1:-1:-1;;;5668:44:12;;4802:2:13;5668:44:12;;;4784:21:13;4841:2;4821:18;;;4814:30;4880:24;4860:18;;;4853:52;4922:18;;5668:44:12;4600:346:13;5668:44:12;5723:30;5737:4;5743:2;5747:5;5723:13;:30::i;:::-;5530:230;;;:::o;1113:145:6:-;1350:19:9;:17;:19::i;:::-;1221:30:6::1;1235:4:::0;1241:2;1245:5;1221:13:::1;:30::i;1878:128:9:-:0;1796:7;;;;1939:61;;;1974:15;;-1:-1:-1;;;1974:15:9;;;;;;;;;;;1939:61;1878:128::o;5989:1107:3:-;-1:-1:-1;;;;;6078:18:3;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:3;;-1:-1:-1;6074:540:3;;-1:-1:-1;;;;;6288:15:3;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;-1:-1:-1;;;6367:50:3;;-1:-1:-1;;;;;5301:32:13;;6367:50:3;;;5283:51:13;5350:18;;;5343:34;;;5393:18;;;5386:34;;;5256:18;;6367:50:3;5081:345:13;6317:115:3;-1:-1:-1;;;;;6552:15:3;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:3;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:3;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:3;7073:4;-1:-1:-1;;;;;7064:25:3;;7083:5;7064:25;;;;5577::13;;5565:2;5550:18;;5431:177;7064:25:3;;;;;;;;5989:1107;;;:::o;14:127:13:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:13;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;657:518;;;:::o;1351:1299::-;1471:10;;-1:-1:-1;;;;;1493:30:13;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1701:4;1732:2;1721:14;;1749:1;1744:649;;;;2437:1;2454:6;2451:89;;;-1:-1:-1;2506:19:13;;;2500:26;2451:89;-1:-1:-1;;1308:1:13;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2553:81;;1714:930;;1744:649;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1780:20:13;;;1898:222;1912:7;1909:1;1906:14;1898:222;;;1994:19;;;1988:26;1973:42;;2101:4;2086:20;;;;2054:1;2042:14;;;;1928:12;1898:222;;;1902:3;2148:6;2139:7;2136:19;2133:201;;;2209:19;;;2203:26;-1:-1:-1;;2292:1:13;2288:14;;;2304:3;2284:24;2280:37;2276:42;2261:58;2246:74;;2133:201;-1:-1:-1;;;;2380:1:13;2364:14;;;2360:22;2347:36;;-1:-1:-1;1351:1299:13:o;2655:127::-;2716:10;2711:3;2707:20;2704:1;2697:31;2747:4;2744:1;2737:15;2771:4;2768:1;2761:15;2787:375;2875:1;2893:5;2907:249;2928:1;2918:8;2915:15;2907:249;;;2978:4;2973:3;2969:14;2963:4;2960:24;2957:50;;;2987:18;;:::i;:::-;3037:1;3027:8;3023:16;3020:49;;;3051:16;;;;3020:49;3134:1;3130:16;;;;;3090:15;;2907:249;;;2787:375;;;;;;:::o;3167:902::-;3216:5;3246:8;3236:80;;-1:-1:-1;3287:1:13;3301:5;;3236:80;3335:4;3325:76;;-1:-1:-1;3372:1:13;3386:5;;3325:76;3417:4;3435:1;3430:59;;;;3503:1;3498:174;;;;3410:262;;3430:59;3460:1;3451:10;;3474:5;;;3498:174;3535:3;3525:8;3522:17;3519:43;;;3542:18;;:::i;:::-;-1:-1:-1;;3598:1:13;3584:16;;3657:5;;3410:262;;3756:2;3746:8;3743:16;3737:3;3731:4;3728:13;3724:36;3718:2;3708:8;3705:16;3700:2;3694:4;3691:12;3687:35;3684:77;3681:203;;;-1:-1:-1;3793:19:13;;;3869:5;;3681:203;3916:42;-1:-1:-1;;3941:8:13;3935:4;3916:42;:::i;:::-;3994:6;3990:1;3986:6;3982:19;3973:7;3970:32;3967:58;;;4005:18;;:::i;:::-;4043:20;;3167:902;-1:-1:-1;;;3167:902:13:o;4074:140::-;4132:5;4161:47;4202:4;4192:8;4188:19;4182:4;4161:47;:::i;:::-;4152:56;4074:140;-1:-1:-1;;;4074:140:13:o;4219:168::-;4292:9;;;4323;;4340:15;;;4334:22;;4320:37;4310:71;;4361:18;;:::i;4951:125::-;5016:9;;;5037:10;;;5034:36;;;5050:18;;:::i;5431:177::-;604:6505:12;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@DEFAULT_ADMIN_ROLE_29": {
                  "entryPoint": null,
                  "id": 29,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@MINTER_ROLE_1417": {
                  "entryPoint": null,
                  "id": 1417,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@PAUSER_ROLE_1412": {
                  "entryPoint": null,
                  "id": 1412,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_approve_921": {
                  "entryPoint": 4353,
                  "id": 921,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_approve_981": {
                  "entryPoint": 5100,
                  "id": 981,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "@_burn_903": {
                  "entryPoint": 4985,
                  "id": 903,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_checkRole_114": {
                  "entryPoint": 5400,
                  "id": 114,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_checkRole_93": {
                  "entryPoint": 4582,
                  "id": 93,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@_grantRole_256": {
                  "entryPoint": 4592,
                  "id": 256,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@_mint_870": {
                  "entryPoint": 4931,
                  "id": 870,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_msgSender_1226": {
                  "entryPoint": null,
                  "id": 1226,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_pause_1335": {
                  "entryPoint": 5039,
                  "id": 1335,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_requireNotPaused_1306": {
                  "entryPoint": 5492,
                  "id": 1306,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_requirePaused_1319": {
                  "entryPoint": 5457,
                  "id": 1319,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_revokeRole_294": {
                  "entryPoint": 4740,
                  "id": 294,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@_spendAllowance_1029": {
                  "entryPoint": 4461,
                  "id": 1029,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_transfer_760": {
                  "entryPoint": 4366,
                  "id": 760,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_unpause_1351": {
                  "entryPoint": 4849,
                  "id": 1351,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_update_1187": {
                  "entryPoint": 5528,
                  "id": 1187,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_update_1804": {
                  "entryPoint": 5313,
                  "id": 1804,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_update_837": {
                  "entryPoint": null,
                  "id": 837,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@allowance_657": {
                  "entryPoint": null,
                  "id": 657,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@approve_681": {
                  "entryPoint": 1499,
                  "id": 681,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@balanceOf_616": {
                  "entryPoint": null,
                  "id": 616,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@burnFrom_1153": {
                  "entryPoint": 3765,
                  "id": 1153,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@burn_1132": {
                  "entryPoint": 2915,
                  "id": 1132,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@cashbackPercentage_1808": {
                  "entryPoint": null,
                  "id": 1808,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@dailySpendingLimit_1421": {
                  "entryPoint": null,
                  "id": 1421,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@decimals_594": {
                  "entryPoint": null,
                  "id": 594,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getRoleAdmin_128": {
                  "entryPoint": null,
                  "id": 128,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@grantRole_147": {
                  "entryPoint": 2317,
                  "id": 147,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@hasRole_80": {
                  "entryPoint": 3906,
                  "id": 80,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@isMerchant_1433": {
                  "entryPoint": null,
                  "id": 1433,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@lastSpendingReset_1429": {
                  "entryPoint": null,
                  "id": 1429,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@merchantName_1437": {
                  "entryPoint": 3611,
                  "id": 1437,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@mint_1573": {
                  "entryPoint": 2538,
                  "id": 1573,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@name_576": {
                  "entryPoint": 1353,
                  "id": 576,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@pause_1501": {
                  "entryPoint": 3786,
                  "id": 1501,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@paused_1294": {
                  "entryPoint": null,
                  "id": 1294,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@registerMerchant_1626": {
                  "entryPoint": 3964,
                  "id": 1626,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@renounceRole_189": {
                  "entryPoint": 2360,
                  "id": 189,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@revokeRole_166": {
                  "entryPoint": 4316,
                  "id": 166,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@setDailyLimit_1674": {
                  "entryPoint": 2087,
                  "id": 1674,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@spentToday_1425": {
                  "entryPoint": null,
                  "id": 1425,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@supportsInterface_1375": {
                  "entryPoint": null,
                  "id": 1375,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@supportsInterface_62": {
                  "entryPoint": 1298,
                  "id": 62,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@symbol_585": {
                  "entryPoint": 3949,
                  "id": 585,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@totalSupply_603": {
                  "entryPoint": null,
                  "id": 603,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@transferFrom_713": {
                  "entryPoint": 2051,
                  "id": 713,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "@transferWithCashback_1928": {
                  "entryPoint": 2928,
                  "id": 1928,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@transferWithLimit_1775": {
                  "entryPoint": 1523,
                  "id": 1775,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@transfer_640": {
                  "entryPoint": 4302,
                  "id": 640,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@unpause_1517": {
                  "entryPoint": 2416,
                  "id": 1517,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "abi_decode_address": {
                  "entryPoint": 5954,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 6024,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_addresst_address": {
                  "entryPoint": 6405,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_addresst_addresst_uint256": {
                  "entryPoint": 6051,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_tuple_t_addresst_string_memory_ptr": {
                  "entryPoint": 6203,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_addresst_uint256": {
                  "entryPoint": 5982,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_bytes32": {
                  "entryPoint": 6112,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_bytes32t_address": {
                  "entryPoint": 6137,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_bytes4": {
                  "entryPoint": 5827,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 5876,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_0b14ed7c5f1e7324d1cb0362112747b7060ac0bd8d6956f2822396b5cffbc877__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_2586c6f2c479ed85c187a54ca5dcfccd81d2a491bb7f43f1a090d05c2cb9ee92__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_280f51dd4b2d9aac10d97a682ab568ef4a4c97c88f4fba0273878925c25fa0f2__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 6505,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_3975d1816c3ca2e29b3bbab35c0be7b15164d704eb9cfbad43aedad5b5a01085__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_3dc561c043b7bbf10378c02b4bdb83aba886793b5fccfadedca9560c9bcf4554__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_5a56aca9391f1fa989756252b3eedac50c830c68a92d7f8bc00446bc8dd728b9__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_5e171efca29268c8f7dc8b49a0bc6b73082696199ffa2d46cfb8da8065884ea7__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_6da2590c3034ef1da0b0fb0657e080f278b93f51f0369c416eeea6511934843d__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_7df341e7dab656fd761183664b8736fe0983ccb8c343026c17b8695ea5ea5982__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_9e97933809d36609dc0e60ec9fa94106f35937d2c2d362ba775655fdaa86bd8a__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_bb6ef8259868f621162cf2269ec456fd6e3660c295ef634f53db3982172a569f__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_dee17f4db42edcb0841b61c9c04adb525cc97e27b4a06dec39b87ce8db6596f2__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_f46a208452d481cbabd737d10144d3db436474a848cac326801210ec7a5aad99__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_f53a24e56c3d863b5ed56a4089a9290fc00844c63109070e1d585d687f90ed4c__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_dataslot_string_storage": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 6599,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_t_uint256": {
                  "entryPoint": 6887,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_exp_helper": {
                  "entryPoint": 6618,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 2
                },
                "checked_exp_t_uint256_t_uint8": {
                  "entryPoint": 6849,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_exp_unsigned": {
                  "entryPoint": 6685,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_t_uint256": {
                  "entryPoint": 6864,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 6580,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "clean_up_bytearray_end_slots_string_storage": {
                  "entryPoint": 6921,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
                  "entryPoint": 6999,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "extract_byte_array_length": {
                  "entryPoint": 6447,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_used_part_and_set_length_of_short_byte_array": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 6558,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 6181,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nativeSrc": "0:17073:13",
                    "nodeType": "YulBlock",
                    "src": "0:17073:13",
                    "statements": [
                      {
                        "nativeSrc": "6:3:13",
                        "nodeType": "YulBlock",
                        "src": "6:3:13",
                        "statements": []
                      },
                      {
                        "body": {
                          "nativeSrc": "83:217:13",
                          "nodeType": "YulBlock",
                          "src": "83:217:13",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "129:16:13",
                                "nodeType": "YulBlock",
                                "src": "129:16:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "138:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "138:1:13",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "141:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "141:1:13",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "131:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "131:6:13"
                                      },
                                      "nativeSrc": "131:12:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "131:12:13"
                                    },
                                    "nativeSrc": "131:12:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "131:12:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "104:7:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "104:7:13"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "113:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "113:9:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "100:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "100:3:13"
                                    },
                                    "nativeSrc": "100:23:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "100:23:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "125:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "125:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "96:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "96:3:13"
                                },
                                "nativeSrc": "96:32:13",
                                "nodeType": "YulFunctionCall",
                                "src": "96:32:13"
                              },
                              "nativeSrc": "93:52:13",
                              "nodeType": "YulIf",
                              "src": "93:52:13"
                            },
                            {
                              "nativeSrc": "154:36:13",
                              "nodeType": "YulVariableDeclaration",
                              "src": "154:36:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "180:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "180:9:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "167:12:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "167:12:13"
                                },
                                "nativeSrc": "167:23:13",
                                "nodeType": "YulFunctionCall",
                                "src": "167:23:13"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "158:5:13",
                                  "nodeType": "YulTypedName",
                                  "src": "158:5:13",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "254:16:13",
                                "nodeType": "YulBlock",
                                "src": "254:16:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "263:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "263:1:13",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "266:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "266:1:13",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "256:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "256:6:13"
                                      },
                                      "nativeSrc": "256:12:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "256:12:13"
                                    },
                                    "nativeSrc": "256:12:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "256:12:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "212:5:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "212:5:13"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "223:5:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "223:5:13"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "234:3:13",
                                                "nodeType": "YulLiteral",
                                                "src": "234:3:13",
                                                "type": "",
                                                "value": "224"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "239:10:13",
                                                "nodeType": "YulLiteral",
                                                "src": "239:10:13",
                                                "type": "",
                                                "value": "0xffffffff"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "230:3:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "230:3:13"
                                            },
                                            "nativeSrc": "230:20:13",
                                            "nodeType": "YulFunctionCall",
                                            "src": "230:20:13"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "219:3:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "219:3:13"
                                        },
                                        "nativeSrc": "219:32:13",
                                        "nodeType": "YulFunctionCall",
                                        "src": "219:32:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "209:2:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "209:2:13"
                                    },
                                    "nativeSrc": "209:43:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "209:43:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "202:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "202:6:13"
                                },
                                "nativeSrc": "202:51:13",
                                "nodeType": "YulFunctionCall",
                                "src": "202:51:13"
                              },
                              "nativeSrc": "199:71:13",
                              "nodeType": "YulIf",
                              "src": "199:71:13"
                            },
                            {
                              "nativeSrc": "279:15:13",
                              "nodeType": "YulAssignment",
                              "src": "279:15:13",
                              "value": {
                                "name": "value",
                                "nativeSrc": "289:5:13",
                                "nodeType": "YulIdentifier",
                                "src": "289:5:13"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "279:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "279:6:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes4",
                        "nativeSrc": "14:286:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "49:9:13",
                            "nodeType": "YulTypedName",
                            "src": "49:9:13",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "60:7:13",
                            "nodeType": "YulTypedName",
                            "src": "60:7:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "72:6:13",
                            "nodeType": "YulTypedName",
                            "src": "72:6:13",
                            "type": ""
                          }
                        ],
                        "src": "14:286:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "400:92:13",
                          "nodeType": "YulBlock",
                          "src": "400:92:13",
                          "statements": [
                            {
                              "nativeSrc": "410:26:13",
                              "nodeType": "YulAssignment",
                              "src": "410:26:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "422:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "422:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "433:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "433:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "418:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "418:3:13"
                                },
                                "nativeSrc": "418:18:13",
                                "nodeType": "YulFunctionCall",
                                "src": "418:18:13"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "410:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "410:4:13"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "452:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "452:9:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nativeSrc": "477:6:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "477:6:13"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nativeSrc": "470:6:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "470:6:13"
                                        },
                                        "nativeSrc": "470:14:13",
                                        "nodeType": "YulFunctionCall",
                                        "src": "470:14:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nativeSrc": "463:6:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "463:6:13"
                                    },
                                    "nativeSrc": "463:22:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "463:22:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "445:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "445:6:13"
                                },
                                "nativeSrc": "445:41:13",
                                "nodeType": "YulFunctionCall",
                                "src": "445:41:13"
                              },
                              "nativeSrc": "445:41:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "445:41:13"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nativeSrc": "305:187:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "369:9:13",
                            "nodeType": "YulTypedName",
                            "src": "369:9:13",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "380:6:13",
                            "nodeType": "YulTypedName",
                            "src": "380:6:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "391:4:13",
                            "nodeType": "YulTypedName",
                            "src": "391:4:13",
                            "type": ""
                          }
                        ],
                        "src": "305:187:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "618:406:13",
                          "nodeType": "YulBlock",
                          "src": "618:406:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "635:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "635:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "646:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "646:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "628:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "628:6:13"
                                },
                                "nativeSrc": "628:21:13",
                                "nodeType": "YulFunctionCall",
                                "src": "628:21:13"
                              },
                              "nativeSrc": "628:21:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "628:21:13"
                            },
                            {
                              "nativeSrc": "658:27:13",
                              "nodeType": "YulVariableDeclaration",
                              "src": "658:27:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "678:6:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "678:6:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "672:5:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "672:5:13"
                                },
                                "nativeSrc": "672:13:13",
                                "nodeType": "YulFunctionCall",
                                "src": "672:13:13"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nativeSrc": "662:6:13",
                                  "nodeType": "YulTypedName",
                                  "src": "662:6:13",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "705:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "705:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "716:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "716:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "701:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "701:3:13"
                                    },
                                    "nativeSrc": "701:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "701:18:13"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "721:6:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "721:6:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "694:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "694:6:13"
                                },
                                "nativeSrc": "694:34:13",
                                "nodeType": "YulFunctionCall",
                                "src": "694:34:13"
                              },
                              "nativeSrc": "694:34:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "694:34:13"
                            },
                            {
                              "nativeSrc": "737:10:13",
                              "nodeType": "YulVariableDeclaration",
                              "src": "737:10:13",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "746:1:13",
                                "nodeType": "YulLiteral",
                                "src": "746:1:13",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nativeSrc": "741:1:13",
                                  "nodeType": "YulTypedName",
                                  "src": "741:1:13",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "806:90:13",
                                "nodeType": "YulBlock",
                                "src": "806:90:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "headStart",
                                                  "nativeSrc": "835:9:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "835:9:13"
                                                },
                                                {
                                                  "name": "i",
                                                  "nativeSrc": "846:1:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "846:1:13"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "831:3:13",
                                                "nodeType": "YulIdentifier",
                                                "src": "831:3:13"
                                              },
                                              "nativeSrc": "831:17:13",
                                              "nodeType": "YulFunctionCall",
                                              "src": "831:17:13"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "850:2:13",
                                              "nodeType": "YulLiteral",
                                              "src": "850:2:13",
                                              "type": "",
                                              "value": "64"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nativeSrc": "827:3:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "827:3:13"
                                          },
                                          "nativeSrc": "827:26:13",
                                          "nodeType": "YulFunctionCall",
                                          "src": "827:26:13"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "value0",
                                                      "nativeSrc": "869:6:13",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "869:6:13"
                                                    },
                                                    {
                                                      "name": "i",
                                                      "nativeSrc": "877:1:13",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "877:1:13"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nativeSrc": "865:3:13",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "865:3:13"
                                                  },
                                                  "nativeSrc": "865:14:13",
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "865:14:13"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "881:2:13",
                                                  "nodeType": "YulLiteral",
                                                  "src": "881:2:13",
                                                  "type": "",
                                                  "value": "32"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "861:3:13",
                                                "nodeType": "YulIdentifier",
                                                "src": "861:3:13"
                                              },
                                              "nativeSrc": "861:23:13",
                                              "nodeType": "YulFunctionCall",
                                              "src": "861:23:13"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nativeSrc": "855:5:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "855:5:13"
                                          },
                                          "nativeSrc": "855:30:13",
                                          "nodeType": "YulFunctionCall",
                                          "src": "855:30:13"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "820:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "820:6:13"
                                      },
                                      "nativeSrc": "820:66:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "820:66:13"
                                    },
                                    "nativeSrc": "820:66:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "820:66:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nativeSrc": "767:1:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "767:1:13"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "770:6:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "770:6:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nativeSrc": "764:2:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "764:2:13"
                                },
                                "nativeSrc": "764:13:13",
                                "nodeType": "YulFunctionCall",
                                "src": "764:13:13"
                              },
                              "nativeSrc": "756:140:13",
                              "nodeType": "YulForLoop",
                              "post": {
                                "nativeSrc": "778:19:13",
                                "nodeType": "YulBlock",
                                "src": "778:19:13",
                                "statements": [
                                  {
                                    "nativeSrc": "780:15:13",
                                    "nodeType": "YulAssignment",
                                    "src": "780:15:13",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nativeSrc": "789:1:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "789:1:13"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "792:2:13",
                                          "nodeType": "YulLiteral",
                                          "src": "792:2:13",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "785:3:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "785:3:13"
                                      },
                                      "nativeSrc": "785:10:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "785:10:13"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nativeSrc": "780:1:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "780:1:13"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nativeSrc": "760:3:13",
                                "nodeType": "YulBlock",
                                "src": "760:3:13",
                                "statements": []
                              },
                              "src": "756:140:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "920:9:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "920:9:13"
                                          },
                                          {
                                            "name": "length",
                                            "nativeSrc": "931:6:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "931:6:13"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "916:3:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "916:3:13"
                                        },
                                        "nativeSrc": "916:22:13",
                                        "nodeType": "YulFunctionCall",
                                        "src": "916:22:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "940:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "940:2:13",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "912:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "912:3:13"
                                    },
                                    "nativeSrc": "912:31:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "912:31:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "945:1:13",
                                    "nodeType": "YulLiteral",
                                    "src": "945:1:13",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "905:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "905:6:13"
                                },
                                "nativeSrc": "905:42:13",
                                "nodeType": "YulFunctionCall",
                                "src": "905:42:13"
                              },
                              "nativeSrc": "905:42:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "905:42:13"
                            },
                            {
                              "nativeSrc": "956:62:13",
                              "nodeType": "YulAssignment",
                              "src": "956:62:13",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "972:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "972:9:13"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nativeSrc": "991:6:13",
                                                "nodeType": "YulIdentifier",
                                                "src": "991:6:13"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "999:2:13",
                                                "nodeType": "YulLiteral",
                                                "src": "999:2:13",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nativeSrc": "987:3:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "987:3:13"
                                            },
                                            "nativeSrc": "987:15:13",
                                            "nodeType": "YulFunctionCall",
                                            "src": "987:15:13"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1008:2:13",
                                                "nodeType": "YulLiteral",
                                                "src": "1008:2:13",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nativeSrc": "1004:3:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "1004:3:13"
                                            },
                                            "nativeSrc": "1004:7:13",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1004:7:13"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "983:3:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "983:3:13"
                                        },
                                        "nativeSrc": "983:29:13",
                                        "nodeType": "YulFunctionCall",
                                        "src": "983:29:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "968:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "968:3:13"
                                    },
                                    "nativeSrc": "968:45:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "968:45:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1015:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "1015:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "964:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "964:3:13"
                                },
                                "nativeSrc": "964:54:13",
                                "nodeType": "YulFunctionCall",
                                "src": "964:54:13"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "956:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "956:4:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "497:527:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "587:9:13",
                            "nodeType": "YulTypedName",
                            "src": "587:9:13",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "598:6:13",
                            "nodeType": "YulTypedName",
                            "src": "598:6:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "609:4:13",
                            "nodeType": "YulTypedName",
                            "src": "609:4:13",
                            "type": ""
                          }
                        ],
                        "src": "497:527:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "1078:124:13",
                          "nodeType": "YulBlock",
                          "src": "1078:124:13",
                          "statements": [
                            {
                              "nativeSrc": "1088:29:13",
                              "nodeType": "YulAssignment",
                              "src": "1088:29:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "1110:6:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "1110:6:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "1097:12:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "1097:12:13"
                                },
                                "nativeSrc": "1097:20:13",
                                "nodeType": "YulFunctionCall",
                                "src": "1097:20:13"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "1088:5:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "1088:5:13"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "1180:16:13",
                                "nodeType": "YulBlock",
                                "src": "1180:16:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1189:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "1189:1:13",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1192:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "1192:1:13",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1182:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "1182:6:13"
                                      },
                                      "nativeSrc": "1182:12:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1182:12:13"
                                    },
                                    "nativeSrc": "1182:12:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1182:12:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "1139:5:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "1139:5:13"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "1150:5:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "1150:5:13"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "1165:3:13",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1165:3:13",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "1170:1:13",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1170:1:13",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "1161:3:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1161:3:13"
                                                },
                                                "nativeSrc": "1161:11:13",
                                                "nodeType": "YulFunctionCall",
                                                "src": "1161:11:13"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1174:1:13",
                                                "nodeType": "YulLiteral",
                                                "src": "1174:1:13",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nativeSrc": "1157:3:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "1157:3:13"
                                            },
                                            "nativeSrc": "1157:19:13",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1157:19:13"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "1146:3:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "1146:3:13"
                                        },
                                        "nativeSrc": "1146:31:13",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1146:31:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "1136:2:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "1136:2:13"
                                    },
                                    "nativeSrc": "1136:42:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1136:42:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "1129:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "1129:6:13"
                                },
                                "nativeSrc": "1129:50:13",
                                "nodeType": "YulFunctionCall",
                                "src": "1129:50:13"
                              },
                              "nativeSrc": "1126:70:13",
                              "nodeType": "YulIf",
                              "src": "1126:70:13"
                            }
                          ]
                        },
                        "name": "abi_decode_address",
                        "nativeSrc": "1029:173:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nativeSrc": "1057:6:13",
                            "nodeType": "YulTypedName",
                            "src": "1057:6:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nativeSrc": "1068:5:13",
                            "nodeType": "YulTypedName",
                            "src": "1068:5:13",
                            "type": ""
                          }
                        ],
                        "src": "1029:173:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "1294:213:13",
                          "nodeType": "YulBlock",
                          "src": "1294:213:13",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "1340:16:13",
                                "nodeType": "YulBlock",
                                "src": "1340:16:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1349:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "1349:1:13",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1352:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "1352:1:13",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1342:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "1342:6:13"
                                      },
                                      "nativeSrc": "1342:12:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1342:12:13"
                                    },
                                    "nativeSrc": "1342:12:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1342:12:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "1315:7:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "1315:7:13"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1324:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "1324:9:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "1311:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "1311:3:13"
                                    },
                                    "nativeSrc": "1311:23:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1311:23:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1336:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "1336:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "1307:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "1307:3:13"
                                },
                                "nativeSrc": "1307:32:13",
                                "nodeType": "YulFunctionCall",
                                "src": "1307:32:13"
                              },
                              "nativeSrc": "1304:52:13",
                              "nodeType": "YulIf",
                              "src": "1304:52:13"
                            },
                            {
                              "nativeSrc": "1365:39:13",
                              "nodeType": "YulAssignment",
                              "src": "1365:39:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1394:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "1394:9:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "1375:18:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "1375:18:13"
                                },
                                "nativeSrc": "1375:29:13",
                                "nodeType": "YulFunctionCall",
                                "src": "1375:29:13"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "1365:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "1365:6:13"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1413:14:13",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1413:14:13",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "1426:1:13",
                                "nodeType": "YulLiteral",
                                "src": "1426:1:13",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "1417:5:13",
                                  "nodeType": "YulTypedName",
                                  "src": "1417:5:13",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1436:41:13",
                              "nodeType": "YulAssignment",
                              "src": "1436:41:13",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1462:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "1462:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1473:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "1473:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1458:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "1458:3:13"
                                    },
                                    "nativeSrc": "1458:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1458:18:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "1445:12:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "1445:12:13"
                                },
                                "nativeSrc": "1445:32:13",
                                "nodeType": "YulFunctionCall",
                                "src": "1445:32:13"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "1436:5:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "1436:5:13"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1486:15:13",
                              "nodeType": "YulAssignment",
                              "src": "1486:15:13",
                              "value": {
                                "name": "value",
                                "nativeSrc": "1496:5:13",
                                "nodeType": "YulIdentifier",
                                "src": "1496:5:13"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "1486:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "1486:6:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint256",
                        "nativeSrc": "1207:300:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1252:9:13",
                            "nodeType": "YulTypedName",
                            "src": "1252:9:13",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "1263:7:13",
                            "nodeType": "YulTypedName",
                            "src": "1263:7:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "1275:6:13",
                            "nodeType": "YulTypedName",
                            "src": "1275:6:13",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "1283:6:13",
                            "nodeType": "YulTypedName",
                            "src": "1283:6:13",
                            "type": ""
                          }
                        ],
                        "src": "1207:300:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "1613:76:13",
                          "nodeType": "YulBlock",
                          "src": "1613:76:13",
                          "statements": [
                            {
                              "nativeSrc": "1623:26:13",
                              "nodeType": "YulAssignment",
                              "src": "1623:26:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1635:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "1635:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1646:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "1646:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1631:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "1631:3:13"
                                },
                                "nativeSrc": "1631:18:13",
                                "nodeType": "YulFunctionCall",
                                "src": "1631:18:13"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "1623:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "1623:4:13"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1665:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "1665:9:13"
                                  },
                                  {
                                    "name": "value0",
                                    "nativeSrc": "1676:6:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "1676:6:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1658:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "1658:6:13"
                                },
                                "nativeSrc": "1658:25:13",
                                "nodeType": "YulFunctionCall",
                                "src": "1658:25:13"
                              },
                              "nativeSrc": "1658:25:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "1658:25:13"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nativeSrc": "1512:177:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1582:9:13",
                            "nodeType": "YulTypedName",
                            "src": "1582:9:13",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "1593:6:13",
                            "nodeType": "YulTypedName",
                            "src": "1593:6:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "1604:4:13",
                            "nodeType": "YulTypedName",
                            "src": "1604:4:13",
                            "type": ""
                          }
                        ],
                        "src": "1512:177:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "1764:116:13",
                          "nodeType": "YulBlock",
                          "src": "1764:116:13",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "1810:16:13",
                                "nodeType": "YulBlock",
                                "src": "1810:16:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1819:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "1819:1:13",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1822:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "1822:1:13",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1812:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "1812:6:13"
                                      },
                                      "nativeSrc": "1812:12:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1812:12:13"
                                    },
                                    "nativeSrc": "1812:12:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1812:12:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "1785:7:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "1785:7:13"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1794:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "1794:9:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "1781:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "1781:3:13"
                                    },
                                    "nativeSrc": "1781:23:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1781:23:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1806:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "1806:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "1777:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "1777:3:13"
                                },
                                "nativeSrc": "1777:32:13",
                                "nodeType": "YulFunctionCall",
                                "src": "1777:32:13"
                              },
                              "nativeSrc": "1774:52:13",
                              "nodeType": "YulIf",
                              "src": "1774:52:13"
                            },
                            {
                              "nativeSrc": "1835:39:13",
                              "nodeType": "YulAssignment",
                              "src": "1835:39:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1864:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "1864:9:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "1845:18:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "1845:18:13"
                                },
                                "nativeSrc": "1845:29:13",
                                "nodeType": "YulFunctionCall",
                                "src": "1845:29:13"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "1835:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "1835:6:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nativeSrc": "1694:186:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1730:9:13",
                            "nodeType": "YulTypedName",
                            "src": "1730:9:13",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "1741:7:13",
                            "nodeType": "YulTypedName",
                            "src": "1741:7:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "1753:6:13",
                            "nodeType": "YulTypedName",
                            "src": "1753:6:13",
                            "type": ""
                          }
                        ],
                        "src": "1694:186:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "1989:270:13",
                          "nodeType": "YulBlock",
                          "src": "1989:270:13",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "2035:16:13",
                                "nodeType": "YulBlock",
                                "src": "2035:16:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2044:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "2044:1:13",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2047:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "2047:1:13",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2037:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "2037:6:13"
                                      },
                                      "nativeSrc": "2037:12:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2037:12:13"
                                    },
                                    "nativeSrc": "2037:12:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2037:12:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "2010:7:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "2010:7:13"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2019:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "2019:9:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "2006:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "2006:3:13"
                                    },
                                    "nativeSrc": "2006:23:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2006:23:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2031:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "2031:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "2002:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "2002:3:13"
                                },
                                "nativeSrc": "2002:32:13",
                                "nodeType": "YulFunctionCall",
                                "src": "2002:32:13"
                              },
                              "nativeSrc": "1999:52:13",
                              "nodeType": "YulIf",
                              "src": "1999:52:13"
                            },
                            {
                              "nativeSrc": "2060:39:13",
                              "nodeType": "YulAssignment",
                              "src": "2060:39:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2089:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "2089:9:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "2070:18:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "2070:18:13"
                                },
                                "nativeSrc": "2070:29:13",
                                "nodeType": "YulFunctionCall",
                                "src": "2070:29:13"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "2060:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "2060:6:13"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2108:48:13",
                              "nodeType": "YulAssignment",
                              "src": "2108:48:13",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2141:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "2141:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2152:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "2152:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2137:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "2137:3:13"
                                    },
                                    "nativeSrc": "2137:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2137:18:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "2118:18:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "2118:18:13"
                                },
                                "nativeSrc": "2118:38:13",
                                "nodeType": "YulFunctionCall",
                                "src": "2118:38:13"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "2108:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "2108:6:13"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2165:14:13",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2165:14:13",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "2178:1:13",
                                "nodeType": "YulLiteral",
                                "src": "2178:1:13",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "2169:5:13",
                                  "nodeType": "YulTypedName",
                                  "src": "2169:5:13",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2188:41:13",
                              "nodeType": "YulAssignment",
                              "src": "2188:41:13",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2214:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "2214:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2225:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "2225:2:13",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2210:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "2210:3:13"
                                    },
                                    "nativeSrc": "2210:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2210:18:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "2197:12:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "2197:12:13"
                                },
                                "nativeSrc": "2197:32:13",
                                "nodeType": "YulFunctionCall",
                                "src": "2197:32:13"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "2188:5:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "2188:5:13"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2238:15:13",
                              "nodeType": "YulAssignment",
                              "src": "2238:15:13",
                              "value": {
                                "name": "value",
                                "nativeSrc": "2248:5:13",
                                "nodeType": "YulIdentifier",
                                "src": "2248:5:13"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nativeSrc": "2238:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "2238:6:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_uint256",
                        "nativeSrc": "1885:374:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1939:9:13",
                            "nodeType": "YulTypedName",
                            "src": "1939:9:13",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "1950:7:13",
                            "nodeType": "YulTypedName",
                            "src": "1950:7:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "1962:6:13",
                            "nodeType": "YulTypedName",
                            "src": "1962:6:13",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "1970:6:13",
                            "nodeType": "YulTypedName",
                            "src": "1970:6:13",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "1978:6:13",
                            "nodeType": "YulTypedName",
                            "src": "1978:6:13",
                            "type": ""
                          }
                        ],
                        "src": "1885:374:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "2334:156:13",
                          "nodeType": "YulBlock",
                          "src": "2334:156:13",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "2380:16:13",
                                "nodeType": "YulBlock",
                                "src": "2380:16:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2389:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "2389:1:13",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2392:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "2392:1:13",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2382:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "2382:6:13"
                                      },
                                      "nativeSrc": "2382:12:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2382:12:13"
                                    },
                                    "nativeSrc": "2382:12:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2382:12:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "2355:7:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "2355:7:13"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2364:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "2364:9:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "2351:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "2351:3:13"
                                    },
                                    "nativeSrc": "2351:23:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2351:23:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2376:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "2376:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "2347:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "2347:3:13"
                                },
                                "nativeSrc": "2347:32:13",
                                "nodeType": "YulFunctionCall",
                                "src": "2347:32:13"
                              },
                              "nativeSrc": "2344:52:13",
                              "nodeType": "YulIf",
                              "src": "2344:52:13"
                            },
                            {
                              "nativeSrc": "2405:14:13",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2405:14:13",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "2418:1:13",
                                "nodeType": "YulLiteral",
                                "src": "2418:1:13",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "2409:5:13",
                                  "nodeType": "YulTypedName",
                                  "src": "2409:5:13",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2428:32:13",
                              "nodeType": "YulAssignment",
                              "src": "2428:32:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2450:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "2450:9:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "2437:12:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "2437:12:13"
                                },
                                "nativeSrc": "2437:23:13",
                                "nodeType": "YulFunctionCall",
                                "src": "2437:23:13"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "2428:5:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "2428:5:13"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2469:15:13",
                              "nodeType": "YulAssignment",
                              "src": "2469:15:13",
                              "value": {
                                "name": "value",
                                "nativeSrc": "2479:5:13",
                                "nodeType": "YulIdentifier",
                                "src": "2479:5:13"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "2469:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "2469:6:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32",
                        "nativeSrc": "2264:226:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "2300:9:13",
                            "nodeType": "YulTypedName",
                            "src": "2300:9:13",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "2311:7:13",
                            "nodeType": "YulTypedName",
                            "src": "2311:7:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "2323:6:13",
                            "nodeType": "YulTypedName",
                            "src": "2323:6:13",
                            "type": ""
                          }
                        ],
                        "src": "2264:226:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "2596:76:13",
                          "nodeType": "YulBlock",
                          "src": "2596:76:13",
                          "statements": [
                            {
                              "nativeSrc": "2606:26:13",
                              "nodeType": "YulAssignment",
                              "src": "2606:26:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2618:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "2618:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2629:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "2629:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "2614:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "2614:3:13"
                                },
                                "nativeSrc": "2614:18:13",
                                "nodeType": "YulFunctionCall",
                                "src": "2614:18:13"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "2606:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "2606:4:13"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2648:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "2648:9:13"
                                  },
                                  {
                                    "name": "value0",
                                    "nativeSrc": "2659:6:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "2659:6:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "2641:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "2641:6:13"
                                },
                                "nativeSrc": "2641:25:13",
                                "nodeType": "YulFunctionCall",
                                "src": "2641:25:13"
                              },
                              "nativeSrc": "2641:25:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "2641:25:13"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                        "nativeSrc": "2495:177:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "2565:9:13",
                            "nodeType": "YulTypedName",
                            "src": "2565:9:13",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "2576:6:13",
                            "nodeType": "YulTypedName",
                            "src": "2576:6:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "2587:4:13",
                            "nodeType": "YulTypedName",
                            "src": "2587:4:13",
                            "type": ""
                          }
                        ],
                        "src": "2495:177:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "2764:213:13",
                          "nodeType": "YulBlock",
                          "src": "2764:213:13",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "2810:16:13",
                                "nodeType": "YulBlock",
                                "src": "2810:16:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2819:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "2819:1:13",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2822:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "2822:1:13",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2812:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "2812:6:13"
                                      },
                                      "nativeSrc": "2812:12:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2812:12:13"
                                    },
                                    "nativeSrc": "2812:12:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2812:12:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "2785:7:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "2785:7:13"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2794:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "2794:9:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "2781:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "2781:3:13"
                                    },
                                    "nativeSrc": "2781:23:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2781:23:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2806:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "2806:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "2777:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "2777:3:13"
                                },
                                "nativeSrc": "2777:32:13",
                                "nodeType": "YulFunctionCall",
                                "src": "2777:32:13"
                              },
                              "nativeSrc": "2774:52:13",
                              "nodeType": "YulIf",
                              "src": "2774:52:13"
                            },
                            {
                              "nativeSrc": "2835:14:13",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2835:14:13",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "2848:1:13",
                                "nodeType": "YulLiteral",
                                "src": "2848:1:13",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "2839:5:13",
                                  "nodeType": "YulTypedName",
                                  "src": "2839:5:13",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2858:32:13",
                              "nodeType": "YulAssignment",
                              "src": "2858:32:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2880:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "2880:9:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "2867:12:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "2867:12:13"
                                },
                                "nativeSrc": "2867:23:13",
                                "nodeType": "YulFunctionCall",
                                "src": "2867:23:13"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "2858:5:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "2858:5:13"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2899:15:13",
                              "nodeType": "YulAssignment",
                              "src": "2899:15:13",
                              "value": {
                                "name": "value",
                                "nativeSrc": "2909:5:13",
                                "nodeType": "YulIdentifier",
                                "src": "2909:5:13"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "2899:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "2899:6:13"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2923:48:13",
                              "nodeType": "YulAssignment",
                              "src": "2923:48:13",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2956:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "2956:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2967:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "2967:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2952:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "2952:3:13"
                                    },
                                    "nativeSrc": "2952:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2952:18:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "2933:18:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "2933:18:13"
                                },
                                "nativeSrc": "2933:38:13",
                                "nodeType": "YulFunctionCall",
                                "src": "2933:38:13"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "2923:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "2923:6:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32t_address",
                        "nativeSrc": "2677:300:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "2722:9:13",
                            "nodeType": "YulTypedName",
                            "src": "2722:9:13",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "2733:7:13",
                            "nodeType": "YulTypedName",
                            "src": "2733:7:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "2745:6:13",
                            "nodeType": "YulTypedName",
                            "src": "2745:6:13",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "2753:6:13",
                            "nodeType": "YulTypedName",
                            "src": "2753:6:13",
                            "type": ""
                          }
                        ],
                        "src": "2677:300:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "3079:87:13",
                          "nodeType": "YulBlock",
                          "src": "3079:87:13",
                          "statements": [
                            {
                              "nativeSrc": "3089:26:13",
                              "nodeType": "YulAssignment",
                              "src": "3089:26:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3101:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "3101:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3112:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "3112:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "3097:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "3097:3:13"
                                },
                                "nativeSrc": "3097:18:13",
                                "nodeType": "YulFunctionCall",
                                "src": "3097:18:13"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "3089:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "3089:4:13"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3131:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "3131:9:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "3146:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "3146:6:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3154:4:13",
                                        "nodeType": "YulLiteral",
                                        "src": "3154:4:13",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "3142:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "3142:3:13"
                                    },
                                    "nativeSrc": "3142:17:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3142:17:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3124:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "3124:6:13"
                                },
                                "nativeSrc": "3124:36:13",
                                "nodeType": "YulFunctionCall",
                                "src": "3124:36:13"
                              },
                              "nativeSrc": "3124:36:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "3124:36:13"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
                        "nativeSrc": "2982:184:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3048:9:13",
                            "nodeType": "YulTypedName",
                            "src": "3048:9:13",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "3059:6:13",
                            "nodeType": "YulTypedName",
                            "src": "3059:6:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "3070:4:13",
                            "nodeType": "YulTypedName",
                            "src": "3070:4:13",
                            "type": ""
                          }
                        ],
                        "src": "2982:184:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "3241:156:13",
                          "nodeType": "YulBlock",
                          "src": "3241:156:13",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "3287:16:13",
                                "nodeType": "YulBlock",
                                "src": "3287:16:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3296:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "3296:1:13",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3299:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "3299:1:13",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "3289:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "3289:6:13"
                                      },
                                      "nativeSrc": "3289:12:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3289:12:13"
                                    },
                                    "nativeSrc": "3289:12:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3289:12:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "3262:7:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "3262:7:13"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3271:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "3271:9:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "3258:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "3258:3:13"
                                    },
                                    "nativeSrc": "3258:23:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3258:23:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3283:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "3283:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "3254:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "3254:3:13"
                                },
                                "nativeSrc": "3254:32:13",
                                "nodeType": "YulFunctionCall",
                                "src": "3254:32:13"
                              },
                              "nativeSrc": "3251:52:13",
                              "nodeType": "YulIf",
                              "src": "3251:52:13"
                            },
                            {
                              "nativeSrc": "3312:14:13",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3312:14:13",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "3325:1:13",
                                "nodeType": "YulLiteral",
                                "src": "3325:1:13",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "3316:5:13",
                                  "nodeType": "YulTypedName",
                                  "src": "3316:5:13",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3335:32:13",
                              "nodeType": "YulAssignment",
                              "src": "3335:32:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3357:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "3357:9:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "3344:12:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "3344:12:13"
                                },
                                "nativeSrc": "3344:23:13",
                                "nodeType": "YulFunctionCall",
                                "src": "3344:23:13"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "3335:5:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "3335:5:13"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3376:15:13",
                              "nodeType": "YulAssignment",
                              "src": "3376:15:13",
                              "value": {
                                "name": "value",
                                "nativeSrc": "3386:5:13",
                                "nodeType": "YulIdentifier",
                                "src": "3386:5:13"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "3376:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "3376:6:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nativeSrc": "3171:226:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3207:9:13",
                            "nodeType": "YulTypedName",
                            "src": "3207:9:13",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "3218:7:13",
                            "nodeType": "YulTypedName",
                            "src": "3218:7:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "3230:6:13",
                            "nodeType": "YulTypedName",
                            "src": "3230:6:13",
                            "type": ""
                          }
                        ],
                        "src": "3171:226:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "3434:95:13",
                          "nodeType": "YulBlock",
                          "src": "3434:95:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3451:1:13",
                                    "nodeType": "YulLiteral",
                                    "src": "3451:1:13",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3458:3:13",
                                        "nodeType": "YulLiteral",
                                        "src": "3458:3:13",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3463:10:13",
                                        "nodeType": "YulLiteral",
                                        "src": "3463:10:13",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "3454:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "3454:3:13"
                                    },
                                    "nativeSrc": "3454:20:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3454:20:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3444:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "3444:6:13"
                                },
                                "nativeSrc": "3444:31:13",
                                "nodeType": "YulFunctionCall",
                                "src": "3444:31:13"
                              },
                              "nativeSrc": "3444:31:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "3444:31:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3491:1:13",
                                    "nodeType": "YulLiteral",
                                    "src": "3491:1:13",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3494:4:13",
                                    "nodeType": "YulLiteral",
                                    "src": "3494:4:13",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3484:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "3484:6:13"
                                },
                                "nativeSrc": "3484:15:13",
                                "nodeType": "YulFunctionCall",
                                "src": "3484:15:13"
                              },
                              "nativeSrc": "3484:15:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "3484:15:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3515:1:13",
                                    "nodeType": "YulLiteral",
                                    "src": "3515:1:13",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3518:4:13",
                                    "nodeType": "YulLiteral",
                                    "src": "3518:4:13",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "3508:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "3508:6:13"
                                },
                                "nativeSrc": "3508:15:13",
                                "nodeType": "YulFunctionCall",
                                "src": "3508:15:13"
                              },
                              "nativeSrc": "3508:15:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "3508:15:13"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nativeSrc": "3402:127:13",
                        "nodeType": "YulFunctionDefinition",
                        "src": "3402:127:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "3631:922:13",
                          "nodeType": "YulBlock",
                          "src": "3631:922:13",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "3677:16:13",
                                "nodeType": "YulBlock",
                                "src": "3677:16:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3686:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "3686:1:13",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3689:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "3689:1:13",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "3679:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "3679:6:13"
                                      },
                                      "nativeSrc": "3679:12:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3679:12:13"
                                    },
                                    "nativeSrc": "3679:12:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3679:12:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "3652:7:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "3652:7:13"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3661:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "3661:9:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "3648:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "3648:3:13"
                                    },
                                    "nativeSrc": "3648:23:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3648:23:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3673:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "3673:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "3644:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "3644:3:13"
                                },
                                "nativeSrc": "3644:32:13",
                                "nodeType": "YulFunctionCall",
                                "src": "3644:32:13"
                              },
                              "nativeSrc": "3641:52:13",
                              "nodeType": "YulIf",
                              "src": "3641:52:13"
                            },
                            {
                              "nativeSrc": "3702:39:13",
                              "nodeType": "YulAssignment",
                              "src": "3702:39:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3731:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "3731:9:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "3712:18:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "3712:18:13"
                                },
                                "nativeSrc": "3712:29:13",
                                "nodeType": "YulFunctionCall",
                                "src": "3712:29:13"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "3702:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "3702:6:13"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3750:46:13",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3750:46:13",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3781:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "3781:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3792:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "3792:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "3777:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "3777:3:13"
                                    },
                                    "nativeSrc": "3777:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3777:18:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "3764:12:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "3764:12:13"
                                },
                                "nativeSrc": "3764:32:13",
                                "nodeType": "YulFunctionCall",
                                "src": "3764:32:13"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nativeSrc": "3754:6:13",
                                  "nodeType": "YulTypedName",
                                  "src": "3754:6:13",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "3839:16:13",
                                "nodeType": "YulBlock",
                                "src": "3839:16:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3848:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "3848:1:13",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3851:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "3851:1:13",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "3841:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "3841:6:13"
                                      },
                                      "nativeSrc": "3841:12:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3841:12:13"
                                    },
                                    "nativeSrc": "3841:12:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3841:12:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "3811:6:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "3811:6:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3819:18:13",
                                    "nodeType": "YulLiteral",
                                    "src": "3819:18:13",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "3808:2:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "3808:2:13"
                                },
                                "nativeSrc": "3808:30:13",
                                "nodeType": "YulFunctionCall",
                                "src": "3808:30:13"
                              },
                              "nativeSrc": "3805:50:13",
                              "nodeType": "YulIf",
                              "src": "3805:50:13"
                            },
                            {
                              "nativeSrc": "3864:32:13",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3864:32:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3878:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "3878:9:13"
                                  },
                                  {
                                    "name": "offset",
                                    "nativeSrc": "3889:6:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "3889:6:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "3874:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "3874:3:13"
                                },
                                "nativeSrc": "3874:22:13",
                                "nodeType": "YulFunctionCall",
                                "src": "3874:22:13"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nativeSrc": "3868:2:13",
                                  "nodeType": "YulTypedName",
                                  "src": "3868:2:13",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "3944:16:13",
                                "nodeType": "YulBlock",
                                "src": "3944:16:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3953:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "3953:1:13",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3956:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "3956:1:13",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "3946:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "3946:6:13"
                                      },
                                      "nativeSrc": "3946:12:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3946:12:13"
                                    },
                                    "nativeSrc": "3946:12:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3946:12:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_1",
                                            "nativeSrc": "3923:2:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "3923:2:13"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "3927:4:13",
                                            "nodeType": "YulLiteral",
                                            "src": "3927:4:13",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "3919:3:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "3919:3:13"
                                        },
                                        "nativeSrc": "3919:13:13",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3919:13:13"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "3934:7:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "3934:7:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nativeSrc": "3915:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "3915:3:13"
                                    },
                                    "nativeSrc": "3915:27:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3915:27:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "3908:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "3908:6:13"
                                },
                                "nativeSrc": "3908:35:13",
                                "nodeType": "YulFunctionCall",
                                "src": "3908:35:13"
                              },
                              "nativeSrc": "3905:55:13",
                              "nodeType": "YulIf",
                              "src": "3905:55:13"
                            },
                            {
                              "nativeSrc": "3969:30:13",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3969:30:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nativeSrc": "3996:2:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "3996:2:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "3983:12:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "3983:12:13"
                                },
                                "nativeSrc": "3983:16:13",
                                "nodeType": "YulFunctionCall",
                                "src": "3983:16:13"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nativeSrc": "3973:6:13",
                                  "nodeType": "YulTypedName",
                                  "src": "3973:6:13",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "4042:22:13",
                                "nodeType": "YulBlock",
                                "src": "4042:22:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nativeSrc": "4044:16:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "4044:16:13"
                                      },
                                      "nativeSrc": "4044:18:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4044:18:13"
                                    },
                                    "nativeSrc": "4044:18:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4044:18:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nativeSrc": "4014:6:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "4014:6:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4022:18:13",
                                    "nodeType": "YulLiteral",
                                    "src": "4022:18:13",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "4011:2:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "4011:2:13"
                                },
                                "nativeSrc": "4011:30:13",
                                "nodeType": "YulFunctionCall",
                                "src": "4011:30:13"
                              },
                              "nativeSrc": "4008:56:13",
                              "nodeType": "YulIf",
                              "src": "4008:56:13"
                            },
                            {
                              "nativeSrc": "4073:23:13",
                              "nodeType": "YulVariableDeclaration",
                              "src": "4073:23:13",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4093:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "4093:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "4087:5:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "4087:5:13"
                                },
                                "nativeSrc": "4087:9:13",
                                "nodeType": "YulFunctionCall",
                                "src": "4087:9:13"
                              },
                              "variables": [
                                {
                                  "name": "memPtr",
                                  "nativeSrc": "4077:6:13",
                                  "nodeType": "YulTypedName",
                                  "src": "4077:6:13",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "4105:85:13",
                              "nodeType": "YulVariableDeclaration",
                              "src": "4105:85:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nativeSrc": "4127:6:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "4127:6:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "length",
                                                    "nativeSrc": "4151:6:13",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "4151:6:13"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "4159:4:13",
                                                    "nodeType": "YulLiteral",
                                                    "src": "4159:4:13",
                                                    "type": "",
                                                    "value": "0x1f"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "4147:3:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4147:3:13"
                                                },
                                                "nativeSrc": "4147:17:13",
                                                "nodeType": "YulFunctionCall",
                                                "src": "4147:17:13"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "4170:2:13",
                                                    "nodeType": "YulLiteral",
                                                    "src": "4170:2:13",
                                                    "type": "",
                                                    "value": "31"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "not",
                                                  "nativeSrc": "4166:3:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4166:3:13"
                                                },
                                                "nativeSrc": "4166:7:13",
                                                "nodeType": "YulFunctionCall",
                                                "src": "4166:7:13"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "and",
                                              "nativeSrc": "4143:3:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "4143:3:13"
                                            },
                                            "nativeSrc": "4143:31:13",
                                            "nodeType": "YulFunctionCall",
                                            "src": "4143:31:13"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4176:2:13",
                                            "nodeType": "YulLiteral",
                                            "src": "4176:2:13",
                                            "type": "",
                                            "value": "63"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "4139:3:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "4139:3:13"
                                        },
                                        "nativeSrc": "4139:40:13",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4139:40:13"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4185:2:13",
                                            "nodeType": "YulLiteral",
                                            "src": "4185:2:13",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nativeSrc": "4181:3:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "4181:3:13"
                                        },
                                        "nativeSrc": "4181:7:13",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4181:7:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "4135:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "4135:3:13"
                                    },
                                    "nativeSrc": "4135:54:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4135:54:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "4123:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "4123:3:13"
                                },
                                "nativeSrc": "4123:67:13",
                                "nodeType": "YulFunctionCall",
                                "src": "4123:67:13"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nativeSrc": "4109:10:13",
                                  "nodeType": "YulTypedName",
                                  "src": "4109:10:13",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "4265:22:13",
                                "nodeType": "YulBlock",
                                "src": "4265:22:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nativeSrc": "4267:16:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "4267:16:13"
                                      },
                                      "nativeSrc": "4267:18:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4267:18:13"
                                    },
                                    "nativeSrc": "4267:18:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4267:18:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nativeSrc": "4208:10:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "4208:10:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4220:18:13",
                                        "nodeType": "YulLiteral",
                                        "src": "4220:18:13",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nativeSrc": "4205:2:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "4205:2:13"
                                    },
                                    "nativeSrc": "4205:34:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4205:34:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nativeSrc": "4244:10:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "4244:10:13"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nativeSrc": "4256:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "4256:6:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nativeSrc": "4241:2:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "4241:2:13"
                                    },
                                    "nativeSrc": "4241:22:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4241:22:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nativeSrc": "4202:2:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "4202:2:13"
                                },
                                "nativeSrc": "4202:62:13",
                                "nodeType": "YulFunctionCall",
                                "src": "4202:62:13"
                              },
                              "nativeSrc": "4199:88:13",
                              "nodeType": "YulIf",
                              "src": "4199:88:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4303:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "4303:2:13",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nativeSrc": "4307:10:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "4307:10:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4296:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "4296:6:13"
                                },
                                "nativeSrc": "4296:22:13",
                                "nodeType": "YulFunctionCall",
                                "src": "4296:22:13"
                              },
                              "nativeSrc": "4296:22:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "4296:22:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nativeSrc": "4334:6:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "4334:6:13"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "4342:6:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "4342:6:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4327:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "4327:6:13"
                                },
                                "nativeSrc": "4327:22:13",
                                "nodeType": "YulFunctionCall",
                                "src": "4327:22:13"
                              },
                              "nativeSrc": "4327:22:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "4327:22:13"
                            },
                            {
                              "body": {
                                "nativeSrc": "4399:16:13",
                                "nodeType": "YulBlock",
                                "src": "4399:16:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "4408:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "4408:1:13",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "4411:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "4411:1:13",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "4401:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "4401:6:13"
                                      },
                                      "nativeSrc": "4401:12:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4401:12:13"
                                    },
                                    "nativeSrc": "4401:12:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4401:12:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_1",
                                            "nativeSrc": "4372:2:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "4372:2:13"
                                          },
                                          {
                                            "name": "length",
                                            "nativeSrc": "4376:6:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "4376:6:13"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "4368:3:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "4368:3:13"
                                        },
                                        "nativeSrc": "4368:15:13",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4368:15:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4385:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "4385:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "4364:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "4364:3:13"
                                    },
                                    "nativeSrc": "4364:24:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4364:24:13"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "4390:7:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "4390:7:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "4361:2:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "4361:2:13"
                                },
                                "nativeSrc": "4361:37:13",
                                "nodeType": "YulFunctionCall",
                                "src": "4361:37:13"
                              },
                              "nativeSrc": "4358:57:13",
                              "nodeType": "YulIf",
                              "src": "4358:57:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nativeSrc": "4441:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "4441:6:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4449:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "4449:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "4437:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "4437:3:13"
                                    },
                                    "nativeSrc": "4437:15:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4437:15:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nativeSrc": "4458:2:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "4458:2:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4462:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "4462:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "4454:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "4454:3:13"
                                    },
                                    "nativeSrc": "4454:11:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4454:11:13"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "4467:6:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "4467:6:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nativeSrc": "4424:12:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "4424:12:13"
                                },
                                "nativeSrc": "4424:50:13",
                                "nodeType": "YulFunctionCall",
                                "src": "4424:50:13"
                              },
                              "nativeSrc": "4424:50:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "4424:50:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "memPtr",
                                            "nativeSrc": "4498:6:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "4498:6:13"
                                          },
                                          {
                                            "name": "length",
                                            "nativeSrc": "4506:6:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "4506:6:13"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "4494:3:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "4494:3:13"
                                        },
                                        "nativeSrc": "4494:19:13",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4494:19:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4515:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "4515:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "4490:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "4490:3:13"
                                    },
                                    "nativeSrc": "4490:28:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4490:28:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4520:1:13",
                                    "nodeType": "YulLiteral",
                                    "src": "4520:1:13",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4483:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "4483:6:13"
                                },
                                "nativeSrc": "4483:39:13",
                                "nodeType": "YulFunctionCall",
                                "src": "4483:39:13"
                              },
                              "nativeSrc": "4483:39:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "4483:39:13"
                            },
                            {
                              "nativeSrc": "4531:16:13",
                              "nodeType": "YulAssignment",
                              "src": "4531:16:13",
                              "value": {
                                "name": "memPtr",
                                "nativeSrc": "4541:6:13",
                                "nodeType": "YulIdentifier",
                                "src": "4541:6:13"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "4531:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "4531:6:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_string_memory_ptr",
                        "nativeSrc": "3534:1019:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3589:9:13",
                            "nodeType": "YulTypedName",
                            "src": "3589:9:13",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "3600:7:13",
                            "nodeType": "YulTypedName",
                            "src": "3600:7:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "3612:6:13",
                            "nodeType": "YulTypedName",
                            "src": "3612:6:13",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "3620:6:13",
                            "nodeType": "YulTypedName",
                            "src": "3620:6:13",
                            "type": ""
                          }
                        ],
                        "src": "3534:1019:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "4645:173:13",
                          "nodeType": "YulBlock",
                          "src": "4645:173:13",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "4691:16:13",
                                "nodeType": "YulBlock",
                                "src": "4691:16:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "4700:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "4700:1:13",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "4703:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "4703:1:13",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "4693:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "4693:6:13"
                                      },
                                      "nativeSrc": "4693:12:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4693:12:13"
                                    },
                                    "nativeSrc": "4693:12:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4693:12:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "4666:7:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "4666:7:13"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "4675:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "4675:9:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "4662:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "4662:3:13"
                                    },
                                    "nativeSrc": "4662:23:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4662:23:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4687:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "4687:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "4658:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "4658:3:13"
                                },
                                "nativeSrc": "4658:32:13",
                                "nodeType": "YulFunctionCall",
                                "src": "4658:32:13"
                              },
                              "nativeSrc": "4655:52:13",
                              "nodeType": "YulIf",
                              "src": "4655:52:13"
                            },
                            {
                              "nativeSrc": "4716:39:13",
                              "nodeType": "YulAssignment",
                              "src": "4716:39:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4745:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "4745:9:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "4726:18:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "4726:18:13"
                                },
                                "nativeSrc": "4726:29:13",
                                "nodeType": "YulFunctionCall",
                                "src": "4726:29:13"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "4716:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "4716:6:13"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "4764:48:13",
                              "nodeType": "YulAssignment",
                              "src": "4764:48:13",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "4797:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "4797:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4808:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "4808:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "4793:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "4793:3:13"
                                    },
                                    "nativeSrc": "4793:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4793:18:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "4774:18:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "4774:18:13"
                                },
                                "nativeSrc": "4774:38:13",
                                "nodeType": "YulFunctionCall",
                                "src": "4774:38:13"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "4764:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "4764:6:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_address",
                        "nativeSrc": "4558:260:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "4603:9:13",
                            "nodeType": "YulTypedName",
                            "src": "4603:9:13",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "4614:7:13",
                            "nodeType": "YulTypedName",
                            "src": "4614:7:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "4626:6:13",
                            "nodeType": "YulTypedName",
                            "src": "4626:6:13",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "4634:6:13",
                            "nodeType": "YulTypedName",
                            "src": "4634:6:13",
                            "type": ""
                          }
                        ],
                        "src": "4558:260:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "4878:325:13",
                          "nodeType": "YulBlock",
                          "src": "4878:325:13",
                          "statements": [
                            {
                              "nativeSrc": "4888:22:13",
                              "nodeType": "YulAssignment",
                              "src": "4888:22:13",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4902:1:13",
                                    "nodeType": "YulLiteral",
                                    "src": "4902:1:13",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "data",
                                    "nativeSrc": "4905:4:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "4905:4:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nativeSrc": "4898:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "4898:3:13"
                                },
                                "nativeSrc": "4898:12:13",
                                "nodeType": "YulFunctionCall",
                                "src": "4898:12:13"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nativeSrc": "4888:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "4888:6:13"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "4919:38:13",
                              "nodeType": "YulVariableDeclaration",
                              "src": "4919:38:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nativeSrc": "4949:4:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "4949:4:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4955:1:13",
                                    "nodeType": "YulLiteral",
                                    "src": "4955:1:13",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "4945:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "4945:3:13"
                                },
                                "nativeSrc": "4945:12:13",
                                "nodeType": "YulFunctionCall",
                                "src": "4945:12:13"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nativeSrc": "4923:18:13",
                                  "nodeType": "YulTypedName",
                                  "src": "4923:18:13",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "4996:31:13",
                                "nodeType": "YulBlock",
                                "src": "4996:31:13",
                                "statements": [
                                  {
                                    "nativeSrc": "4998:27:13",
                                    "nodeType": "YulAssignment",
                                    "src": "4998:27:13",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nativeSrc": "5012:6:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "5012:6:13"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5020:4:13",
                                          "nodeType": "YulLiteral",
                                          "src": "5020:4:13",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nativeSrc": "5008:3:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "5008:3:13"
                                      },
                                      "nativeSrc": "5008:17:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5008:17:13"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nativeSrc": "4998:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "4998:6:13"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nativeSrc": "4976:18:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "4976:18:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "4969:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "4969:6:13"
                                },
                                "nativeSrc": "4969:26:13",
                                "nodeType": "YulFunctionCall",
                                "src": "4969:26:13"
                              },
                              "nativeSrc": "4966:61:13",
                              "nodeType": "YulIf",
                              "src": "4966:61:13"
                            },
                            {
                              "body": {
                                "nativeSrc": "5086:111:13",
                                "nodeType": "YulBlock",
                                "src": "5086:111:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5107:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "5107:1:13",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "5114:3:13",
                                              "nodeType": "YulLiteral",
                                              "src": "5114:3:13",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "5119:10:13",
                                              "nodeType": "YulLiteral",
                                              "src": "5119:10:13",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nativeSrc": "5110:3:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "5110:3:13"
                                          },
                                          "nativeSrc": "5110:20:13",
                                          "nodeType": "YulFunctionCall",
                                          "src": "5110:20:13"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "5100:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "5100:6:13"
                                      },
                                      "nativeSrc": "5100:31:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5100:31:13"
                                    },
                                    "nativeSrc": "5100:31:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5100:31:13"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5151:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "5151:1:13",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5154:4:13",
                                          "nodeType": "YulLiteral",
                                          "src": "5154:4:13",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "5144:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "5144:6:13"
                                      },
                                      "nativeSrc": "5144:15:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5144:15:13"
                                    },
                                    "nativeSrc": "5144:15:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5144:15:13"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5179:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "5179:1:13",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5182:4:13",
                                          "nodeType": "YulLiteral",
                                          "src": "5182:4:13",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "5172:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "5172:6:13"
                                      },
                                      "nativeSrc": "5172:15:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5172:15:13"
                                    },
                                    "nativeSrc": "5172:15:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5172:15:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nativeSrc": "5042:18:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "5042:18:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nativeSrc": "5065:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "5065:6:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5073:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "5073:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nativeSrc": "5062:2:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "5062:2:13"
                                    },
                                    "nativeSrc": "5062:14:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5062:14:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nativeSrc": "5039:2:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "5039:2:13"
                                },
                                "nativeSrc": "5039:38:13",
                                "nodeType": "YulFunctionCall",
                                "src": "5039:38:13"
                              },
                              "nativeSrc": "5036:161:13",
                              "nodeType": "YulIf",
                              "src": "5036:161:13"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nativeSrc": "4823:380:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nativeSrc": "4858:4:13",
                            "nodeType": "YulTypedName",
                            "src": "4858:4:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nativeSrc": "4867:6:13",
                            "nodeType": "YulTypedName",
                            "src": "4867:6:13",
                            "type": ""
                          }
                        ],
                        "src": "4823:380:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "5382:181:13",
                          "nodeType": "YulBlock",
                          "src": "5382:181:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5399:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "5399:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5410:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "5410:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5392:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "5392:6:13"
                                },
                                "nativeSrc": "5392:21:13",
                                "nodeType": "YulFunctionCall",
                                "src": "5392:21:13"
                              },
                              "nativeSrc": "5392:21:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "5392:21:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5433:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "5433:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5444:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "5444:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5429:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "5429:3:13"
                                    },
                                    "nativeSrc": "5429:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5429:18:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5449:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "5449:2:13",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5422:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "5422:6:13"
                                },
                                "nativeSrc": "5422:30:13",
                                "nodeType": "YulFunctionCall",
                                "src": "5422:30:13"
                              },
                              "nativeSrc": "5422:30:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "5422:30:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5472:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "5472:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5483:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "5483:2:13",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5468:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "5468:3:13"
                                    },
                                    "nativeSrc": "5468:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5468:18:13"
                                  },
                                  {
                                    "hexValue": "43616e6e6f74207472616e7366657220746f207a65726f2061646472657373",
                                    "kind": "string",
                                    "nativeSrc": "5488:33:13",
                                    "nodeType": "YulLiteral",
                                    "src": "5488:33:13",
                                    "type": "",
                                    "value": "Cannot transfer to zero address"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5461:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "5461:6:13"
                                },
                                "nativeSrc": "5461:61:13",
                                "nodeType": "YulFunctionCall",
                                "src": "5461:61:13"
                              },
                              "nativeSrc": "5461:61:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "5461:61:13"
                            },
                            {
                              "nativeSrc": "5531:26:13",
                              "nodeType": "YulAssignment",
                              "src": "5531:26:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5543:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "5543:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5554:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "5554:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5539:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "5539:3:13"
                                },
                                "nativeSrc": "5539:18:13",
                                "nodeType": "YulFunctionCall",
                                "src": "5539:18:13"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "5531:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "5531:4:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_bb6ef8259868f621162cf2269ec456fd6e3660c295ef634f53db3982172a569f__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "5208:355:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "5359:9:13",
                            "nodeType": "YulTypedName",
                            "src": "5359:9:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "5373:4:13",
                            "nodeType": "YulTypedName",
                            "src": "5373:4:13",
                            "type": ""
                          }
                        ],
                        "src": "5208:355:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "5742:182:13",
                          "nodeType": "YulBlock",
                          "src": "5742:182:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5759:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "5759:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5770:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "5770:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5752:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "5752:6:13"
                                },
                                "nativeSrc": "5752:21:13",
                                "nodeType": "YulFunctionCall",
                                "src": "5752:21:13"
                              },
                              "nativeSrc": "5752:21:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "5752:21:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5793:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "5793:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5804:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "5804:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5789:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "5789:3:13"
                                    },
                                    "nativeSrc": "5789:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5789:18:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5809:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "5809:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5782:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "5782:6:13"
                                },
                                "nativeSrc": "5782:30:13",
                                "nodeType": "YulFunctionCall",
                                "src": "5782:30:13"
                              },
                              "nativeSrc": "5782:30:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "5782:30:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5832:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "5832:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5843:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "5843:2:13",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5828:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "5828:3:13"
                                    },
                                    "nativeSrc": "5828:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5828:18:13"
                                  },
                                  {
                                    "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
                                    "kind": "string",
                                    "nativeSrc": "5848:34:13",
                                    "nodeType": "YulLiteral",
                                    "src": "5848:34:13",
                                    "type": "",
                                    "value": "Amount must be greater than zero"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5821:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "5821:6:13"
                                },
                                "nativeSrc": "5821:62:13",
                                "nodeType": "YulFunctionCall",
                                "src": "5821:62:13"
                              },
                              "nativeSrc": "5821:62:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "5821:62:13"
                            },
                            {
                              "nativeSrc": "5892:26:13",
                              "nodeType": "YulAssignment",
                              "src": "5892:26:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5904:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "5904:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5915:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "5915:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5900:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "5900:3:13"
                                },
                                "nativeSrc": "5900:18:13",
                                "nodeType": "YulFunctionCall",
                                "src": "5900:18:13"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "5892:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "5892:4:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "5568:356:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "5719:9:13",
                            "nodeType": "YulTypedName",
                            "src": "5719:9:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "5733:4:13",
                            "nodeType": "YulTypedName",
                            "src": "5733:4:13",
                            "type": ""
                          }
                        ],
                        "src": "5568:356:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "6103:170:13",
                          "nodeType": "YulBlock",
                          "src": "6103:170:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "6120:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "6120:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6131:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "6131:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6113:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "6113:6:13"
                                },
                                "nativeSrc": "6113:21:13",
                                "nodeType": "YulFunctionCall",
                                "src": "6113:21:13"
                              },
                              "nativeSrc": "6113:21:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "6113:21:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "6154:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "6154:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6165:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "6165:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "6150:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "6150:3:13"
                                    },
                                    "nativeSrc": "6150:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6150:18:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6170:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "6170:2:13",
                                    "type": "",
                                    "value": "20"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6143:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "6143:6:13"
                                },
                                "nativeSrc": "6143:30:13",
                                "nodeType": "YulFunctionCall",
                                "src": "6143:30:13"
                              },
                              "nativeSrc": "6143:30:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "6143:30:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "6193:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "6193:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6204:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "6204:2:13",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "6189:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "6189:3:13"
                                    },
                                    "nativeSrc": "6189:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6189:18:13"
                                  },
                                  {
                                    "hexValue": "496e73756666696369656e742062616c616e6365",
                                    "kind": "string",
                                    "nativeSrc": "6209:22:13",
                                    "nodeType": "YulLiteral",
                                    "src": "6209:22:13",
                                    "type": "",
                                    "value": "Insufficient balance"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6182:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "6182:6:13"
                                },
                                "nativeSrc": "6182:50:13",
                                "nodeType": "YulFunctionCall",
                                "src": "6182:50:13"
                              },
                              "nativeSrc": "6182:50:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "6182:50:13"
                            },
                            {
                              "nativeSrc": "6241:26:13",
                              "nodeType": "YulAssignment",
                              "src": "6241:26:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "6253:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "6253:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6264:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "6264:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "6249:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "6249:3:13"
                                },
                                "nativeSrc": "6249:18:13",
                                "nodeType": "YulFunctionCall",
                                "src": "6249:18:13"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "6241:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "6241:4:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "5929:344:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "6080:9:13",
                            "nodeType": "YulTypedName",
                            "src": "6080:9:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "6094:4:13",
                            "nodeType": "YulTypedName",
                            "src": "6094:4:13",
                            "type": ""
                          }
                        ],
                        "src": "5929:344:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "6452:169:13",
                          "nodeType": "YulBlock",
                          "src": "6452:169:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "6469:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "6469:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6480:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "6480:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6462:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "6462:6:13"
                                },
                                "nativeSrc": "6462:21:13",
                                "nodeType": "YulFunctionCall",
                                "src": "6462:21:13"
                              },
                              "nativeSrc": "6462:21:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "6462:21:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "6503:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "6503:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6514:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "6514:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "6499:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "6499:3:13"
                                    },
                                    "nativeSrc": "6499:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6499:18:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6519:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "6519:2:13",
                                    "type": "",
                                    "value": "19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6492:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "6492:6:13"
                                },
                                "nativeSrc": "6492:30:13",
                                "nodeType": "YulFunctionCall",
                                "src": "6492:30:13"
                              },
                              "nativeSrc": "6492:30:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "6492:30:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "6542:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "6542:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6553:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "6553:2:13",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "6538:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "6538:3:13"
                                    },
                                    "nativeSrc": "6538:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6538:18:13"
                                  },
                                  {
                                    "hexValue": "4461696c79206c696d6974206e6f7420736574",
                                    "kind": "string",
                                    "nativeSrc": "6558:21:13",
                                    "nodeType": "YulLiteral",
                                    "src": "6558:21:13",
                                    "type": "",
                                    "value": "Daily limit not set"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6531:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "6531:6:13"
                                },
                                "nativeSrc": "6531:49:13",
                                "nodeType": "YulFunctionCall",
                                "src": "6531:49:13"
                              },
                              "nativeSrc": "6531:49:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "6531:49:13"
                            },
                            {
                              "nativeSrc": "6589:26:13",
                              "nodeType": "YulAssignment",
                              "src": "6589:26:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "6601:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "6601:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6612:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "6612:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "6597:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "6597:3:13"
                                },
                                "nativeSrc": "6597:18:13",
                                "nodeType": "YulFunctionCall",
                                "src": "6597:18:13"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "6589:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "6589:4:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_f46a208452d481cbabd737d10144d3db436474a848cac326801210ec7a5aad99__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "6278:343:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "6429:9:13",
                            "nodeType": "YulTypedName",
                            "src": "6429:9:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "6443:4:13",
                            "nodeType": "YulTypedName",
                            "src": "6443:4:13",
                            "type": ""
                          }
                        ],
                        "src": "6278:343:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "6658:95:13",
                          "nodeType": "YulBlock",
                          "src": "6658:95:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6675:1:13",
                                    "nodeType": "YulLiteral",
                                    "src": "6675:1:13",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6682:3:13",
                                        "nodeType": "YulLiteral",
                                        "src": "6682:3:13",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6687:10:13",
                                        "nodeType": "YulLiteral",
                                        "src": "6687:10:13",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "6678:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "6678:3:13"
                                    },
                                    "nativeSrc": "6678:20:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6678:20:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6668:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "6668:6:13"
                                },
                                "nativeSrc": "6668:31:13",
                                "nodeType": "YulFunctionCall",
                                "src": "6668:31:13"
                              },
                              "nativeSrc": "6668:31:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "6668:31:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6715:1:13",
                                    "nodeType": "YulLiteral",
                                    "src": "6715:1:13",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6718:4:13",
                                    "nodeType": "YulLiteral",
                                    "src": "6718:4:13",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6708:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "6708:6:13"
                                },
                                "nativeSrc": "6708:15:13",
                                "nodeType": "YulFunctionCall",
                                "src": "6708:15:13"
                              },
                              "nativeSrc": "6708:15:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "6708:15:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6739:1:13",
                                    "nodeType": "YulLiteral",
                                    "src": "6739:1:13",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6742:4:13",
                                    "nodeType": "YulLiteral",
                                    "src": "6742:4:13",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "6732:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "6732:6:13"
                                },
                                "nativeSrc": "6732:15:13",
                                "nodeType": "YulFunctionCall",
                                "src": "6732:15:13"
                              },
                              "nativeSrc": "6732:15:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "6732:15:13"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nativeSrc": "6626:127:13",
                        "nodeType": "YulFunctionDefinition",
                        "src": "6626:127:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "6807:79:13",
                          "nodeType": "YulBlock",
                          "src": "6807:79:13",
                          "statements": [
                            {
                              "nativeSrc": "6817:17:13",
                              "nodeType": "YulAssignment",
                              "src": "6817:17:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "6829:1:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "6829:1:13"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "6832:1:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "6832:1:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nativeSrc": "6825:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "6825:3:13"
                                },
                                "nativeSrc": "6825:9:13",
                                "nodeType": "YulFunctionCall",
                                "src": "6825:9:13"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nativeSrc": "6817:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "6817:4:13"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "6858:22:13",
                                "nodeType": "YulBlock",
                                "src": "6858:22:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "6860:16:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "6860:16:13"
                                      },
                                      "nativeSrc": "6860:18:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "6860:18:13"
                                    },
                                    "nativeSrc": "6860:18:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6860:18:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "diff",
                                    "nativeSrc": "6849:4:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "6849:4:13"
                                  },
                                  {
                                    "name": "x",
                                    "nativeSrc": "6855:1:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "6855:1:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "6846:2:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "6846:2:13"
                                },
                                "nativeSrc": "6846:11:13",
                                "nodeType": "YulFunctionCall",
                                "src": "6846:11:13"
                              },
                              "nativeSrc": "6843:37:13",
                              "nodeType": "YulIf",
                              "src": "6843:37:13"
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nativeSrc": "6758:128:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "6789:1:13",
                            "nodeType": "YulTypedName",
                            "src": "6789:1:13",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "6792:1:13",
                            "nodeType": "YulTypedName",
                            "src": "6792:1:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nativeSrc": "6798:4:13",
                            "nodeType": "YulTypedName",
                            "src": "6798:4:13",
                            "type": ""
                          }
                        ],
                        "src": "6758:128:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "6939:77:13",
                          "nodeType": "YulBlock",
                          "src": "6939:77:13",
                          "statements": [
                            {
                              "nativeSrc": "6949:16:13",
                              "nodeType": "YulAssignment",
                              "src": "6949:16:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "6960:1:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "6960:1:13"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "6963:1:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "6963:1:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "6956:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "6956:3:13"
                                },
                                "nativeSrc": "6956:9:13",
                                "nodeType": "YulFunctionCall",
                                "src": "6956:9:13"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nativeSrc": "6949:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "6949:3:13"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "6988:22:13",
                                "nodeType": "YulBlock",
                                "src": "6988:22:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "6990:16:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "6990:16:13"
                                      },
                                      "nativeSrc": "6990:18:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "6990:18:13"
                                    },
                                    "nativeSrc": "6990:18:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6990:18:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "6980:1:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "6980:1:13"
                                  },
                                  {
                                    "name": "sum",
                                    "nativeSrc": "6983:3:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "6983:3:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "6977:2:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "6977:2:13"
                                },
                                "nativeSrc": "6977:10:13",
                                "nodeType": "YulFunctionCall",
                                "src": "6977:10:13"
                              },
                              "nativeSrc": "6974:36:13",
                              "nodeType": "YulIf",
                              "src": "6974:36:13"
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nativeSrc": "6891:125:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "6922:1:13",
                            "nodeType": "YulTypedName",
                            "src": "6922:1:13",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "6925:1:13",
                            "nodeType": "YulTypedName",
                            "src": "6925:1:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nativeSrc": "6931:3:13",
                            "nodeType": "YulTypedName",
                            "src": "6931:3:13",
                            "type": ""
                          }
                        ],
                        "src": "6891:125:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "7195:179:13",
                          "nodeType": "YulBlock",
                          "src": "7195:179:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "7212:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "7212:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "7223:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "7223:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "7205:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "7205:6:13"
                                },
                                "nativeSrc": "7205:21:13",
                                "nodeType": "YulFunctionCall",
                                "src": "7205:21:13"
                              },
                              "nativeSrc": "7205:21:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "7205:21:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "7246:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "7246:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "7257:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "7257:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "7242:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "7242:3:13"
                                    },
                                    "nativeSrc": "7242:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7242:18:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "7262:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "7262:2:13",
                                    "type": "",
                                    "value": "29"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "7235:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "7235:6:13"
                                },
                                "nativeSrc": "7235:30:13",
                                "nodeType": "YulFunctionCall",
                                "src": "7235:30:13"
                              },
                              "nativeSrc": "7235:30:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "7235:30:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "7285:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "7285:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "7296:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "7296:2:13",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "7281:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "7281:3:13"
                                    },
                                    "nativeSrc": "7281:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7281:18:13"
                                  },
                                  {
                                    "hexValue": "4461696c79207370656e64696e67206c696d6974206578636565646564",
                                    "kind": "string",
                                    "nativeSrc": "7301:31:13",
                                    "nodeType": "YulLiteral",
                                    "src": "7301:31:13",
                                    "type": "",
                                    "value": "Daily spending limit exceeded"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "7274:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "7274:6:13"
                                },
                                "nativeSrc": "7274:59:13",
                                "nodeType": "YulFunctionCall",
                                "src": "7274:59:13"
                              },
                              "nativeSrc": "7274:59:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "7274:59:13"
                            },
                            {
                              "nativeSrc": "7342:26:13",
                              "nodeType": "YulAssignment",
                              "src": "7342:26:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "7354:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "7354:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "7365:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "7365:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "7350:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "7350:3:13"
                                },
                                "nativeSrc": "7350:18:13",
                                "nodeType": "YulFunctionCall",
                                "src": "7350:18:13"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "7342:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "7342:4:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_0b14ed7c5f1e7324d1cb0362112747b7060ac0bd8d6956f2822396b5cffbc877__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "7021:353:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "7172:9:13",
                            "nodeType": "YulTypedName",
                            "src": "7172:9:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "7186:4:13",
                            "nodeType": "YulTypedName",
                            "src": "7186:4:13",
                            "type": ""
                          }
                        ],
                        "src": "7021:353:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "7553:173:13",
                          "nodeType": "YulBlock",
                          "src": "7553:173:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "7570:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "7570:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "7581:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "7581:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "7563:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "7563:6:13"
                                },
                                "nativeSrc": "7563:21:13",
                                "nodeType": "YulFunctionCall",
                                "src": "7563:21:13"
                              },
                              "nativeSrc": "7563:21:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "7563:21:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "7604:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "7604:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "7615:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "7615:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "7600:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "7600:3:13"
                                    },
                                    "nativeSrc": "7600:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7600:18:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "7620:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "7620:2:13",
                                    "type": "",
                                    "value": "23"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "7593:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "7593:6:13"
                                },
                                "nativeSrc": "7593:30:13",
                                "nodeType": "YulFunctionCall",
                                "src": "7593:30:13"
                              },
                              "nativeSrc": "7593:30:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "7593:30:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "7643:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "7643:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "7654:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "7654:2:13",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "7639:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "7639:3:13"
                                    },
                                    "nativeSrc": "7639:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7639:18:13"
                                  },
                                  {
                                    "hexValue": "496e76616c69642073747564656e742061646472657373",
                                    "kind": "string",
                                    "nativeSrc": "7659:25:13",
                                    "nodeType": "YulLiteral",
                                    "src": "7659:25:13",
                                    "type": "",
                                    "value": "Invalid student address"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "7632:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "7632:6:13"
                                },
                                "nativeSrc": "7632:53:13",
                                "nodeType": "YulFunctionCall",
                                "src": "7632:53:13"
                              },
                              "nativeSrc": "7632:53:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "7632:53:13"
                            },
                            {
                              "nativeSrc": "7694:26:13",
                              "nodeType": "YulAssignment",
                              "src": "7694:26:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "7706:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "7706:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "7717:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "7717:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "7702:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "7702:3:13"
                                },
                                "nativeSrc": "7702:18:13",
                                "nodeType": "YulFunctionCall",
                                "src": "7702:18:13"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "7694:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "7694:4:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_3975d1816c3ca2e29b3bbab35c0be7b15164d704eb9cfbad43aedad5b5a01085__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "7379:347:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "7530:9:13",
                            "nodeType": "YulTypedName",
                            "src": "7530:9:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "7544:4:13",
                            "nodeType": "YulTypedName",
                            "src": "7544:4:13",
                            "type": ""
                          }
                        ],
                        "src": "7379:347:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "7905:181:13",
                          "nodeType": "YulBlock",
                          "src": "7905:181:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "7922:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "7922:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "7933:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "7933:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "7915:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "7915:6:13"
                                },
                                "nativeSrc": "7915:21:13",
                                "nodeType": "YulFunctionCall",
                                "src": "7915:21:13"
                              },
                              "nativeSrc": "7915:21:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "7915:21:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "7956:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "7956:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "7967:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "7967:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "7952:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "7952:3:13"
                                    },
                                    "nativeSrc": "7952:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7952:18:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "7972:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "7972:2:13",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "7945:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "7945:6:13"
                                },
                                "nativeSrc": "7945:30:13",
                                "nodeType": "YulFunctionCall",
                                "src": "7945:30:13"
                              },
                              "nativeSrc": "7945:30:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "7945:30:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "7995:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "7995:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "8006:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "8006:2:13",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "7991:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "7991:3:13"
                                    },
                                    "nativeSrc": "7991:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7991:18:13"
                                  },
                                  {
                                    "hexValue": "4c696d6974206d7573742062652067726561746572207468616e207a65726f",
                                    "kind": "string",
                                    "nativeSrc": "8011:33:13",
                                    "nodeType": "YulLiteral",
                                    "src": "8011:33:13",
                                    "type": "",
                                    "value": "Limit must be greater than zero"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "7984:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "7984:6:13"
                                },
                                "nativeSrc": "7984:61:13",
                                "nodeType": "YulFunctionCall",
                                "src": "7984:61:13"
                              },
                              "nativeSrc": "7984:61:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "7984:61:13"
                            },
                            {
                              "nativeSrc": "8054:26:13",
                              "nodeType": "YulAssignment",
                              "src": "8054:26:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "8066:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "8066:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8077:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "8077:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "8062:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "8062:3:13"
                                },
                                "nativeSrc": "8062:18:13",
                                "nodeType": "YulFunctionCall",
                                "src": "8062:18:13"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "8054:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "8054:4:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_2586c6f2c479ed85c187a54ca5dcfccd81d2a491bb7f43f1a090d05c2cb9ee92__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "7731:355:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "7882:9:13",
                            "nodeType": "YulTypedName",
                            "src": "7882:9:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "7896:4:13",
                            "nodeType": "YulTypedName",
                            "src": "7896:4:13",
                            "type": ""
                          }
                        ],
                        "src": "7731:355:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "8265:173:13",
                          "nodeType": "YulBlock",
                          "src": "8265:173:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "8282:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "8282:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8293:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "8293:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "8275:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "8275:6:13"
                                },
                                "nativeSrc": "8275:21:13",
                                "nodeType": "YulFunctionCall",
                                "src": "8275:21:13"
                              },
                              "nativeSrc": "8275:21:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "8275:21:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "8316:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "8316:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "8327:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "8327:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "8312:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "8312:3:13"
                                    },
                                    "nativeSrc": "8312:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8312:18:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8332:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "8332:2:13",
                                    "type": "",
                                    "value": "23"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "8305:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "8305:6:13"
                                },
                                "nativeSrc": "8305:30:13",
                                "nodeType": "YulFunctionCall",
                                "src": "8305:30:13"
                              },
                              "nativeSrc": "8305:30:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "8305:30:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "8355:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "8355:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "8366:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "8366:2:13",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "8351:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "8351:3:13"
                                    },
                                    "nativeSrc": "8351:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8351:18:13"
                                  },
                                  {
                                    "hexValue": "43616c6c6572206973206e6f7420612070617573303072",
                                    "kind": "string",
                                    "nativeSrc": "8371:25:13",
                                    "nodeType": "YulLiteral",
                                    "src": "8371:25:13",
                                    "type": "",
                                    "value": "Caller is not a paus00r"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "8344:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "8344:6:13"
                                },
                                "nativeSrc": "8344:53:13",
                                "nodeType": "YulFunctionCall",
                                "src": "8344:53:13"
                              },
                              "nativeSrc": "8344:53:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "8344:53:13"
                            },
                            {
                              "nativeSrc": "8406:26:13",
                              "nodeType": "YulAssignment",
                              "src": "8406:26:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "8418:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "8418:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8429:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "8429:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "8414:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "8414:3:13"
                                },
                                "nativeSrc": "8414:18:13",
                                "nodeType": "YulFunctionCall",
                                "src": "8414:18:13"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "8406:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "8406:4:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_280f51dd4b2d9aac10d97a682ab568ef4a4c97c88f4fba0273878925c25fa0f2__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "8091:347:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "8242:9:13",
                            "nodeType": "YulTypedName",
                            "src": "8242:9:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "8256:4:13",
                            "nodeType": "YulTypedName",
                            "src": "8256:4:13",
                            "type": ""
                          }
                        ],
                        "src": "8091:347:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "8617:172:13",
                          "nodeType": "YulBlock",
                          "src": "8617:172:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "8634:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "8634:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8645:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "8645:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "8627:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "8627:6:13"
                                },
                                "nativeSrc": "8627:21:13",
                                "nodeType": "YulFunctionCall",
                                "src": "8627:21:13"
                              },
                              "nativeSrc": "8627:21:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "8627:21:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "8668:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "8668:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "8679:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "8679:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "8664:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "8664:3:13"
                                    },
                                    "nativeSrc": "8664:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8664:18:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8684:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "8684:2:13",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "8657:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "8657:6:13"
                                },
                                "nativeSrc": "8657:30:13",
                                "nodeType": "YulFunctionCall",
                                "src": "8657:30:13"
                              },
                              "nativeSrc": "8657:30:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "8657:30:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "8707:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "8707:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "8718:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "8718:2:13",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "8703:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "8703:3:13"
                                    },
                                    "nativeSrc": "8703:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8703:18:13"
                                  },
                                  {
                                    "hexValue": "43616c6c6572206973206e6f742061206d696e746572",
                                    "kind": "string",
                                    "nativeSrc": "8723:24:13",
                                    "nodeType": "YulLiteral",
                                    "src": "8723:24:13",
                                    "type": "",
                                    "value": "Caller is not a minter"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "8696:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "8696:6:13"
                                },
                                "nativeSrc": "8696:52:13",
                                "nodeType": "YulFunctionCall",
                                "src": "8696:52:13"
                              },
                              "nativeSrc": "8696:52:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "8696:52:13"
                            },
                            {
                              "nativeSrc": "8757:26:13",
                              "nodeType": "YulAssignment",
                              "src": "8757:26:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "8769:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "8769:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8780:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "8780:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "8765:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "8765:3:13"
                                },
                                "nativeSrc": "8765:18:13",
                                "nodeType": "YulFunctionCall",
                                "src": "8765:18:13"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "8757:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "8757:4:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "8443:346:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "8594:9:13",
                            "nodeType": "YulTypedName",
                            "src": "8594:9:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "8608:4:13",
                            "nodeType": "YulTypedName",
                            "src": "8608:4:13",
                            "type": ""
                          }
                        ],
                        "src": "8443:346:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "8968:177:13",
                          "nodeType": "YulBlock",
                          "src": "8968:177:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "8985:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "8985:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8996:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "8996:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "8978:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "8978:6:13"
                                },
                                "nativeSrc": "8978:21:13",
                                "nodeType": "YulFunctionCall",
                                "src": "8978:21:13"
                              },
                              "nativeSrc": "8978:21:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "8978:21:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "9019:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "9019:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "9030:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "9030:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "9015:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "9015:3:13"
                                    },
                                    "nativeSrc": "9015:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9015:18:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9035:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "9035:2:13",
                                    "type": "",
                                    "value": "27"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "9008:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "9008:6:13"
                                },
                                "nativeSrc": "9008:30:13",
                                "nodeType": "YulFunctionCall",
                                "src": "9008:30:13"
                              },
                              "nativeSrc": "9008:30:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "9008:30:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "9058:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "9058:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "9069:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "9069:2:13",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "9054:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "9054:3:13"
                                    },
                                    "nativeSrc": "9054:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9054:18:13"
                                  },
                                  {
                                    "hexValue": "43616e6e6f74206d696e7420746f207a65726f2061646472657373",
                                    "kind": "string",
                                    "nativeSrc": "9074:29:13",
                                    "nodeType": "YulLiteral",
                                    "src": "9074:29:13",
                                    "type": "",
                                    "value": "Cannot mint to zero address"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "9047:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "9047:6:13"
                                },
                                "nativeSrc": "9047:57:13",
                                "nodeType": "YulFunctionCall",
                                "src": "9047:57:13"
                              },
                              "nativeSrc": "9047:57:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "9047:57:13"
                            },
                            {
                              "nativeSrc": "9113:26:13",
                              "nodeType": "YulAssignment",
                              "src": "9113:26:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "9125:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "9125:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9136:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "9136:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "9121:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "9121:3:13"
                                },
                                "nativeSrc": "9121:18:13",
                                "nodeType": "YulFunctionCall",
                                "src": "9121:18:13"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "9113:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "9113:4:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "8794:351:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "8945:9:13",
                            "nodeType": "YulTypedName",
                            "src": "8945:9:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "8959:4:13",
                            "nodeType": "YulTypedName",
                            "src": "8959:4:13",
                            "type": ""
                          }
                        ],
                        "src": "8794:351:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "9219:306:13",
                          "nodeType": "YulBlock",
                          "src": "9219:306:13",
                          "statements": [
                            {
                              "nativeSrc": "9229:10:13",
                              "nodeType": "YulAssignment",
                              "src": "9229:10:13",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "9238:1:13",
                                "nodeType": "YulLiteral",
                                "src": "9238:1:13",
                                "type": "",
                                "value": "1"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nativeSrc": "9229:5:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "9229:5:13"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "9248:13:13",
                              "nodeType": "YulAssignment",
                              "src": "9248:13:13",
                              "value": {
                                "name": "_base",
                                "nativeSrc": "9256:5:13",
                                "nodeType": "YulIdentifier",
                                "src": "9256:5:13"
                              },
                              "variableNames": [
                                {
                                  "name": "base",
                                  "nativeSrc": "9248:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "9248:4:13"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "9306:213:13",
                                "nodeType": "YulBlock",
                                "src": "9306:213:13",
                                "statements": [
                                  {
                                    "body": {
                                      "nativeSrc": "9348:22:13",
                                      "nodeType": "YulBlock",
                                      "src": "9348:22:13",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "panic_error_0x11",
                                              "nativeSrc": "9350:16:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "9350:16:13"
                                            },
                                            "nativeSrc": "9350:18:13",
                                            "nodeType": "YulFunctionCall",
                                            "src": "9350:18:13"
                                          },
                                          "nativeSrc": "9350:18:13",
                                          "nodeType": "YulExpressionStatement",
                                          "src": "9350:18:13"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nativeSrc": "9326:4:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "9326:4:13"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "max",
                                              "nativeSrc": "9336:3:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "9336:3:13"
                                            },
                                            {
                                              "name": "base",
                                              "nativeSrc": "9341:4:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "9341:4:13"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "div",
                                            "nativeSrc": "9332:3:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "9332:3:13"
                                          },
                                          "nativeSrc": "9332:14:13",
                                          "nodeType": "YulFunctionCall",
                                          "src": "9332:14:13"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "gt",
                                        "nativeSrc": "9323:2:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "9323:2:13"
                                      },
                                      "nativeSrc": "9323:24:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "9323:24:13"
                                    },
                                    "nativeSrc": "9320:50:13",
                                    "nodeType": "YulIf",
                                    "src": "9320:50:13"
                                  },
                                  {
                                    "body": {
                                      "nativeSrc": "9403:29:13",
                                      "nodeType": "YulBlock",
                                      "src": "9403:29:13",
                                      "statements": [
                                        {
                                          "nativeSrc": "9405:25:13",
                                          "nodeType": "YulAssignment",
                                          "src": "9405:25:13",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "power",
                                                "nativeSrc": "9418:5:13",
                                                "nodeType": "YulIdentifier",
                                                "src": "9418:5:13"
                                              },
                                              {
                                                "name": "base",
                                                "nativeSrc": "9425:4:13",
                                                "nodeType": "YulIdentifier",
                                                "src": "9425:4:13"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mul",
                                              "nativeSrc": "9414:3:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "9414:3:13"
                                            },
                                            "nativeSrc": "9414:16:13",
                                            "nodeType": "YulFunctionCall",
                                            "src": "9414:16:13"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "power",
                                              "nativeSrc": "9405:5:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "9405:5:13"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "exponent",
                                          "nativeSrc": "9390:8:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "9390:8:13"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "9400:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "9400:1:13",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nativeSrc": "9386:3:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "9386:3:13"
                                      },
                                      "nativeSrc": "9386:16:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "9386:16:13"
                                    },
                                    "nativeSrc": "9383:49:13",
                                    "nodeType": "YulIf",
                                    "src": "9383:49:13"
                                  },
                                  {
                                    "nativeSrc": "9445:23:13",
                                    "nodeType": "YulAssignment",
                                    "src": "9445:23:13",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nativeSrc": "9457:4:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "9457:4:13"
                                        },
                                        {
                                          "name": "base",
                                          "nativeSrc": "9463:4:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "9463:4:13"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mul",
                                        "nativeSrc": "9453:3:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "9453:3:13"
                                      },
                                      "nativeSrc": "9453:15:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "9453:15:13"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "base",
                                        "nativeSrc": "9445:4:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "9445:4:13"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "9481:28:13",
                                    "nodeType": "YulAssignment",
                                    "src": "9481:28:13",
                                    "value": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "9497:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "9497:1:13",
                                          "type": "",
                                          "value": "1"
                                        },
                                        {
                                          "name": "exponent",
                                          "nativeSrc": "9500:8:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "9500:8:13"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shr",
                                        "nativeSrc": "9493:3:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "9493:3:13"
                                      },
                                      "nativeSrc": "9493:16:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "9493:16:13"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "exponent",
                                        "nativeSrc": "9481:8:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "9481:8:13"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nativeSrc": "9281:8:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "9281:8:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9291:1:13",
                                    "nodeType": "YulLiteral",
                                    "src": "9291:1:13",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "9278:2:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "9278:2:13"
                                },
                                "nativeSrc": "9278:15:13",
                                "nodeType": "YulFunctionCall",
                                "src": "9278:15:13"
                              },
                              "nativeSrc": "9270:249:13",
                              "nodeType": "YulForLoop",
                              "post": {
                                "nativeSrc": "9294:3:13",
                                "nodeType": "YulBlock",
                                "src": "9294:3:13",
                                "statements": []
                              },
                              "pre": {
                                "nativeSrc": "9274:3:13",
                                "nodeType": "YulBlock",
                                "src": "9274:3:13",
                                "statements": []
                              },
                              "src": "9270:249:13"
                            }
                          ]
                        },
                        "name": "checked_exp_helper",
                        "nativeSrc": "9150:375:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "_base",
                            "nativeSrc": "9178:5:13",
                            "nodeType": "YulTypedName",
                            "src": "9178:5:13",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nativeSrc": "9185:8:13",
                            "nodeType": "YulTypedName",
                            "src": "9185:8:13",
                            "type": ""
                          },
                          {
                            "name": "max",
                            "nativeSrc": "9195:3:13",
                            "nodeType": "YulTypedName",
                            "src": "9195:3:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nativeSrc": "9203:5:13",
                            "nodeType": "YulTypedName",
                            "src": "9203:5:13",
                            "type": ""
                          },
                          {
                            "name": "base",
                            "nativeSrc": "9210:4:13",
                            "nodeType": "YulTypedName",
                            "src": "9210:4:13",
                            "type": ""
                          }
                        ],
                        "src": "9150:375:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "9589:843:13",
                          "nodeType": "YulBlock",
                          "src": "9589:843:13",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "9627:52:13",
                                "nodeType": "YulBlock",
                                "src": "9627:52:13",
                                "statements": [
                                  {
                                    "nativeSrc": "9641:10:13",
                                    "nodeType": "YulAssignment",
                                    "src": "9641:10:13",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "9650:1:13",
                                      "nodeType": "YulLiteral",
                                      "src": "9650:1:13",
                                      "type": "",
                                      "value": "1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nativeSrc": "9641:5:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "9641:5:13"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "9664:5:13",
                                    "nodeType": "YulLeave",
                                    "src": "9664:5:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nativeSrc": "9609:8:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "9609:8:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "9602:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "9602:6:13"
                                },
                                "nativeSrc": "9602:16:13",
                                "nodeType": "YulFunctionCall",
                                "src": "9602:16:13"
                              },
                              "nativeSrc": "9599:80:13",
                              "nodeType": "YulIf",
                              "src": "9599:80:13"
                            },
                            {
                              "body": {
                                "nativeSrc": "9712:52:13",
                                "nodeType": "YulBlock",
                                "src": "9712:52:13",
                                "statements": [
                                  {
                                    "nativeSrc": "9726:10:13",
                                    "nodeType": "YulAssignment",
                                    "src": "9726:10:13",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "9735:1:13",
                                      "nodeType": "YulLiteral",
                                      "src": "9735:1:13",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nativeSrc": "9726:5:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "9726:5:13"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "9749:5:13",
                                    "nodeType": "YulLeave",
                                    "src": "9749:5:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nativeSrc": "9698:4:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "9698:4:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "9691:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "9691:6:13"
                                },
                                "nativeSrc": "9691:12:13",
                                "nodeType": "YulFunctionCall",
                                "src": "9691:12:13"
                              },
                              "nativeSrc": "9688:76:13",
                              "nodeType": "YulIf",
                              "src": "9688:76:13"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nativeSrc": "9800:52:13",
                                    "nodeType": "YulBlock",
                                    "src": "9800:52:13",
                                    "statements": [
                                      {
                                        "nativeSrc": "9814:10:13",
                                        "nodeType": "YulAssignment",
                                        "src": "9814:10:13",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "9823:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "9823:1:13",
                                          "type": "",
                                          "value": "1"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nativeSrc": "9814:5:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "9814:5:13"
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "9837:5:13",
                                        "nodeType": "YulLeave",
                                        "src": "9837:5:13"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "9793:59:13",
                                  "nodeType": "YulCase",
                                  "src": "9793:59:13",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "9798:1:13",
                                    "nodeType": "YulLiteral",
                                    "src": "9798:1:13",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nativeSrc": "9868:167:13",
                                    "nodeType": "YulBlock",
                                    "src": "9868:167:13",
                                    "statements": [
                                      {
                                        "body": {
                                          "nativeSrc": "9903:22:13",
                                          "nodeType": "YulBlock",
                                          "src": "9903:22:13",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "panic_error_0x11",
                                                  "nativeSrc": "9905:16:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "9905:16:13"
                                                },
                                                "nativeSrc": "9905:18:13",
                                                "nodeType": "YulFunctionCall",
                                                "src": "9905:18:13"
                                              },
                                              "nativeSrc": "9905:18:13",
                                              "nodeType": "YulExpressionStatement",
                                              "src": "9905:18:13"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "exponent",
                                              "nativeSrc": "9888:8:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "9888:8:13"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "9898:3:13",
                                              "nodeType": "YulLiteral",
                                              "src": "9898:3:13",
                                              "type": "",
                                              "value": "255"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "gt",
                                            "nativeSrc": "9885:2:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "9885:2:13"
                                          },
                                          "nativeSrc": "9885:17:13",
                                          "nodeType": "YulFunctionCall",
                                          "src": "9885:17:13"
                                        },
                                        "nativeSrc": "9882:43:13",
                                        "nodeType": "YulIf",
                                        "src": "9882:43:13"
                                      },
                                      {
                                        "nativeSrc": "9938:25:13",
                                        "nodeType": "YulAssignment",
                                        "src": "9938:25:13",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "exponent",
                                              "nativeSrc": "9951:8:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "9951:8:13"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "9961:1:13",
                                              "nodeType": "YulLiteral",
                                              "src": "9961:1:13",
                                              "type": "",
                                              "value": "1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nativeSrc": "9947:3:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "9947:3:13"
                                          },
                                          "nativeSrc": "9947:16:13",
                                          "nodeType": "YulFunctionCall",
                                          "src": "9947:16:13"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nativeSrc": "9938:5:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "9938:5:13"
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "9976:11:13",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "9976:11:13",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "9986:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "9986:1:13",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "_1",
                                            "nativeSrc": "9980:2:13",
                                            "nodeType": "YulTypedName",
                                            "src": "9980:2:13",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "10000:7:13",
                                        "nodeType": "YulAssignment",
                                        "src": "10000:7:13",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "10006:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "10006:1:13",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "_1",
                                            "nativeSrc": "10000:2:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "10000:2:13"
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "10020:5:13",
                                        "nodeType": "YulLeave",
                                        "src": "10020:5:13"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "9861:174:13",
                                  "nodeType": "YulCase",
                                  "src": "9861:174:13",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "9866:1:13",
                                    "nodeType": "YulLiteral",
                                    "src": "9866:1:13",
                                    "type": "",
                                    "value": "2"
                                  }
                                }
                              ],
                              "expression": {
                                "name": "base",
                                "nativeSrc": "9780:4:13",
                                "nodeType": "YulIdentifier",
                                "src": "9780:4:13"
                              },
                              "nativeSrc": "9773:262:13",
                              "nodeType": "YulSwitch",
                              "src": "9773:262:13"
                            },
                            {
                              "body": {
                                "nativeSrc": "10133:114:13",
                                "nodeType": "YulBlock",
                                "src": "10133:114:13",
                                "statements": [
                                  {
                                    "nativeSrc": "10147:28:13",
                                    "nodeType": "YulAssignment",
                                    "src": "10147:28:13",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nativeSrc": "10160:4:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "10160:4:13"
                                        },
                                        {
                                          "name": "exponent",
                                          "nativeSrc": "10166:8:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "10166:8:13"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "exp",
                                        "nativeSrc": "10156:3:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "10156:3:13"
                                      },
                                      "nativeSrc": "10156:19:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "10156:19:13"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nativeSrc": "10147:5:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "10147:5:13"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "10188:11:13",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "10188:11:13",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "10198:1:13",
                                      "nodeType": "YulLiteral",
                                      "src": "10198:1:13",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "_2",
                                        "nativeSrc": "10192:2:13",
                                        "nodeType": "YulTypedName",
                                        "src": "10192:2:13",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "10212:7:13",
                                    "nodeType": "YulAssignment",
                                    "src": "10212:7:13",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "10218:1:13",
                                      "nodeType": "YulLiteral",
                                      "src": "10218:1:13",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "_2",
                                        "nativeSrc": "10212:2:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "10212:2:13"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "10232:5:13",
                                    "nodeType": "YulLeave",
                                    "src": "10232:5:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nativeSrc": "10057:4:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "10057:4:13"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "10063:2:13",
                                            "nodeType": "YulLiteral",
                                            "src": "10063:2:13",
                                            "type": "",
                                            "value": "11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "10054:2:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "10054:2:13"
                                        },
                                        "nativeSrc": "10054:12:13",
                                        "nodeType": "YulFunctionCall",
                                        "src": "10054:12:13"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nativeSrc": "10071:8:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "10071:8:13"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "10081:2:13",
                                            "nodeType": "YulLiteral",
                                            "src": "10081:2:13",
                                            "type": "",
                                            "value": "78"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "10068:2:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "10068:2:13"
                                        },
                                        "nativeSrc": "10068:16:13",
                                        "nodeType": "YulFunctionCall",
                                        "src": "10068:16:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "10050:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "10050:3:13"
                                    },
                                    "nativeSrc": "10050:35:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "10050:35:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nativeSrc": "10094:4:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "10094:4:13"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "10100:3:13",
                                            "nodeType": "YulLiteral",
                                            "src": "10100:3:13",
                                            "type": "",
                                            "value": "307"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "10091:2:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "10091:2:13"
                                        },
                                        "nativeSrc": "10091:13:13",
                                        "nodeType": "YulFunctionCall",
                                        "src": "10091:13:13"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nativeSrc": "10109:8:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "10109:8:13"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "10119:2:13",
                                            "nodeType": "YulLiteral",
                                            "src": "10119:2:13",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "10106:2:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "10106:2:13"
                                        },
                                        "nativeSrc": "10106:16:13",
                                        "nodeType": "YulFunctionCall",
                                        "src": "10106:16:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "10087:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "10087:3:13"
                                    },
                                    "nativeSrc": "10087:36:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "10087:36:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nativeSrc": "10047:2:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "10047:2:13"
                                },
                                "nativeSrc": "10047:77:13",
                                "nodeType": "YulFunctionCall",
                                "src": "10047:77:13"
                              },
                              "nativeSrc": "10044:203:13",
                              "nodeType": "YulIf",
                              "src": "10044:203:13"
                            },
                            {
                              "nativeSrc": "10256:65:13",
                              "nodeType": "YulVariableDeclaration",
                              "src": "10256:65:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nativeSrc": "10298:4:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "10298:4:13"
                                  },
                                  {
                                    "name": "exponent",
                                    "nativeSrc": "10304:8:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "10304:8:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "10318:1:13",
                                        "nodeType": "YulLiteral",
                                        "src": "10318:1:13",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nativeSrc": "10314:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "10314:3:13"
                                    },
                                    "nativeSrc": "10314:6:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "10314:6:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_helper",
                                  "nativeSrc": "10279:18:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "10279:18:13"
                                },
                                "nativeSrc": "10279:42:13",
                                "nodeType": "YulFunctionCall",
                                "src": "10279:42:13"
                              },
                              "variables": [
                                {
                                  "name": "power_1",
                                  "nativeSrc": "10260:7:13",
                                  "nodeType": "YulTypedName",
                                  "src": "10260:7:13",
                                  "type": ""
                                },
                                {
                                  "name": "base_1",
                                  "nativeSrc": "10269:6:13",
                                  "nodeType": "YulTypedName",
                                  "src": "10269:6:13",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "10366:22:13",
                                "nodeType": "YulBlock",
                                "src": "10366:22:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "10368:16:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "10368:16:13"
                                      },
                                      "nativeSrc": "10368:18:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "10368:18:13"
                                    },
                                    "nativeSrc": "10368:18:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "10368:18:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "power_1",
                                    "nativeSrc": "10336:7:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "10336:7:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "10353:1:13",
                                            "nodeType": "YulLiteral",
                                            "src": "10353:1:13",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nativeSrc": "10349:3:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "10349:3:13"
                                        },
                                        "nativeSrc": "10349:6:13",
                                        "nodeType": "YulFunctionCall",
                                        "src": "10349:6:13"
                                      },
                                      {
                                        "name": "base_1",
                                        "nativeSrc": "10357:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "10357:6:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "div",
                                      "nativeSrc": "10345:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "10345:3:13"
                                    },
                                    "nativeSrc": "10345:19:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "10345:19:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "10333:2:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "10333:2:13"
                                },
                                "nativeSrc": "10333:32:13",
                                "nodeType": "YulFunctionCall",
                                "src": "10333:32:13"
                              },
                              "nativeSrc": "10330:58:13",
                              "nodeType": "YulIf",
                              "src": "10330:58:13"
                            },
                            {
                              "nativeSrc": "10397:29:13",
                              "nodeType": "YulAssignment",
                              "src": "10397:29:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power_1",
                                    "nativeSrc": "10410:7:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "10410:7:13"
                                  },
                                  {
                                    "name": "base_1",
                                    "nativeSrc": "10419:6:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "10419:6:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nativeSrc": "10406:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "10406:3:13"
                                },
                                "nativeSrc": "10406:20:13",
                                "nodeType": "YulFunctionCall",
                                "src": "10406:20:13"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nativeSrc": "10397:5:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "10397:5:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_unsigned",
                        "nativeSrc": "9530:902:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nativeSrc": "9560:4:13",
                            "nodeType": "YulTypedName",
                            "src": "9560:4:13",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nativeSrc": "9566:8:13",
                            "nodeType": "YulTypedName",
                            "src": "9566:8:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nativeSrc": "9579:5:13",
                            "nodeType": "YulTypedName",
                            "src": "9579:5:13",
                            "type": ""
                          }
                        ],
                        "src": "9530:902:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "10505:72:13",
                          "nodeType": "YulBlock",
                          "src": "10505:72:13",
                          "statements": [
                            {
                              "nativeSrc": "10515:56:13",
                              "nodeType": "YulAssignment",
                              "src": "10515:56:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nativeSrc": "10545:4:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "10545:4:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "exponent",
                                        "nativeSrc": "10555:8:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "10555:8:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "10565:4:13",
                                        "nodeType": "YulLiteral",
                                        "src": "10565:4:13",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "10551:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "10551:3:13"
                                    },
                                    "nativeSrc": "10551:19:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "10551:19:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_unsigned",
                                  "nativeSrc": "10524:20:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "10524:20:13"
                                },
                                "nativeSrc": "10524:47:13",
                                "nodeType": "YulFunctionCall",
                                "src": "10524:47:13"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nativeSrc": "10515:5:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "10515:5:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_t_uint256_t_uint8",
                        "nativeSrc": "10437:140:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nativeSrc": "10476:4:13",
                            "nodeType": "YulTypedName",
                            "src": "10476:4:13",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nativeSrc": "10482:8:13",
                            "nodeType": "YulTypedName",
                            "src": "10482:8:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nativeSrc": "10495:5:13",
                            "nodeType": "YulTypedName",
                            "src": "10495:5:13",
                            "type": ""
                          }
                        ],
                        "src": "10437:140:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "10634:116:13",
                          "nodeType": "YulBlock",
                          "src": "10634:116:13",
                          "statements": [
                            {
                              "nativeSrc": "10644:20:13",
                              "nodeType": "YulAssignment",
                              "src": "10644:20:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "10659:1:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "10659:1:13"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "10662:1:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "10662:1:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nativeSrc": "10655:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "10655:3:13"
                                },
                                "nativeSrc": "10655:9:13",
                                "nodeType": "YulFunctionCall",
                                "src": "10655:9:13"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nativeSrc": "10644:7:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "10644:7:13"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "10722:22:13",
                                "nodeType": "YulBlock",
                                "src": "10722:22:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "10724:16:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "10724:16:13"
                                      },
                                      "nativeSrc": "10724:18:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "10724:18:13"
                                    },
                                    "nativeSrc": "10724:18:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "10724:18:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nativeSrc": "10693:1:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "10693:1:13"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nativeSrc": "10686:6:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "10686:6:13"
                                        },
                                        "nativeSrc": "10686:9:13",
                                        "nodeType": "YulFunctionCall",
                                        "src": "10686:9:13"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "y",
                                            "nativeSrc": "10700:1:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "10700:1:13"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "name": "product",
                                                "nativeSrc": "10707:7:13",
                                                "nodeType": "YulIdentifier",
                                                "src": "10707:7:13"
                                              },
                                              {
                                                "name": "x",
                                                "nativeSrc": "10716:1:13",
                                                "nodeType": "YulIdentifier",
                                                "src": "10716:1:13"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "div",
                                              "nativeSrc": "10703:3:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "10703:3:13"
                                            },
                                            "nativeSrc": "10703:15:13",
                                            "nodeType": "YulFunctionCall",
                                            "src": "10703:15:13"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "eq",
                                          "nativeSrc": "10697:2:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "10697:2:13"
                                        },
                                        "nativeSrc": "10697:22:13",
                                        "nodeType": "YulFunctionCall",
                                        "src": "10697:22:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "or",
                                      "nativeSrc": "10683:2:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "10683:2:13"
                                    },
                                    "nativeSrc": "10683:37:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "10683:37:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "10676:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "10676:6:13"
                                },
                                "nativeSrc": "10676:45:13",
                                "nodeType": "YulFunctionCall",
                                "src": "10676:45:13"
                              },
                              "nativeSrc": "10673:71:13",
                              "nodeType": "YulIf",
                              "src": "10673:71:13"
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nativeSrc": "10582:168:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "10613:1:13",
                            "nodeType": "YulTypedName",
                            "src": "10613:1:13",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "10616:1:13",
                            "nodeType": "YulTypedName",
                            "src": "10616:1:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nativeSrc": "10622:7:13",
                            "nodeType": "YulTypedName",
                            "src": "10622:7:13",
                            "type": ""
                          }
                        ],
                        "src": "10582:168:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "10929:172:13",
                          "nodeType": "YulBlock",
                          "src": "10929:172:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "10946:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "10946:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "10957:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "10957:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "10939:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "10939:6:13"
                                },
                                "nativeSrc": "10939:21:13",
                                "nodeType": "YulFunctionCall",
                                "src": "10939:21:13"
                              },
                              "nativeSrc": "10939:21:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "10939:21:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "10980:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "10980:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "10991:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "10991:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "10976:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "10976:3:13"
                                    },
                                    "nativeSrc": "10976:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "10976:18:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "10996:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "10996:2:13",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "10969:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "10969:6:13"
                                },
                                "nativeSrc": "10969:30:13",
                                "nodeType": "YulFunctionCall",
                                "src": "10969:30:13"
                              },
                              "nativeSrc": "10969:30:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "10969:30:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "11019:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "11019:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "11030:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "11030:2:13",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "11015:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "11015:3:13"
                                    },
                                    "nativeSrc": "11015:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "11015:18:13"
                                  },
                                  {
                                    "hexValue": "4d696e74696e67206c696d6974206578636565646564",
                                    "kind": "string",
                                    "nativeSrc": "11035:24:13",
                                    "nodeType": "YulLiteral",
                                    "src": "11035:24:13",
                                    "type": "",
                                    "value": "Minting limit exceeded"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "11008:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "11008:6:13"
                                },
                                "nativeSrc": "11008:52:13",
                                "nodeType": "YulFunctionCall",
                                "src": "11008:52:13"
                              },
                              "nativeSrc": "11008:52:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "11008:52:13"
                            },
                            {
                              "nativeSrc": "11069:26:13",
                              "nodeType": "YulAssignment",
                              "src": "11069:26:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "11081:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "11081:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "11092:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "11092:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "11077:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "11077:3:13"
                                },
                                "nativeSrc": "11077:18:13",
                                "nodeType": "YulFunctionCall",
                                "src": "11077:18:13"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "11069:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "11069:4:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_5a56aca9391f1fa989756252b3eedac50c830c68a92d7f8bc00446bc8dd728b9__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "10755:346:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "10906:9:13",
                            "nodeType": "YulTypedName",
                            "src": "10906:9:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "10920:4:13",
                            "nodeType": "YulTypedName",
                            "src": "10920:4:13",
                            "type": ""
                          }
                        ],
                        "src": "10755:346:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "11280:175:13",
                          "nodeType": "YulBlock",
                          "src": "11280:175:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "11297:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "11297:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "11308:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "11308:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "11290:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "11290:6:13"
                                },
                                "nativeSrc": "11290:21:13",
                                "nodeType": "YulFunctionCall",
                                "src": "11290:21:13"
                              },
                              "nativeSrc": "11290:21:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "11290:21:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "11331:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "11331:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "11342:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "11342:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "11327:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "11327:3:13"
                                    },
                                    "nativeSrc": "11327:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "11327:18:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "11347:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "11347:2:13",
                                    "type": "",
                                    "value": "25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "11320:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "11320:6:13"
                                },
                                "nativeSrc": "11320:30:13",
                                "nodeType": "YulFunctionCall",
                                "src": "11320:30:13"
                              },
                              "nativeSrc": "11320:30:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "11320:30:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "11370:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "11370:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "11381:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "11381:2:13",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "11366:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "11366:3:13"
                                    },
                                    "nativeSrc": "11366:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "11366:18:13"
                                  },
                                  {
                                    "hexValue": "4e6f7420612072656769737465726564206d65726368616e74",
                                    "kind": "string",
                                    "nativeSrc": "11386:27:13",
                                    "nodeType": "YulLiteral",
                                    "src": "11386:27:13",
                                    "type": "",
                                    "value": "Not a registered merchant"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "11359:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "11359:6:13"
                                },
                                "nativeSrc": "11359:55:13",
                                "nodeType": "YulFunctionCall",
                                "src": "11359:55:13"
                              },
                              "nativeSrc": "11359:55:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "11359:55:13"
                            },
                            {
                              "nativeSrc": "11423:26:13",
                              "nodeType": "YulAssignment",
                              "src": "11423:26:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "11435:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "11435:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "11446:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "11446:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "11431:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "11431:3:13"
                                },
                                "nativeSrc": "11431:18:13",
                                "nodeType": "YulFunctionCall",
                                "src": "11431:18:13"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "11423:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "11423:4:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_3dc561c043b7bbf10378c02b4bdb83aba886793b5fccfadedca9560c9bcf4554__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "11106:349:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "11257:9:13",
                            "nodeType": "YulTypedName",
                            "src": "11257:9:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "11271:4:13",
                            "nodeType": "YulTypedName",
                            "src": "11271:4:13",
                            "type": ""
                          }
                        ],
                        "src": "11106:349:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "11634:224:13",
                          "nodeType": "YulBlock",
                          "src": "11634:224:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "11651:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "11651:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "11662:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "11662:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "11644:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "11644:6:13"
                                },
                                "nativeSrc": "11644:21:13",
                                "nodeType": "YulFunctionCall",
                                "src": "11644:21:13"
                              },
                              "nativeSrc": "11644:21:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "11644:21:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "11685:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "11685:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "11696:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "11696:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "11681:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "11681:3:13"
                                    },
                                    "nativeSrc": "11681:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "11681:18:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "11701:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "11701:2:13",
                                    "type": "",
                                    "value": "34"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "11674:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "11674:6:13"
                                },
                                "nativeSrc": "11674:30:13",
                                "nodeType": "YulFunctionCall",
                                "src": "11674:30:13"
                              },
                              "nativeSrc": "11674:30:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "11674:30:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "11724:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "11724:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "11735:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "11735:2:13",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "11720:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "11720:3:13"
                                    },
                                    "nativeSrc": "11720:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "11720:18:13"
                                  },
                                  {
                                    "hexValue": "496e73756666696369656e742043616d707573204372656469742062616c616e",
                                    "kind": "string",
                                    "nativeSrc": "11740:34:13",
                                    "nodeType": "YulLiteral",
                                    "src": "11740:34:13",
                                    "type": "",
                                    "value": "Insufficient Campus Credit balan"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "11713:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "11713:6:13"
                                },
                                "nativeSrc": "11713:62:13",
                                "nodeType": "YulFunctionCall",
                                "src": "11713:62:13"
                              },
                              "nativeSrc": "11713:62:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "11713:62:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "11795:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "11795:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "11806:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "11806:2:13",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "11791:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "11791:3:13"
                                    },
                                    "nativeSrc": "11791:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "11791:18:13"
                                  },
                                  {
                                    "hexValue": "6365",
                                    "kind": "string",
                                    "nativeSrc": "11811:4:13",
                                    "nodeType": "YulLiteral",
                                    "src": "11811:4:13",
                                    "type": "",
                                    "value": "ce"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "11784:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "11784:6:13"
                                },
                                "nativeSrc": "11784:32:13",
                                "nodeType": "YulFunctionCall",
                                "src": "11784:32:13"
                              },
                              "nativeSrc": "11784:32:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "11784:32:13"
                            },
                            {
                              "nativeSrc": "11825:27:13",
                              "nodeType": "YulAssignment",
                              "src": "11825:27:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "11837:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "11837:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "11848:3:13",
                                    "nodeType": "YulLiteral",
                                    "src": "11848:3:13",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "11833:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "11833:3:13"
                                },
                                "nativeSrc": "11833:19:13",
                                "nodeType": "YulFunctionCall",
                                "src": "11833:19:13"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "11825:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "11825:4:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_5e171efca29268c8f7dc8b49a0bc6b73082696199ffa2d46cfb8da8065884ea7__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "11460:398:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "11611:9:13",
                            "nodeType": "YulTypedName",
                            "src": "11611:9:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "11625:4:13",
                            "nodeType": "YulTypedName",
                            "src": "11625:4:13",
                            "type": ""
                          }
                        ],
                        "src": "11460:398:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "12037:180:13",
                          "nodeType": "YulBlock",
                          "src": "12037:180:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "12054:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "12054:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "12065:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "12065:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "12047:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "12047:6:13"
                                },
                                "nativeSrc": "12047:21:13",
                                "nodeType": "YulFunctionCall",
                                "src": "12047:21:13"
                              },
                              "nativeSrc": "12047:21:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "12047:21:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "12088:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "12088:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "12099:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "12099:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "12084:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "12084:3:13"
                                    },
                                    "nativeSrc": "12084:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "12084:18:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "12104:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "12104:2:13",
                                    "type": "",
                                    "value": "30"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "12077:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "12077:6:13"
                                },
                                "nativeSrc": "12077:30:13",
                                "nodeType": "YulFunctionCall",
                                "src": "12077:30:13"
                              },
                              "nativeSrc": "12077:30:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "12077:30:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "12127:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "12127:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "12138:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "12138:2:13",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "12123:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "12123:3:13"
                                    },
                                    "nativeSrc": "12123:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "12123:18:13"
                                  },
                                  {
                                    "hexValue": "4461696c79206c696d6974206e6f742073657420666f722073656e646572",
                                    "kind": "string",
                                    "nativeSrc": "12143:32:13",
                                    "nodeType": "YulLiteral",
                                    "src": "12143:32:13",
                                    "type": "",
                                    "value": "Daily limit not set for sender"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "12116:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "12116:6:13"
                                },
                                "nativeSrc": "12116:60:13",
                                "nodeType": "YulFunctionCall",
                                "src": "12116:60:13"
                              },
                              "nativeSrc": "12116:60:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "12116:60:13"
                            },
                            {
                              "nativeSrc": "12185:26:13",
                              "nodeType": "YulAssignment",
                              "src": "12185:26:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "12197:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "12197:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "12208:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "12208:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "12193:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "12193:3:13"
                                },
                                "nativeSrc": "12193:18:13",
                                "nodeType": "YulFunctionCall",
                                "src": "12193:18:13"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "12185:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "12185:4:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_7df341e7dab656fd761183664b8736fe0983ccb8c343026c17b8695ea5ea5982__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "11863:354:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "12014:9:13",
                            "nodeType": "YulTypedName",
                            "src": "12014:9:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "12028:4:13",
                            "nodeType": "YulTypedName",
                            "src": "12028:4:13",
                            "type": ""
                          }
                        ],
                        "src": "11863:354:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "12268:171:13",
                          "nodeType": "YulBlock",
                          "src": "12268:171:13",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "12299:111:13",
                                "nodeType": "YulBlock",
                                "src": "12299:111:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "12320:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "12320:1:13",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "12327:3:13",
                                              "nodeType": "YulLiteral",
                                              "src": "12327:3:13",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "12332:10:13",
                                              "nodeType": "YulLiteral",
                                              "src": "12332:10:13",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nativeSrc": "12323:3:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "12323:3:13"
                                          },
                                          "nativeSrc": "12323:20:13",
                                          "nodeType": "YulFunctionCall",
                                          "src": "12323:20:13"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "12313:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "12313:6:13"
                                      },
                                      "nativeSrc": "12313:31:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "12313:31:13"
                                    },
                                    "nativeSrc": "12313:31:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12313:31:13"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "12364:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "12364:1:13",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "12367:4:13",
                                          "nodeType": "YulLiteral",
                                          "src": "12367:4:13",
                                          "type": "",
                                          "value": "0x12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "12357:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "12357:6:13"
                                      },
                                      "nativeSrc": "12357:15:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "12357:15:13"
                                    },
                                    "nativeSrc": "12357:15:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12357:15:13"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "12392:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "12392:1:13",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "12395:4:13",
                                          "nodeType": "YulLiteral",
                                          "src": "12395:4:13",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "12385:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "12385:6:13"
                                      },
                                      "nativeSrc": "12385:15:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "12385:15:13"
                                    },
                                    "nativeSrc": "12385:15:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12385:15:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nativeSrc": "12288:1:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "12288:1:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "12281:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "12281:6:13"
                                },
                                "nativeSrc": "12281:9:13",
                                "nodeType": "YulFunctionCall",
                                "src": "12281:9:13"
                              },
                              "nativeSrc": "12278:132:13",
                              "nodeType": "YulIf",
                              "src": "12278:132:13"
                            },
                            {
                              "nativeSrc": "12419:14:13",
                              "nodeType": "YulAssignment",
                              "src": "12419:14:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "12428:1:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "12428:1:13"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "12431:1:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "12431:1:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nativeSrc": "12424:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "12424:3:13"
                                },
                                "nativeSrc": "12424:9:13",
                                "nodeType": "YulFunctionCall",
                                "src": "12424:9:13"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nativeSrc": "12419:1:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "12419:1:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nativeSrc": "12222:217:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "12253:1:13",
                            "nodeType": "YulTypedName",
                            "src": "12253:1:13",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "12256:1:13",
                            "nodeType": "YulTypedName",
                            "src": "12256:1:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nativeSrc": "12262:1:13",
                            "nodeType": "YulTypedName",
                            "src": "12262:1:13",
                            "type": ""
                          }
                        ],
                        "src": "12222:217:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "12573:119:13",
                          "nodeType": "YulBlock",
                          "src": "12573:119:13",
                          "statements": [
                            {
                              "nativeSrc": "12583:26:13",
                              "nodeType": "YulAssignment",
                              "src": "12583:26:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "12595:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "12595:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "12606:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "12606:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "12591:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "12591:3:13"
                                },
                                "nativeSrc": "12591:18:13",
                                "nodeType": "YulFunctionCall",
                                "src": "12591:18:13"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "12583:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "12583:4:13"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "12625:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "12625:9:13"
                                  },
                                  {
                                    "name": "value0",
                                    "nativeSrc": "12636:6:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "12636:6:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "12618:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "12618:6:13"
                                },
                                "nativeSrc": "12618:25:13",
                                "nodeType": "YulFunctionCall",
                                "src": "12618:25:13"
                              },
                              "nativeSrc": "12618:25:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "12618:25:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "12663:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "12663:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "12674:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "12674:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "12659:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "12659:3:13"
                                    },
                                    "nativeSrc": "12659:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "12659:18:13"
                                  },
                                  {
                                    "name": "value1",
                                    "nativeSrc": "12679:6:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "12679:6:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "12652:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "12652:6:13"
                                },
                                "nativeSrc": "12652:34:13",
                                "nodeType": "YulFunctionCall",
                                "src": "12652:34:13"
                              },
                              "nativeSrc": "12652:34:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "12652:34:13"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                        "nativeSrc": "12444:248:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "12534:9:13",
                            "nodeType": "YulTypedName",
                            "src": "12534:9:13",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "12545:6:13",
                            "nodeType": "YulTypedName",
                            "src": "12545:6:13",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "12553:6:13",
                            "nodeType": "YulTypedName",
                            "src": "12553:6:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "12564:4:13",
                            "nodeType": "YulTypedName",
                            "src": "12564:4:13",
                            "type": ""
                          }
                        ],
                        "src": "12444:248:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "12871:174:13",
                          "nodeType": "YulBlock",
                          "src": "12871:174:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "12888:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "12888:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "12899:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "12899:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "12881:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "12881:6:13"
                                },
                                "nativeSrc": "12881:21:13",
                                "nodeType": "YulFunctionCall",
                                "src": "12881:21:13"
                              },
                              "nativeSrc": "12881:21:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "12881:21:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "12922:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "12922:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "12933:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "12933:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "12918:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "12918:3:13"
                                    },
                                    "nativeSrc": "12918:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "12918:18:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "12938:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "12938:2:13",
                                    "type": "",
                                    "value": "24"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "12911:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "12911:6:13"
                                },
                                "nativeSrc": "12911:30:13",
                                "nodeType": "YulFunctionCall",
                                "src": "12911:30:13"
                              },
                              "nativeSrc": "12911:30:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "12911:30:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "12961:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "12961:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "12972:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "12972:2:13",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "12957:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "12957:3:13"
                                    },
                                    "nativeSrc": "12957:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "12957:18:13"
                                  },
                                  {
                                    "hexValue": "496e76616c6964206d65726368616e742061646472657373",
                                    "kind": "string",
                                    "nativeSrc": "12977:26:13",
                                    "nodeType": "YulLiteral",
                                    "src": "12977:26:13",
                                    "type": "",
                                    "value": "Invalid merchant address"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "12950:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "12950:6:13"
                                },
                                "nativeSrc": "12950:54:13",
                                "nodeType": "YulFunctionCall",
                                "src": "12950:54:13"
                              },
                              "nativeSrc": "12950:54:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "12950:54:13"
                            },
                            {
                              "nativeSrc": "13013:26:13",
                              "nodeType": "YulAssignment",
                              "src": "13013:26:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "13025:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "13025:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "13036:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "13036:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "13021:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "13021:3:13"
                                },
                                "nativeSrc": "13021:18:13",
                                "nodeType": "YulFunctionCall",
                                "src": "13021:18:13"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "13013:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "13013:4:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9e97933809d36609dc0e60ec9fa94106f35937d2c2d362ba775655fdaa86bd8a__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "12697:348:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "12848:9:13",
                            "nodeType": "YulTypedName",
                            "src": "12848:9:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "12862:4:13",
                            "nodeType": "YulTypedName",
                            "src": "12862:4:13",
                            "type": ""
                          }
                        ],
                        "src": "12697:348:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "13224:179:13",
                          "nodeType": "YulBlock",
                          "src": "13224:179:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "13241:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "13241:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "13252:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "13252:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "13234:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "13234:6:13"
                                },
                                "nativeSrc": "13234:21:13",
                                "nodeType": "YulFunctionCall",
                                "src": "13234:21:13"
                              },
                              "nativeSrc": "13234:21:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "13234:21:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "13275:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "13275:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "13286:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "13286:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "13271:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "13271:3:13"
                                    },
                                    "nativeSrc": "13271:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "13271:18:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "13291:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "13291:2:13",
                                    "type": "",
                                    "value": "29"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "13264:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "13264:6:13"
                                },
                                "nativeSrc": "13264:30:13",
                                "nodeType": "YulFunctionCall",
                                "src": "13264:30:13"
                              },
                              "nativeSrc": "13264:30:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "13264:30:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "13314:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "13314:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "13325:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "13325:2:13",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "13310:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "13310:3:13"
                                    },
                                    "nativeSrc": "13310:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "13310:18:13"
                                  },
                                  {
                                    "hexValue": "4d65726368616e74206e616d652063616e6e6f7420626520656d707479",
                                    "kind": "string",
                                    "nativeSrc": "13330:31:13",
                                    "nodeType": "YulLiteral",
                                    "src": "13330:31:13",
                                    "type": "",
                                    "value": "Merchant name cannot be empty"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "13303:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "13303:6:13"
                                },
                                "nativeSrc": "13303:59:13",
                                "nodeType": "YulFunctionCall",
                                "src": "13303:59:13"
                              },
                              "nativeSrc": "13303:59:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "13303:59:13"
                            },
                            {
                              "nativeSrc": "13371:26:13",
                              "nodeType": "YulAssignment",
                              "src": "13371:26:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "13383:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "13383:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "13394:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "13394:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "13379:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "13379:3:13"
                                },
                                "nativeSrc": "13379:18:13",
                                "nodeType": "YulFunctionCall",
                                "src": "13379:18:13"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "13371:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "13371:4:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_f53a24e56c3d863b5ed56a4089a9290fc00844c63109070e1d585d687f90ed4c__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "13050:353:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "13201:9:13",
                            "nodeType": "YulTypedName",
                            "src": "13201:9:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "13215:4:13",
                            "nodeType": "YulTypedName",
                            "src": "13215:4:13",
                            "type": ""
                          }
                        ],
                        "src": "13050:353:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "13582:177:13",
                          "nodeType": "YulBlock",
                          "src": "13582:177:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "13599:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "13599:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "13610:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "13610:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "13592:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "13592:6:13"
                                },
                                "nativeSrc": "13592:21:13",
                                "nodeType": "YulFunctionCall",
                                "src": "13592:21:13"
                              },
                              "nativeSrc": "13592:21:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "13592:21:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "13633:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "13633:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "13644:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "13644:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "13629:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "13629:3:13"
                                    },
                                    "nativeSrc": "13629:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "13629:18:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "13649:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "13649:2:13",
                                    "type": "",
                                    "value": "27"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "13622:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "13622:6:13"
                                },
                                "nativeSrc": "13622:30:13",
                                "nodeType": "YulFunctionCall",
                                "src": "13622:30:13"
                              },
                              "nativeSrc": "13622:30:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "13622:30:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "13672:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "13672:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "13683:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "13683:2:13",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "13668:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "13668:3:13"
                                    },
                                    "nativeSrc": "13668:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "13668:18:13"
                                  },
                                  {
                                    "hexValue": "4d65726368616e7420616c72656164792072656769737465726564",
                                    "kind": "string",
                                    "nativeSrc": "13688:29:13",
                                    "nodeType": "YulLiteral",
                                    "src": "13688:29:13",
                                    "type": "",
                                    "value": "Merchant already registered"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "13661:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "13661:6:13"
                                },
                                "nativeSrc": "13661:57:13",
                                "nodeType": "YulFunctionCall",
                                "src": "13661:57:13"
                              },
                              "nativeSrc": "13661:57:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "13661:57:13"
                            },
                            {
                              "nativeSrc": "13727:26:13",
                              "nodeType": "YulAssignment",
                              "src": "13727:26:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "13739:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "13739:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "13750:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "13750:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "13735:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "13735:3:13"
                                },
                                "nativeSrc": "13735:18:13",
                                "nodeType": "YulFunctionCall",
                                "src": "13735:18:13"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "13727:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "13727:4:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_dee17f4db42edcb0841b61c9c04adb525cc97e27b4a06dec39b87ce8db6596f2__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "13408:351:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "13559:9:13",
                            "nodeType": "YulTypedName",
                            "src": "13559:9:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "13573:4:13",
                            "nodeType": "YulTypedName",
                            "src": "13573:4:13",
                            "type": ""
                          }
                        ],
                        "src": "13408:351:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "13820:65:13",
                          "nodeType": "YulBlock",
                          "src": "13820:65:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "13837:1:13",
                                    "nodeType": "YulLiteral",
                                    "src": "13837:1:13",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "ptr",
                                    "nativeSrc": "13840:3:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "13840:3:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "13830:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "13830:6:13"
                                },
                                "nativeSrc": "13830:14:13",
                                "nodeType": "YulFunctionCall",
                                "src": "13830:14:13"
                              },
                              "nativeSrc": "13830:14:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "13830:14:13"
                            },
                            {
                              "nativeSrc": "13853:26:13",
                              "nodeType": "YulAssignment",
                              "src": "13853:26:13",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "13871:1:13",
                                    "nodeType": "YulLiteral",
                                    "src": "13871:1:13",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "13874:4:13",
                                    "nodeType": "YulLiteral",
                                    "src": "13874:4:13",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "keccak256",
                                  "nativeSrc": "13861:9:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "13861:9:13"
                                },
                                "nativeSrc": "13861:18:13",
                                "nodeType": "YulFunctionCall",
                                "src": "13861:18:13"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nativeSrc": "13853:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "13853:4:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_string_storage",
                        "nativeSrc": "13764:121:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nativeSrc": "13803:3:13",
                            "nodeType": "YulTypedName",
                            "src": "13803:3:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nativeSrc": "13811:4:13",
                            "nodeType": "YulTypedName",
                            "src": "13811:4:13",
                            "type": ""
                          }
                        ],
                        "src": "13764:121:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "13971:437:13",
                          "nodeType": "YulBlock",
                          "src": "13971:437:13",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "14004:398:13",
                                "nodeType": "YulBlock",
                                "src": "14004:398:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "14025:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "14025:1:13",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "name": "array",
                                          "nativeSrc": "14028:5:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "14028:5:13"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "14018:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "14018:6:13"
                                      },
                                      "nativeSrc": "14018:16:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "14018:16:13"
                                    },
                                    "nativeSrc": "14018:16:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14018:16:13"
                                  },
                                  {
                                    "nativeSrc": "14047:30:13",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "14047:30:13",
                                    "value": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "14069:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "14069:1:13",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "14072:4:13",
                                          "nodeType": "YulLiteral",
                                          "src": "14072:4:13",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "keccak256",
                                        "nativeSrc": "14059:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "14059:9:13"
                                      },
                                      "nativeSrc": "14059:18:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "14059:18:13"
                                    },
                                    "variables": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "14051:4:13",
                                        "nodeType": "YulTypedName",
                                        "src": "14051:4:13",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "14090:57:13",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "14090:57:13",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "data",
                                          "nativeSrc": "14113:4:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "14113:4:13"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "14123:1:13",
                                              "nodeType": "YulLiteral",
                                              "src": "14123:1:13",
                                              "type": "",
                                              "value": "5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "startIndex",
                                                  "nativeSrc": "14130:10:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "14130:10:13"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "14142:2:13",
                                                  "nodeType": "YulLiteral",
                                                  "src": "14142:2:13",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "14126:3:13",
                                                "nodeType": "YulIdentifier",
                                                "src": "14126:3:13"
                                              },
                                              "nativeSrc": "14126:19:13",
                                              "nodeType": "YulFunctionCall",
                                              "src": "14126:19:13"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shr",
                                            "nativeSrc": "14119:3:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "14119:3:13"
                                          },
                                          "nativeSrc": "14119:27:13",
                                          "nodeType": "YulFunctionCall",
                                          "src": "14119:27:13"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "14109:3:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "14109:3:13"
                                      },
                                      "nativeSrc": "14109:38:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "14109:38:13"
                                    },
                                    "variables": [
                                      {
                                        "name": "deleteStart",
                                        "nativeSrc": "14094:11:13",
                                        "nodeType": "YulTypedName",
                                        "src": "14094:11:13",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nativeSrc": "14184:23:13",
                                      "nodeType": "YulBlock",
                                      "src": "14184:23:13",
                                      "statements": [
                                        {
                                          "nativeSrc": "14186:19:13",
                                          "nodeType": "YulAssignment",
                                          "src": "14186:19:13",
                                          "value": {
                                            "name": "data",
                                            "nativeSrc": "14201:4:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "14201:4:13"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "deleteStart",
                                              "nativeSrc": "14186:11:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "14186:11:13"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "startIndex",
                                          "nativeSrc": "14166:10:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "14166:10:13"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "14178:4:13",
                                          "nodeType": "YulLiteral",
                                          "src": "14178:4:13",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nativeSrc": "14163:2:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "14163:2:13"
                                      },
                                      "nativeSrc": "14163:20:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "14163:20:13"
                                    },
                                    "nativeSrc": "14160:47:13",
                                    "nodeType": "YulIf",
                                    "src": "14160:47:13"
                                  },
                                  {
                                    "nativeSrc": "14220:41:13",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "14220:41:13",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "data",
                                          "nativeSrc": "14234:4:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "14234:4:13"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "14244:1:13",
                                              "nodeType": "YulLiteral",
                                              "src": "14244:1:13",
                                              "type": "",
                                              "value": "5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "len",
                                                  "nativeSrc": "14251:3:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "14251:3:13"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "14256:2:13",
                                                  "nodeType": "YulLiteral",
                                                  "src": "14256:2:13",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "14247:3:13",
                                                "nodeType": "YulIdentifier",
                                                "src": "14247:3:13"
                                              },
                                              "nativeSrc": "14247:12:13",
                                              "nodeType": "YulFunctionCall",
                                              "src": "14247:12:13"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shr",
                                            "nativeSrc": "14240:3:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "14240:3:13"
                                          },
                                          "nativeSrc": "14240:20:13",
                                          "nodeType": "YulFunctionCall",
                                          "src": "14240:20:13"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "14230:3:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "14230:3:13"
                                      },
                                      "nativeSrc": "14230:31:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "14230:31:13"
                                    },
                                    "variables": [
                                      {
                                        "name": "_1",
                                        "nativeSrc": "14224:2:13",
                                        "nodeType": "YulTypedName",
                                        "src": "14224:2:13",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "14274:24:13",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "14274:24:13",
                                    "value": {
                                      "name": "deleteStart",
                                      "nativeSrc": "14287:11:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "14287:11:13"
                                    },
                                    "variables": [
                                      {
                                        "name": "start",
                                        "nativeSrc": "14278:5:13",
                                        "nodeType": "YulTypedName",
                                        "src": "14278:5:13",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nativeSrc": "14372:20:13",
                                      "nodeType": "YulBlock",
                                      "src": "14372:20:13",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "start",
                                                "nativeSrc": "14381:5:13",
                                                "nodeType": "YulIdentifier",
                                                "src": "14381:5:13"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "14388:1:13",
                                                "nodeType": "YulLiteral",
                                                "src": "14388:1:13",
                                                "type": "",
                                                "value": "0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sstore",
                                              "nativeSrc": "14374:6:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "14374:6:13"
                                            },
                                            "nativeSrc": "14374:16:13",
                                            "nodeType": "YulFunctionCall",
                                            "src": "14374:16:13"
                                          },
                                          "nativeSrc": "14374:16:13",
                                          "nodeType": "YulExpressionStatement",
                                          "src": "14374:16:13"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "start",
                                          "nativeSrc": "14322:5:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "14322:5:13"
                                        },
                                        {
                                          "name": "_1",
                                          "nativeSrc": "14329:2:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "14329:2:13"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nativeSrc": "14319:2:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "14319:2:13"
                                      },
                                      "nativeSrc": "14319:13:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "14319:13:13"
                                    },
                                    "nativeSrc": "14311:81:13",
                                    "nodeType": "YulForLoop",
                                    "post": {
                                      "nativeSrc": "14333:26:13",
                                      "nodeType": "YulBlock",
                                      "src": "14333:26:13",
                                      "statements": [
                                        {
                                          "nativeSrc": "14335:22:13",
                                          "nodeType": "YulAssignment",
                                          "src": "14335:22:13",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "start",
                                                "nativeSrc": "14348:5:13",
                                                "nodeType": "YulIdentifier",
                                                "src": "14348:5:13"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "14355:1:13",
                                                "nodeType": "YulLiteral",
                                                "src": "14355:1:13",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nativeSrc": "14344:3:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "14344:3:13"
                                            },
                                            "nativeSrc": "14344:13:13",
                                            "nodeType": "YulFunctionCall",
                                            "src": "14344:13:13"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "start",
                                              "nativeSrc": "14335:5:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "14335:5:13"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "pre": {
                                      "nativeSrc": "14315:3:13",
                                      "nodeType": "YulBlock",
                                      "src": "14315:3:13",
                                      "statements": []
                                    },
                                    "src": "14311:81:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "len",
                                    "nativeSrc": "13987:3:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "13987:3:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "13992:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "13992:2:13",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "13984:2:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "13984:2:13"
                                },
                                "nativeSrc": "13984:11:13",
                                "nodeType": "YulFunctionCall",
                                "src": "13984:11:13"
                              },
                              "nativeSrc": "13981:421:13",
                              "nodeType": "YulIf",
                              "src": "13981:421:13"
                            }
                          ]
                        },
                        "name": "clean_up_bytearray_end_slots_string_storage",
                        "nativeSrc": "13890:518:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "array",
                            "nativeSrc": "13943:5:13",
                            "nodeType": "YulTypedName",
                            "src": "13943:5:13",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nativeSrc": "13950:3:13",
                            "nodeType": "YulTypedName",
                            "src": "13950:3:13",
                            "type": ""
                          },
                          {
                            "name": "startIndex",
                            "nativeSrc": "13955:10:13",
                            "nodeType": "YulTypedName",
                            "src": "13955:10:13",
                            "type": ""
                          }
                        ],
                        "src": "13890:518:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "14498:81:13",
                          "nodeType": "YulBlock",
                          "src": "14498:81:13",
                          "statements": [
                            {
                              "nativeSrc": "14508:65:13",
                              "nodeType": "YulAssignment",
                              "src": "14508:65:13",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "14523:4:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "14523:4:13"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "14541:1:13",
                                                    "nodeType": "YulLiteral",
                                                    "src": "14541:1:13",
                                                    "type": "",
                                                    "value": "3"
                                                  },
                                                  {
                                                    "name": "len",
                                                    "nativeSrc": "14544:3:13",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "14544:3:13"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "14537:3:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "14537:3:13"
                                                },
                                                "nativeSrc": "14537:11:13",
                                                "nodeType": "YulFunctionCall",
                                                "src": "14537:11:13"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "14554:1:13",
                                                    "nodeType": "YulLiteral",
                                                    "src": "14554:1:13",
                                                    "type": "",
                                                    "value": "0"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "not",
                                                  "nativeSrc": "14550:3:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "14550:3:13"
                                                },
                                                "nativeSrc": "14550:6:13",
                                                "nodeType": "YulFunctionCall",
                                                "src": "14550:6:13"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shr",
                                              "nativeSrc": "14533:3:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "14533:3:13"
                                            },
                                            "nativeSrc": "14533:24:13",
                                            "nodeType": "YulFunctionCall",
                                            "src": "14533:24:13"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nativeSrc": "14529:3:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "14529:3:13"
                                        },
                                        "nativeSrc": "14529:29:13",
                                        "nodeType": "YulFunctionCall",
                                        "src": "14529:29:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "14519:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "14519:3:13"
                                    },
                                    "nativeSrc": "14519:40:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "14519:40:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "14565:1:13",
                                        "nodeType": "YulLiteral",
                                        "src": "14565:1:13",
                                        "type": "",
                                        "value": "1"
                                      },
                                      {
                                        "name": "len",
                                        "nativeSrc": "14568:3:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "14568:3:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "14561:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "14561:3:13"
                                    },
                                    "nativeSrc": "14561:11:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "14561:11:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nativeSrc": "14516:2:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "14516:2:13"
                                },
                                "nativeSrc": "14516:57:13",
                                "nodeType": "YulFunctionCall",
                                "src": "14516:57:13"
                              },
                              "variableNames": [
                                {
                                  "name": "used",
                                  "nativeSrc": "14508:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "14508:4:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "extract_used_part_and_set_length_of_short_byte_array",
                        "nativeSrc": "14413:166:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nativeSrc": "14475:4:13",
                            "nodeType": "YulTypedName",
                            "src": "14475:4:13",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nativeSrc": "14481:3:13",
                            "nodeType": "YulTypedName",
                            "src": "14481:3:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "used",
                            "nativeSrc": "14489:4:13",
                            "nodeType": "YulTypedName",
                            "src": "14489:4:13",
                            "type": ""
                          }
                        ],
                        "src": "14413:166:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "14680:1203:13",
                          "nodeType": "YulBlock",
                          "src": "14680:1203:13",
                          "statements": [
                            {
                              "nativeSrc": "14690:24:13",
                              "nodeType": "YulVariableDeclaration",
                              "src": "14690:24:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nativeSrc": "14710:3:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "14710:3:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "14704:5:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "14704:5:13"
                                },
                                "nativeSrc": "14704:10:13",
                                "nodeType": "YulFunctionCall",
                                "src": "14704:10:13"
                              },
                              "variables": [
                                {
                                  "name": "newLen",
                                  "nativeSrc": "14694:6:13",
                                  "nodeType": "YulTypedName",
                                  "src": "14694:6:13",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "14757:22:13",
                                "nodeType": "YulBlock",
                                "src": "14757:22:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nativeSrc": "14759:16:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "14759:16:13"
                                      },
                                      "nativeSrc": "14759:18:13",
                                      "nodeType": "YulFunctionCall",
                                      "src": "14759:18:13"
                                    },
                                    "nativeSrc": "14759:18:13",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14759:18:13"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nativeSrc": "14729:6:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "14729:6:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "14737:18:13",
                                    "nodeType": "YulLiteral",
                                    "src": "14737:18:13",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "14726:2:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "14726:2:13"
                                },
                                "nativeSrc": "14726:30:13",
                                "nodeType": "YulFunctionCall",
                                "src": "14726:30:13"
                              },
                              "nativeSrc": "14723:56:13",
                              "nodeType": "YulIf",
                              "src": "14723:56:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nativeSrc": "14832:4:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "14832:4:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "slot",
                                            "nativeSrc": "14870:4:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "14870:4:13"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sload",
                                          "nativeSrc": "14864:5:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "14864:5:13"
                                        },
                                        "nativeSrc": "14864:11:13",
                                        "nodeType": "YulFunctionCall",
                                        "src": "14864:11:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "extract_byte_array_length",
                                      "nativeSrc": "14838:25:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "14838:25:13"
                                    },
                                    "nativeSrc": "14838:38:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "14838:38:13"
                                  },
                                  {
                                    "name": "newLen",
                                    "nativeSrc": "14878:6:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "14878:6:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "clean_up_bytearray_end_slots_string_storage",
                                  "nativeSrc": "14788:43:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "14788:43:13"
                                },
                                "nativeSrc": "14788:97:13",
                                "nodeType": "YulFunctionCall",
                                "src": "14788:97:13"
                              },
                              "nativeSrc": "14788:97:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "14788:97:13"
                            },
                            {
                              "nativeSrc": "14894:18:13",
                              "nodeType": "YulVariableDeclaration",
                              "src": "14894:18:13",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "14911:1:13",
                                "nodeType": "YulLiteral",
                                "src": "14911:1:13",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "srcOffset",
                                  "nativeSrc": "14898:9:13",
                                  "nodeType": "YulTypedName",
                                  "src": "14898:9:13",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "14921:17:13",
                              "nodeType": "YulAssignment",
                              "src": "14921:17:13",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "14934:4:13",
                                "nodeType": "YulLiteral",
                                "src": "14934:4:13",
                                "type": "",
                                "value": "0x20"
                              },
                              "variableNames": [
                                {
                                  "name": "srcOffset",
                                  "nativeSrc": "14921:9:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "14921:9:13"
                                }
                              ]
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nativeSrc": "14984:642:13",
                                    "nodeType": "YulBlock",
                                    "src": "14984:642:13",
                                    "statements": [
                                      {
                                        "nativeSrc": "14998:35:13",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "14998:35:13",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "newLen",
                                              "nativeSrc": "15017:6:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "15017:6:13"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "15029:2:13",
                                                  "nodeType": "YulLiteral",
                                                  "src": "15029:2:13",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "not",
                                                "nativeSrc": "15025:3:13",
                                                "nodeType": "YulIdentifier",
                                                "src": "15025:3:13"
                                              },
                                              "nativeSrc": "15025:7:13",
                                              "nodeType": "YulFunctionCall",
                                              "src": "15025:7:13"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nativeSrc": "15013:3:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "15013:3:13"
                                          },
                                          "nativeSrc": "15013:20:13",
                                          "nodeType": "YulFunctionCall",
                                          "src": "15013:20:13"
                                        },
                                        "variables": [
                                          {
                                            "name": "loopEnd",
                                            "nativeSrc": "15002:7:13",
                                            "nodeType": "YulTypedName",
                                            "src": "15002:7:13",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "15046:49:13",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "15046:49:13",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nativeSrc": "15090:4:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "15090:4:13"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "array_dataslot_string_storage",
                                            "nativeSrc": "15060:29:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "15060:29:13"
                                          },
                                          "nativeSrc": "15060:35:13",
                                          "nodeType": "YulFunctionCall",
                                          "src": "15060:35:13"
                                        },
                                        "variables": [
                                          {
                                            "name": "dstPtr",
                                            "nativeSrc": "15050:6:13",
                                            "nodeType": "YulTypedName",
                                            "src": "15050:6:13",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "15108:10:13",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "15108:10:13",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "15117:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "15117:1:13",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "i",
                                            "nativeSrc": "15112:1:13",
                                            "nodeType": "YulTypedName",
                                            "src": "15112:1:13",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nativeSrc": "15188:165:13",
                                          "nodeType": "YulBlock",
                                          "src": "15188:165:13",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nativeSrc": "15213:6:13",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "15213:6:13"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "name": "src",
                                                            "nativeSrc": "15231:3:13",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "15231:3:13"
                                                          },
                                                          {
                                                            "name": "srcOffset",
                                                            "nativeSrc": "15236:9:13",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "15236:9:13"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "add",
                                                          "nativeSrc": "15227:3:13",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "15227:3:13"
                                                        },
                                                        "nativeSrc": "15227:19:13",
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "15227:19:13"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nativeSrc": "15221:5:13",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "15221:5:13"
                                                    },
                                                    "nativeSrc": "15221:26:13",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "15221:26:13"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nativeSrc": "15206:6:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "15206:6:13"
                                                },
                                                "nativeSrc": "15206:42:13",
                                                "nodeType": "YulFunctionCall",
                                                "src": "15206:42:13"
                                              },
                                              "nativeSrc": "15206:42:13",
                                              "nodeType": "YulExpressionStatement",
                                              "src": "15206:42:13"
                                            },
                                            {
                                              "nativeSrc": "15265:24:13",
                                              "nodeType": "YulAssignment",
                                              "src": "15265:24:13",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nativeSrc": "15279:6:13",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "15279:6:13"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "15287:1:13",
                                                    "nodeType": "YulLiteral",
                                                    "src": "15287:1:13",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "15275:3:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "15275:3:13"
                                                },
                                                "nativeSrc": "15275:14:13",
                                                "nodeType": "YulFunctionCall",
                                                "src": "15275:14:13"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "dstPtr",
                                                  "nativeSrc": "15265:6:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "15265:6:13"
                                                }
                                              ]
                                            },
                                            {
                                              "nativeSrc": "15306:33:13",
                                              "nodeType": "YulAssignment",
                                              "src": "15306:33:13",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "srcOffset",
                                                    "nativeSrc": "15323:9:13",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "15323:9:13"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "15334:4:13",
                                                    "nodeType": "YulLiteral",
                                                    "src": "15334:4:13",
                                                    "type": "",
                                                    "value": "0x20"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "15319:3:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "15319:3:13"
                                                },
                                                "nativeSrc": "15319:20:13",
                                                "nodeType": "YulFunctionCall",
                                                "src": "15319:20:13"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "srcOffset",
                                                  "nativeSrc": "15306:9:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "15306:9:13"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "i",
                                              "nativeSrc": "15142:1:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "15142:1:13"
                                            },
                                            {
                                              "name": "loopEnd",
                                              "nativeSrc": "15145:7:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "15145:7:13"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nativeSrc": "15139:2:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "15139:2:13"
                                          },
                                          "nativeSrc": "15139:14:13",
                                          "nodeType": "YulFunctionCall",
                                          "src": "15139:14:13"
                                        },
                                        "nativeSrc": "15131:222:13",
                                        "nodeType": "YulForLoop",
                                        "post": {
                                          "nativeSrc": "15154:21:13",
                                          "nodeType": "YulBlock",
                                          "src": "15154:21:13",
                                          "statements": [
                                            {
                                              "nativeSrc": "15156:17:13",
                                              "nodeType": "YulAssignment",
                                              "src": "15156:17:13",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "i",
                                                    "nativeSrc": "15165:1:13",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "15165:1:13"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "15168:4:13",
                                                    "nodeType": "YulLiteral",
                                                    "src": "15168:4:13",
                                                    "type": "",
                                                    "value": "0x20"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "15161:3:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "15161:3:13"
                                                },
                                                "nativeSrc": "15161:12:13",
                                                "nodeType": "YulFunctionCall",
                                                "src": "15161:12:13"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "i",
                                                  "nativeSrc": "15156:1:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "15156:1:13"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "pre": {
                                          "nativeSrc": "15135:3:13",
                                          "nodeType": "YulBlock",
                                          "src": "15135:3:13",
                                          "statements": []
                                        },
                                        "src": "15131:222:13"
                                      },
                                      {
                                        "body": {
                                          "nativeSrc": "15401:166:13",
                                          "nodeType": "YulBlock",
                                          "src": "15401:166:13",
                                          "statements": [
                                            {
                                              "nativeSrc": "15419:43:13",
                                              "nodeType": "YulVariableDeclaration",
                                              "src": "15419:43:13",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nativeSrc": "15446:3:13",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "15446:3:13"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nativeSrc": "15451:9:13",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "15451:9:13"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nativeSrc": "15442:3:13",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "15442:3:13"
                                                    },
                                                    "nativeSrc": "15442:19:13",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "15442:19:13"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nativeSrc": "15436:5:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "15436:5:13"
                                                },
                                                "nativeSrc": "15436:26:13",
                                                "nodeType": "YulFunctionCall",
                                                "src": "15436:26:13"
                                              },
                                              "variables": [
                                                {
                                                  "name": "lastValue",
                                                  "nativeSrc": "15423:9:13",
                                                  "nodeType": "YulTypedName",
                                                  "src": "15423:9:13",
                                                  "type": ""
                                                }
                                              ]
                                            },
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nativeSrc": "15486:6:13",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "15486:6:13"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "lastValue",
                                                        "nativeSrc": "15498:9:13",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "15498:9:13"
                                                      },
                                                      {
                                                        "arguments": [
                                                          {
                                                            "arguments": [
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "arguments": [
                                                                      {
                                                                        "kind": "number",
                                                                        "nativeSrc": "15525:1:13",
                                                                        "nodeType": "YulLiteral",
                                                                        "src": "15525:1:13",
                                                                        "type": "",
                                                                        "value": "3"
                                                                      },
                                                                      {
                                                                        "name": "newLen",
                                                                        "nativeSrc": "15528:6:13",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "15528:6:13"
                                                                      }
                                                                    ],
                                                                    "functionName": {
                                                                      "name": "shl",
                                                                      "nativeSrc": "15521:3:13",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "15521:3:13"
                                                                    },
                                                                    "nativeSrc": "15521:14:13",
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "15521:14:13"
                                                                  },
                                                                  {
                                                                    "kind": "number",
                                                                    "nativeSrc": "15537:3:13",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "15537:3:13",
                                                                    "type": "",
                                                                    "value": "248"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "and",
                                                                  "nativeSrc": "15517:3:13",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "15517:3:13"
                                                                },
                                                                "nativeSrc": "15517:24:13",
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "15517:24:13"
                                                              },
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "kind": "number",
                                                                    "nativeSrc": "15547:1:13",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "15547:1:13",
                                                                    "type": "",
                                                                    "value": "0"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "not",
                                                                  "nativeSrc": "15543:3:13",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "15543:3:13"
                                                                },
                                                                "nativeSrc": "15543:6:13",
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "15543:6:13"
                                                              }
                                                            ],
                                                            "functionName": {
                                                              "name": "shr",
                                                              "nativeSrc": "15513:3:13",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "15513:3:13"
                                                            },
                                                            "nativeSrc": "15513:37:13",
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "15513:37:13"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "not",
                                                          "nativeSrc": "15509:3:13",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "15509:3:13"
                                                        },
                                                        "nativeSrc": "15509:42:13",
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "15509:42:13"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "and",
                                                      "nativeSrc": "15494:3:13",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "15494:3:13"
                                                    },
                                                    "nativeSrc": "15494:58:13",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "15494:58:13"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nativeSrc": "15479:6:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "15479:6:13"
                                                },
                                                "nativeSrc": "15479:74:13",
                                                "nodeType": "YulFunctionCall",
                                                "src": "15479:74:13"
                                              },
                                              "nativeSrc": "15479:74:13",
                                              "nodeType": "YulExpressionStatement",
                                              "src": "15479:74:13"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "loopEnd",
                                              "nativeSrc": "15372:7:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "15372:7:13"
                                            },
                                            {
                                              "name": "newLen",
                                              "nativeSrc": "15381:6:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "15381:6:13"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nativeSrc": "15369:2:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "15369:2:13"
                                          },
                                          "nativeSrc": "15369:19:13",
                                          "nodeType": "YulFunctionCall",
                                          "src": "15369:19:13"
                                        },
                                        "nativeSrc": "15366:201:13",
                                        "nodeType": "YulIf",
                                        "src": "15366:201:13"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nativeSrc": "15587:4:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "15587:4:13"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nativeSrc": "15601:1:13",
                                                      "nodeType": "YulLiteral",
                                                      "src": "15601:1:13",
                                                      "type": "",
                                                      "value": "1"
                                                    },
                                                    {
                                                      "name": "newLen",
                                                      "nativeSrc": "15604:6:13",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "15604:6:13"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "shl",
                                                    "nativeSrc": "15597:3:13",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "15597:3:13"
                                                  },
                                                  "nativeSrc": "15597:14:13",
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "15597:14:13"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "15613:1:13",
                                                  "nodeType": "YulLiteral",
                                                  "src": "15613:1:13",
                                                  "type": "",
                                                  "value": "1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "15593:3:13",
                                                "nodeType": "YulIdentifier",
                                                "src": "15593:3:13"
                                              },
                                              "nativeSrc": "15593:22:13",
                                              "nodeType": "YulFunctionCall",
                                              "src": "15593:22:13"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nativeSrc": "15580:6:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "15580:6:13"
                                          },
                                          "nativeSrc": "15580:36:13",
                                          "nodeType": "YulFunctionCall",
                                          "src": "15580:36:13"
                                        },
                                        "nativeSrc": "15580:36:13",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "15580:36:13"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "14977:649:13",
                                  "nodeType": "YulCase",
                                  "src": "14977:649:13",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "14982:1:13",
                                    "nodeType": "YulLiteral",
                                    "src": "14982:1:13",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nativeSrc": "15643:234:13",
                                    "nodeType": "YulBlock",
                                    "src": "15643:234:13",
                                    "statements": [
                                      {
                                        "nativeSrc": "15657:14:13",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "15657:14:13",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "15670:1:13",
                                          "nodeType": "YulLiteral",
                                          "src": "15670:1:13",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "15661:5:13",
                                            "nodeType": "YulTypedName",
                                            "src": "15661:5:13",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nativeSrc": "15706:67:13",
                                          "nodeType": "YulBlock",
                                          "src": "15706:67:13",
                                          "statements": [
                                            {
                                              "nativeSrc": "15724:35:13",
                                              "nodeType": "YulAssignment",
                                              "src": "15724:35:13",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nativeSrc": "15743:3:13",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "15743:3:13"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nativeSrc": "15748:9:13",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "15748:9:13"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nativeSrc": "15739:3:13",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "15739:3:13"
                                                    },
                                                    "nativeSrc": "15739:19:13",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "15739:19:13"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nativeSrc": "15733:5:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "15733:5:13"
                                                },
                                                "nativeSrc": "15733:26:13",
                                                "nodeType": "YulFunctionCall",
                                                "src": "15733:26:13"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "value",
                                                  "nativeSrc": "15724:5:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "15724:5:13"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "name": "newLen",
                                          "nativeSrc": "15687:6:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "15687:6:13"
                                        },
                                        "nativeSrc": "15684:89:13",
                                        "nodeType": "YulIf",
                                        "src": "15684:89:13"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nativeSrc": "15793:4:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "15793:4:13"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "value",
                                                  "nativeSrc": "15852:5:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "15852:5:13"
                                                },
                                                {
                                                  "name": "newLen",
                                                  "nativeSrc": "15859:6:13",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "15859:6:13"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "extract_used_part_and_set_length_of_short_byte_array",
                                                "nativeSrc": "15799:52:13",
                                                "nodeType": "YulIdentifier",
                                                "src": "15799:52:13"
                                              },
                                              "nativeSrc": "15799:67:13",
                                              "nodeType": "YulFunctionCall",
                                              "src": "15799:67:13"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nativeSrc": "15786:6:13",
                                            "nodeType": "YulIdentifier",
                                            "src": "15786:6:13"
                                          },
                                          "nativeSrc": "15786:81:13",
                                          "nodeType": "YulFunctionCall",
                                          "src": "15786:81:13"
                                        },
                                        "nativeSrc": "15786:81:13",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "15786:81:13"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "15635:242:13",
                                  "nodeType": "YulCase",
                                  "src": "15635:242:13",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nativeSrc": "14957:6:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "14957:6:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "14965:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "14965:2:13",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "14954:2:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "14954:2:13"
                                },
                                "nativeSrc": "14954:14:13",
                                "nodeType": "YulFunctionCall",
                                "src": "14954:14:13"
                              },
                              "nativeSrc": "14947:930:13",
                              "nodeType": "YulSwitch",
                              "src": "14947:930:13"
                            }
                          ]
                        },
                        "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
                        "nativeSrc": "14584:1299:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "slot",
                            "nativeSrc": "14665:4:13",
                            "nodeType": "YulTypedName",
                            "src": "14665:4:13",
                            "type": ""
                          },
                          {
                            "name": "src",
                            "nativeSrc": "14671:3:13",
                            "nodeType": "YulTypedName",
                            "src": "14671:3:13",
                            "type": ""
                          }
                        ],
                        "src": "14584:1299:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "15989:102:13",
                          "nodeType": "YulBlock",
                          "src": "15989:102:13",
                          "statements": [
                            {
                              "nativeSrc": "15999:26:13",
                              "nodeType": "YulAssignment",
                              "src": "15999:26:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "16011:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "16011:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "16022:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "16022:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "16007:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "16007:3:13"
                                },
                                "nativeSrc": "16007:18:13",
                                "nodeType": "YulFunctionCall",
                                "src": "16007:18:13"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "15999:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "15999:4:13"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "16041:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "16041:9:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "16056:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "16056:6:13"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "16072:3:13",
                                                "nodeType": "YulLiteral",
                                                "src": "16072:3:13",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "16077:1:13",
                                                "nodeType": "YulLiteral",
                                                "src": "16077:1:13",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "16068:3:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "16068:3:13"
                                            },
                                            "nativeSrc": "16068:11:13",
                                            "nodeType": "YulFunctionCall",
                                            "src": "16068:11:13"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "16081:1:13",
                                            "nodeType": "YulLiteral",
                                            "src": "16081:1:13",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "16064:3:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "16064:3:13"
                                        },
                                        "nativeSrc": "16064:19:13",
                                        "nodeType": "YulFunctionCall",
                                        "src": "16064:19:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "16052:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "16052:3:13"
                                    },
                                    "nativeSrc": "16052:32:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "16052:32:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "16034:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "16034:6:13"
                                },
                                "nativeSrc": "16034:51:13",
                                "nodeType": "YulFunctionCall",
                                "src": "16034:51:13"
                              },
                              "nativeSrc": "16034:51:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "16034:51:13"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nativeSrc": "15888:203:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "15958:9:13",
                            "nodeType": "YulTypedName",
                            "src": "15958:9:13",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "15969:6:13",
                            "nodeType": "YulTypedName",
                            "src": "15969:6:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "15980:4:13",
                            "nodeType": "YulTypedName",
                            "src": "15980:4:13",
                            "type": ""
                          }
                        ],
                        "src": "15888:203:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "16253:188:13",
                          "nodeType": "YulBlock",
                          "src": "16253:188:13",
                          "statements": [
                            {
                              "nativeSrc": "16263:26:13",
                              "nodeType": "YulAssignment",
                              "src": "16263:26:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "16275:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "16275:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "16286:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "16286:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "16271:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "16271:3:13"
                                },
                                "nativeSrc": "16271:18:13",
                                "nodeType": "YulFunctionCall",
                                "src": "16271:18:13"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "16263:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "16263:4:13"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "16305:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "16305:9:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "16320:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "16320:6:13"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "16336:3:13",
                                                "nodeType": "YulLiteral",
                                                "src": "16336:3:13",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "16341:1:13",
                                                "nodeType": "YulLiteral",
                                                "src": "16341:1:13",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "16332:3:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "16332:3:13"
                                            },
                                            "nativeSrc": "16332:11:13",
                                            "nodeType": "YulFunctionCall",
                                            "src": "16332:11:13"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "16345:1:13",
                                            "nodeType": "YulLiteral",
                                            "src": "16345:1:13",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "16328:3:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "16328:3:13"
                                        },
                                        "nativeSrc": "16328:19:13",
                                        "nodeType": "YulFunctionCall",
                                        "src": "16328:19:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "16316:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "16316:3:13"
                                    },
                                    "nativeSrc": "16316:32:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "16316:32:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "16298:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "16298:6:13"
                                },
                                "nativeSrc": "16298:51:13",
                                "nodeType": "YulFunctionCall",
                                "src": "16298:51:13"
                              },
                              "nativeSrc": "16298:51:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "16298:51:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "16369:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "16369:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "16380:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "16380:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "16365:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "16365:3:13"
                                    },
                                    "nativeSrc": "16365:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "16365:18:13"
                                  },
                                  {
                                    "name": "value1",
                                    "nativeSrc": "16385:6:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "16385:6:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "16358:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "16358:6:13"
                                },
                                "nativeSrc": "16358:34:13",
                                "nodeType": "YulFunctionCall",
                                "src": "16358:34:13"
                              },
                              "nativeSrc": "16358:34:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "16358:34:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "16412:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "16412:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "16423:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "16423:2:13",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "16408:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "16408:3:13"
                                    },
                                    "nativeSrc": "16408:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "16408:18:13"
                                  },
                                  {
                                    "name": "value2",
                                    "nativeSrc": "16428:6:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "16428:6:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "16401:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "16401:6:13"
                                },
                                "nativeSrc": "16401:34:13",
                                "nodeType": "YulFunctionCall",
                                "src": "16401:34:13"
                              },
                              "nativeSrc": "16401:34:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "16401:34:13"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
                        "nativeSrc": "16096:345:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "16206:9:13",
                            "nodeType": "YulTypedName",
                            "src": "16206:9:13",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "16217:6:13",
                            "nodeType": "YulTypedName",
                            "src": "16217:6:13",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "16225:6:13",
                            "nodeType": "YulTypedName",
                            "src": "16225:6:13",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "16233:6:13",
                            "nodeType": "YulTypedName",
                            "src": "16233:6:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "16244:4:13",
                            "nodeType": "YulTypedName",
                            "src": "16244:4:13",
                            "type": ""
                          }
                        ],
                        "src": "16096:345:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "16620:172:13",
                          "nodeType": "YulBlock",
                          "src": "16620:172:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "16637:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "16637:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "16648:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "16648:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "16630:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "16630:6:13"
                                },
                                "nativeSrc": "16630:21:13",
                                "nodeType": "YulFunctionCall",
                                "src": "16630:21:13"
                              },
                              "nativeSrc": "16630:21:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "16630:21:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "16671:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "16671:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "16682:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "16682:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "16667:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "16667:3:13"
                                    },
                                    "nativeSrc": "16667:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "16667:18:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "16687:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "16687:2:13",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "16660:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "16660:6:13"
                                },
                                "nativeSrc": "16660:30:13",
                                "nodeType": "YulFunctionCall",
                                "src": "16660:30:13"
                              },
                              "nativeSrc": "16660:30:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "16660:30:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "16710:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "16710:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "16721:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "16721:2:13",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "16706:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "16706:3:13"
                                    },
                                    "nativeSrc": "16706:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "16706:18:13"
                                  },
                                  {
                                    "hexValue": "546f6b656e207472616e736665727320706175736564",
                                    "kind": "string",
                                    "nativeSrc": "16726:24:13",
                                    "nodeType": "YulLiteral",
                                    "src": "16726:24:13",
                                    "type": "",
                                    "value": "Token transfers paused"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "16699:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "16699:6:13"
                                },
                                "nativeSrc": "16699:52:13",
                                "nodeType": "YulFunctionCall",
                                "src": "16699:52:13"
                              },
                              "nativeSrc": "16699:52:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "16699:52:13"
                            },
                            {
                              "nativeSrc": "16760:26:13",
                              "nodeType": "YulAssignment",
                              "src": "16760:26:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "16772:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "16772:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "16783:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "16783:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "16768:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "16768:3:13"
                                },
                                "nativeSrc": "16768:18:13",
                                "nodeType": "YulFunctionCall",
                                "src": "16768:18:13"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "16760:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "16760:4:13"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_6da2590c3034ef1da0b0fb0657e080f278b93f51f0369c416eeea6511934843d__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "16446:346:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "16597:9:13",
                            "nodeType": "YulTypedName",
                            "src": "16597:9:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "16611:4:13",
                            "nodeType": "YulTypedName",
                            "src": "16611:4:13",
                            "type": ""
                          }
                        ],
                        "src": "16446:346:13"
                      },
                      {
                        "body": {
                          "nativeSrc": "16926:145:13",
                          "nodeType": "YulBlock",
                          "src": "16926:145:13",
                          "statements": [
                            {
                              "nativeSrc": "16936:26:13",
                              "nodeType": "YulAssignment",
                              "src": "16936:26:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "16948:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "16948:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "16959:2:13",
                                    "nodeType": "YulLiteral",
                                    "src": "16959:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "16944:3:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "16944:3:13"
                                },
                                "nativeSrc": "16944:18:13",
                                "nodeType": "YulFunctionCall",
                                "src": "16944:18:13"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "16936:4:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "16936:4:13"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "16978:9:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "16978:9:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "16993:6:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "16993:6:13"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "17009:3:13",
                                                "nodeType": "YulLiteral",
                                                "src": "17009:3:13",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "17014:1:13",
                                                "nodeType": "YulLiteral",
                                                "src": "17014:1:13",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "17005:3:13",
                                              "nodeType": "YulIdentifier",
                                              "src": "17005:3:13"
                                            },
                                            "nativeSrc": "17005:11:13",
                                            "nodeType": "YulFunctionCall",
                                            "src": "17005:11:13"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "17018:1:13",
                                            "nodeType": "YulLiteral",
                                            "src": "17018:1:13",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "17001:3:13",
                                          "nodeType": "YulIdentifier",
                                          "src": "17001:3:13"
                                        },
                                        "nativeSrc": "17001:19:13",
                                        "nodeType": "YulFunctionCall",
                                        "src": "17001:19:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "16989:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "16989:3:13"
                                    },
                                    "nativeSrc": "16989:32:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "16989:32:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "16971:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "16971:6:13"
                                },
                                "nativeSrc": "16971:51:13",
                                "nodeType": "YulFunctionCall",
                                "src": "16971:51:13"
                              },
                              "nativeSrc": "16971:51:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "16971:51:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "17042:9:13",
                                        "nodeType": "YulIdentifier",
                                        "src": "17042:9:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "17053:2:13",
                                        "nodeType": "YulLiteral",
                                        "src": "17053:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "17038:3:13",
                                      "nodeType": "YulIdentifier",
                                      "src": "17038:3:13"
                                    },
                                    "nativeSrc": "17038:18:13",
                                    "nodeType": "YulFunctionCall",
                                    "src": "17038:18:13"
                                  },
                                  {
                                    "name": "value1",
                                    "nativeSrc": "17058:6:13",
                                    "nodeType": "YulIdentifier",
                                    "src": "17058:6:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "17031:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "17031:6:13"
                                },
                                "nativeSrc": "17031:34:13",
                                "nodeType": "YulFunctionCall",
                                "src": "17031:34:13"
                              },
                              "nativeSrc": "17031:34:13",
                              "nodeType": "YulExpressionStatement",
                              "src": "17031:34:13"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
                        "nativeSrc": "16797:274:13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "16887:9:13",
                            "nodeType": "YulTypedName",
                            "src": "16887:9:13",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "16898:6:13",
                            "nodeType": "YulTypedName",
                            "src": "16898:6:13",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "16906:6:13",
                            "nodeType": "YulTypedName",
                            "src": "16906:6:13",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "16917:4:13",
                            "nodeType": "YulTypedName",
                            "src": "16917:4:13",
                            "type": ""
                          }
                        ],
                        "src": "16797:274:13"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), 32)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_1, 32), length)\n        mstore(add(add(memPtr, length), 32), 0)\n        value1 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_bb6ef8259868f621162cf2269ec456fd6e3660c295ef634f53db3982172a569f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Cannot transfer to zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Amount must be greater than zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f46a208452d481cbabd737d10144d3db436474a848cac326801210ec7a5aad99__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Daily limit not set\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_0b14ed7c5f1e7324d1cb0362112747b7060ac0bd8d6956f2822396b5cffbc877__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Daily spending limit exceeded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3975d1816c3ca2e29b3bbab35c0be7b15164d704eb9cfbad43aedad5b5a01085__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Invalid student address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2586c6f2c479ed85c187a54ca5dcfccd81d2a491bb7f43f1a090d05c2cb9ee92__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Limit must be greater than zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_280f51dd4b2d9aac10d97a682ab568ef4a4c97c88f4fba0273878925c25fa0f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Caller is not a paus00r\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Caller is not a minter\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Cannot mint to zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_exp_helper(_base, exponent, max) -> power, base\n    {\n        power := 1\n        base := _base\n        for { } gt(exponent, 1) { }\n        {\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            let _1 := 0\n            _1 := 0\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            let _2 := 0\n            _2 := 0\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent, not(0))\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_5a56aca9391f1fa989756252b3eedac50c830c68a92d7f8bc00446bc8dd728b9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Minting limit exceeded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3dc561c043b7bbf10378c02b4bdb83aba886793b5fccfadedca9560c9bcf4554__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Not a registered merchant\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5e171efca29268c8f7dc8b49a0bc6b73082696199ffa2d46cfb8da8065884ea7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Insufficient Campus Credit balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7df341e7dab656fd761183664b8736fe0983ccb8c343026c17b8695ea5ea5982__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Daily limit not set for sender\")\n        tail := add(headStart, 96)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_9e97933809d36609dc0e60ec9fa94106f35937d2c2d362ba775655fdaa86bd8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Invalid merchant address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f53a24e56c3d863b5ed56a4089a9290fc00844c63109070e1d585d687f90ed4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Merchant name cannot be empty\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_dee17f4db42edcb0841b61c9c04adb525cc97e27b4a06dec39b87ce8db6596f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Merchant already registered\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_6da2590c3034ef1da0b0fb0657e080f278b93f51f0369c416eeea6511934843d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Token transfers paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}",
                  "id": 13,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106102065760003560e01c806342966c681161011a57806391d14854116100ad578063a9059cbb1161007c578063a9059cbb14610465578063d539139314610478578063d547741f1461049f578063dd62ed3e146104b2578063e63ab1e9146104eb57600080fd5b806391d148541461042f57806395d89b4114610442578063a217fddf1461044a578063a6c8a3841461045257600080fd5b806370a08231116100e957806370a08231146103cb57806379cc6790146103f45780638456cb59146104075780638aeac5011461040f57600080fd5b806342966c68146103875780635c975abb1461039a5780635cc18e2f146103a557806360caa609146103b857600080fd5b8063248a9ca31161019d5780632f2ff15d1161016c5780632f2ff15d14610337578063313ce5671461034a57806336568abe146103595780633f4ba83a1461036c57806340c10f191461037457600080fd5b8063248a9ca3146102c1578063251de801146102e4578063257caf9e146103045780632803212f1461032457600080fd5b80631a2f7167116101d95780631a2f71671461026d5780631c9cef041461029057806322083bd01461029957806323b872dd146102ae57600080fd5b806301ffc9a71461020b57806306fdde0314610233578063095ea7b31461024857806318160ddd1461025b575b600080fd5b61021e6102193660046116c3565b610512565b60405190151581526020015b60405180910390f35b61023b610549565b60405161022a91906116f4565b61021e61025636600461175e565b6105db565b6002545b60405190815260200161022a565b61021e61027b366004611788565b600a6020526000908152604090205460ff1681565b61025f600c5481565b6102ac6102a736600461175e565b6105f3565b005b61021e6102bc3660046117a3565b610803565b61025f6102cf3660046117e0565b60009081526006602052604090206001015490565b61025f6102f2366004611788565b60096020526000908152604090205481565b61025f610312366004611788565b60076020526000908152604090205481565b6102ac61033236600461175e565b610827565b6102ac6103453660046117f9565b61090d565b6040516012815260200161022a565b6102ac6103673660046117f9565b610938565b6102ac610970565b6102ac61038236600461175e565b6109ea565b6102ac6103953660046117e0565b610b63565b60055460ff1661021e565b6102ac6103b336600461175e565b610b70565b61023b6103c6366004611788565b610e1b565b61025f6103d9366004611788565b6001600160a01b031660009081526020819052604090205490565b6102ac61040236600461175e565b610eb5565b6102ac610eca565b61025f61041d366004611788565b60086020526000908152604090205481565b61021e61043d3660046117f9565b610f42565b61023b610f6d565b61025f600081565b6102ac61046036600461183b565b610f7c565b61021e61047336600461175e565b6110ce565b61025f7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102ac6104ad3660046117f9565b6110dc565b61025f6104c0366004611905565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61025f7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b60006001600160e01b03198216637965db0b60e01b148061054357506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600380546105589061192f565b80601f01602080910402602001604051908101604052809291908181526020018280546105849061192f565b80156105d15780601f106105a6576101008083540402835291602001916105d1565b820191906000526020600020905b8154815290600101906020018083116105b457829003601f168201915b5050505050905090565b6000336105e9818585611101565b5060019392505050565b6001600160a01b03821661064e5760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74207472616e7366657220746f207a65726f20616464726573730060448201526064015b60405180910390fd5b6000811161066e5760405162461bcd60e51b815260040161064590611969565b336000908152602081905260409020548111156106c45760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610645565b336000908152600760205260409020546107165760405162461bcd60e51b815260206004820152601360248201527211185a5b1e481b1a5b5a5d081b9bdd081cd95d606a1b6044820152606401610645565b33600090815260096020526040902054620151809061073590426119b4565b1061075a57336000908152600860209081526040808320839055600990915290204290555b336000908152600760209081526040808320546008909252909120546107819083906119c7565b11156107cf5760405162461bcd60e51b815260206004820152601d60248201527f4461696c79207370656e64696e67206c696d69742065786365656465640000006044820152606401610645565b33600090815260086020526040812080548392906107ee9084906119c7565b909155506107ff905033838361110e565b5050565b60003361081185828561116d565b61081c85858561110e565b506001949350505050565b6000610832816111e6565b6001600160a01b0383166108885760405162461bcd60e51b815260206004820152601760248201527f496e76616c69642073747564656e7420616464726573730000000000000000006044820152606401610645565b600082116108d85760405162461bcd60e51b815260206004820152601f60248201527f4c696d6974206d7573742062652067726561746572207468616e207a65726f006044820152606401610645565b506001600160a01b03909116600090815260076020908152604080832093909355600981528282204290556008905290812055565b600082815260066020526040902060010154610928816111e6565b61093283836111f0565b50505050565b6001600160a01b03811633146109615760405163334bd91960e11b815260040160405180910390fd5b61096b8282611284565b505050565b61099a7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610f42565b6109e05760405162461bcd60e51b815260206004820152601760248201527621b0b63632b91034b9903737ba1030903830bab998183960491b6044820152606401610645565b6109e86112f1565b565b610a147f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610f42565b610a595760405162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba10309036b4b73a32b960511b6044820152606401610645565b60008111610a795760405162461bcd60e51b815260040161064590611969565b6001600160a01b038216610acf5760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f74206d696e7420746f207a65726f206164647265737300000000006044820152606401610645565b610adb6012600a611ac1565b610ae890620f4240611ad0565b81610b08846001600160a01b031660009081526020819052604090205490565b610b1291906119c7565b1115610b595760405162461bcd60e51b8152602060048201526016602482015275135a5b9d1a5b99c81b1a5b5a5d08195e18d95959195960521b6044820152606401610645565b6107ff8282611343565b610b6d3382611379565b50565b6001600160a01b0382166000908152600a602052604090205460ff16610bd85760405162461bcd60e51b815260206004820152601960248201527f4e6f7420612072656769737465726564206d65726368616e74000000000000006044820152606401610645565b60008111610bf85760405162461bcd60e51b815260040161064590611969565b33600090815260208190526040902054811115610c625760405162461bcd60e51b815260206004820152602260248201527f496e73756666696369656e742043616d707573204372656469742062616c616e604482015261636560f01b6064820152608401610645565b33600090815260076020526040902054610cbe5760405162461bcd60e51b815260206004820152601e60248201527f4461696c79206c696d6974206e6f742073657420666f722073656e64657200006044820152606401610645565b336000908152600960205260409020546201518090610cdd90426119b4565b10610d0257336000908152600860209081526040808320839055600990915290204290555b33600090815260076020908152604080832054600890925290912054610d299083906119c7565b1115610d775760405162461bcd60e51b815260206004820152601d60248201527f4461696c79207370656e64696e67206c696d69742065786365656465640000006044820152606401610645565b3360009081526008602052604081208054839290610d969084906119c7565b90915550610da7905033838361110e565b60006064600c5483610db99190611ad0565b610dc39190611ae7565b9050610dcf3382611343565b60408051838152602081018390526001600160a01b0385169133917f9b66a6e551cb32ff1fa78830f83b93be1aa031a3b2bd93aa16818d97ba5602a191015b60405180910390a3505050565b600b6020526000908152604090208054610e349061192f565b80601f0160208091040260200160405190810160405280929190818152602001828054610e609061192f565b8015610ead5780601f10610e8257610100808354040283529160200191610ead565b820191906000526020600020905b815481529060010190602001808311610e9057829003601f168201915b505050505081565b610ec082338361116d565b6107ff8282611379565b610ef47f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610f42565b610f3a5760405162461bcd60e51b815260206004820152601760248201527621b0b63632b91034b9903737ba1030903830bab998183960491b6044820152606401610645565b6109e86113af565b60009182526006602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600480546105589061192f565b6000610f87816111e6565b6001600160a01b038316610fdd5760405162461bcd60e51b815260206004820152601860248201527f496e76616c6964206d65726368616e74206164647265737300000000000000006044820152606401610645565b600082511161102e5760405162461bcd60e51b815260206004820152601d60248201527f4d65726368616e74206e616d652063616e6e6f7420626520656d7074790000006044820152606401610645565b6001600160a01b0383166000908152600a602052604090205460ff16156110975760405162461bcd60e51b815260206004820152601b60248201527f4d65726368616e7420616c7265616479207265676973746572656400000000006044820152606401610645565b6001600160a01b0383166000908152600a60209081526040808320805460ff19166001179055600b90915290206109328382611b57565b6000336105e981858561110e565b6000828152600660205260409020600101546110f7816111e6565b6109328383611284565b61096b83838360016113ec565b6001600160a01b03831661113857604051634b637e8f60e11b815260006004820152602401610645565b6001600160a01b0382166111625760405163ec442f0560e01b815260006004820152602401610645565b61096b8383836114c1565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981101561093257818110156111d757604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610645565b610932848484840360006113ec565b610b6d8133611518565b60006111fc8383610f42565b61127c5760008381526006602090815260408083206001600160a01b03861684529091529020805460ff191660011790556112343390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001610543565b506000610543565b60006112908383610f42565b1561127c5760008381526006602090815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4506001610543565b6112f9611551565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b03821661136d5760405163ec442f0560e01b815260006004820152602401610645565b6107ff600083836114c1565b6001600160a01b0382166113a357604051634b637e8f60e11b815260006004820152602401610645565b6107ff826000836114c1565b6113b7611574565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586113263390565b6001600160a01b0384166114165760405163e602df0560e01b815260006004820152602401610645565b6001600160a01b03831661144057604051634a1406b160e11b815260006004820152602401610645565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561093257826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516114b391815260200190565b60405180910390a350505050565b60055460ff161561150d5760405162461bcd60e51b8152602060048201526016602482015275151bdad95b881d1c985b9cd9995c9cc81c185d5cd95960521b6044820152606401610645565b61096b838383611598565b6115228282610f42565b6107ff5760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610645565b60055460ff166109e857604051638dfc202b60e01b815260040160405180910390fd5b60055460ff16156109e85760405163d93c066560e01b815260040160405180910390fd5b6115a0611574565b61096b8383836001600160a01b0383166115d15780600260008282546115c691906119c7565b909155506116439050565b6001600160a01b038316600090815260208190526040902054818110156116245760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610645565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661165f5760028054829003905561167e565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e0e91815260200190565b6000602082840312156116d557600080fd5b81356001600160e01b0319811681146116ed57600080fd5b9392505050565b602081526000825180602084015260005b818110156117225760208186018101516040868401015201611705565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461175957600080fd5b919050565b6000806040838503121561177157600080fd5b61177a83611742565b946020939093013593505050565b60006020828403121561179a57600080fd5b6116ed82611742565b6000806000606084860312156117b857600080fd5b6117c184611742565b92506117cf60208501611742565b929592945050506040919091013590565b6000602082840312156117f257600080fd5b5035919050565b6000806040838503121561180c57600080fd5b8235915061181c60208401611742565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561184e57600080fd5b61185783611742565b9150602083013567ffffffffffffffff81111561187357600080fd5b8301601f8101851361188457600080fd5b803567ffffffffffffffff81111561189e5761189e611825565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156118cd576118cd611825565b6040528181528282016020018710156118e557600080fd5b816020840160208301376000602083830101528093505050509250929050565b6000806040838503121561191857600080fd5b61192183611742565b915061181c60208401611742565b600181811c9082168061194357607f821691505b60208210810361196357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f604082015260600190565b634e487b7160e01b600052601160045260246000fd5b818103818111156105435761054361199e565b808201808211156105435761054361199e565b6001815b6001841115611a15578085048111156119f9576119f961199e565b6001841615611a0757908102905b60019390931c9280026119de565b935093915050565b600082611a2c57506001610543565b81611a3957506000610543565b8160018114611a4f5760028114611a5957611a75565b6001915050610543565b60ff841115611a6a57611a6a61199e565b50506001821b610543565b5060208310610133831016604e8410600b8410161715611a98575081810a610543565b611aa560001984846119da565b8060001904821115611ab957611ab961199e565b029392505050565b60006116ed60ff841683611a1d565b80820281158282048414176105435761054361199e565b600082611b0457634e487b7160e01b600052601260045260246000fd5b500490565b601f82111561096b57806000526020600020601f840160051c81016020851015611b305750805b601f840160051c820191505b81811015611b505760008155600101611b3c565b5050505050565b815167ffffffffffffffff811115611b7157611b71611825565b611b8581611b7f845461192f565b84611b09565b6020601f821160018114611bb95760008315611ba15750848201515b600019600385901b1c1916600184901b178455611b50565b600084815260208120601f198516915b82811015611be95787850151825560209485019460019092019101611bc9565b5084821015611c075786840151600019600387901b60f8161c191681555b50505050600190811b0190555056fea164736f6c634300081c000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x206 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42966C68 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0x91D14854 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x4EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x44A JUMPI DUP1 PUSH4 0xA6C8A384 EQ PUSH2 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0x8AEAC501 EQ PUSH2 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0x5CC18E2F EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x60CAA609 EQ PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x16C JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x251DE801 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x257CAF9E EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x2803212F EQ PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1A2F7167 GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x1A2F7167 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x1C9CEF04 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x22083BD0 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x25B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21E PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x16C3 JUMP JUMPDEST PUSH2 0x512 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23B PUSH2 0x549 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x16F4 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0x175E JUMP JUMPDEST PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22A JUMP JUMPDEST PUSH2 0x21E PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x25F PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x2A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x175E JUMP JUMPDEST PUSH2 0x5F3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21E PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x17A3 JUMP JUMPDEST PUSH2 0x803 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x17E0 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x312 CALLDATASIZE PUSH1 0x4 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x332 CALLDATASIZE PUSH1 0x4 PUSH2 0x175E JUMP JUMPDEST PUSH2 0x827 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0x17F9 JUMP JUMPDEST PUSH2 0x90D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22A JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x367 CALLDATASIZE PUSH1 0x4 PUSH2 0x17F9 JUMP JUMPDEST PUSH2 0x938 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x970 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x382 CALLDATASIZE PUSH1 0x4 PUSH2 0x175E JUMP JUMPDEST PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x395 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E0 JUMP JUMPDEST PUSH2 0xB63 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x21E JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x3B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x175E JUMP JUMPDEST PUSH2 0xB70 JUMP JUMPDEST PUSH2 0x23B PUSH2 0x3C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1788 JUMP JUMPDEST PUSH2 0xE1B JUMP JUMPDEST PUSH2 0x25F PUSH2 0x3D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x402 CALLDATASIZE PUSH1 0x4 PUSH2 0x175E JUMP JUMPDEST PUSH2 0xEB5 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0xECA JUMP JUMPDEST PUSH2 0x25F PUSH2 0x41D CALLDATASIZE PUSH1 0x4 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x43D CALLDATASIZE PUSH1 0x4 PUSH2 0x17F9 JUMP JUMPDEST PUSH2 0xF42 JUMP JUMPDEST PUSH2 0x23B PUSH2 0xF6D JUMP JUMPDEST PUSH2 0x25F PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x460 CALLDATASIZE PUSH1 0x4 PUSH2 0x183B JUMP JUMPDEST PUSH2 0xF7C JUMP JUMPDEST PUSH2 0x21E PUSH2 0x473 CALLDATASIZE PUSH1 0x4 PUSH2 0x175E JUMP JUMPDEST PUSH2 0x10CE JUMP JUMPDEST PUSH2 0x25F PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x4AD CALLDATASIZE PUSH1 0x4 PUSH2 0x17F9 JUMP JUMPDEST PUSH2 0x10DC JUMP JUMPDEST PUSH2 0x25F PUSH2 0x4C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1905 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x25F PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x543 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x558 SWAP1 PUSH2 0x192F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x584 SWAP1 PUSH2 0x192F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5D1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5A6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5D1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5B4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x5E9 DUP2 DUP6 DUP6 PUSH2 0x1101 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x64E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x66E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x645 SWAP1 PUSH2 0x1969 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x6C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x716 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x11185A5B1E481B1A5B5A5D081B9BDD081CD95D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x15180 SWAP1 PUSH2 0x735 SWAP1 TIMESTAMP PUSH2 0x19B4 JUMP JUMPDEST LT PUSH2 0x75A JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x8 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x781 SWAP1 DUP4 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST GT ISZERO PUSH2 0x7CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4461696C79207370656E64696E67206C696D6974206578636565646564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x7EE SWAP1 DUP5 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x7FF SWAP1 POP CALLER DUP4 DUP4 PUSH2 0x110E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x811 DUP6 DUP3 DUP6 PUSH2 0x116D JUMP JUMPDEST PUSH2 0x81C DUP6 DUP6 DUP6 PUSH2 0x110E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x832 DUP2 PUSH2 0x11E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x888 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642073747564656E742061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x8D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C696D6974206D7573742062652067726561746572207468616E207A65726F00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x9 DUP2 MSTORE DUP3 DUP3 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH1 0x8 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x928 DUP2 PUSH2 0x11E6 JUMP JUMPDEST PUSH2 0x932 DUP4 DUP4 PUSH2 0x11F0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x961 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x96B DUP3 DUP3 PUSH2 0x1284 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x99A PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A CALLER PUSH2 0xF42 JUMP JUMPDEST PUSH2 0x9E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x21B0B63632B91034B9903737BA1030903830BAB9981839 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST PUSH2 0x9E8 PUSH2 0x12F1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA14 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 CALLER PUSH2 0xF42 JUMP JUMPDEST PUSH2 0xA59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x21B0B63632B91034B9903737BA10309036B4B73A32B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xA79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x645 SWAP1 PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xACF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206D696E7420746F207A65726F20616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST PUSH2 0xADB PUSH1 0x12 PUSH1 0xA PUSH2 0x1AC1 JUMP JUMPDEST PUSH2 0xAE8 SWAP1 PUSH3 0xF4240 PUSH2 0x1AD0 JUMP JUMPDEST DUP2 PUSH2 0xB08 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB12 SWAP2 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST GT ISZERO PUSH2 0xB59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x135A5B9D1A5B99C81B1A5B5A5D08195E18D959591959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST PUSH2 0x7FF DUP3 DUP3 PUSH2 0x1343 JUMP JUMPDEST PUSH2 0xB6D CALLER DUP3 PUSH2 0x1379 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xBD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420612072656769737465726564206D65726368616E7400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xBF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x645 SWAP1 PUSH2 0x1969 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0xC62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742043616D707573204372656469742062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x645 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xCBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4461696C79206C696D6974206E6F742073657420666F722073656E6465720000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x15180 SWAP1 PUSH2 0xCDD SWAP1 TIMESTAMP PUSH2 0x19B4 JUMP JUMPDEST LT PUSH2 0xD02 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x8 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0xD29 SWAP1 DUP4 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST GT ISZERO PUSH2 0xD77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4461696C79207370656E64696E67206C696D6974206578636565646564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xD96 SWAP1 DUP5 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xDA7 SWAP1 POP CALLER DUP4 DUP4 PUSH2 0x110E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0xC SLOAD DUP4 PUSH2 0xDB9 SWAP2 SWAP1 PUSH2 0x1AD0 JUMP JUMPDEST PUSH2 0xDC3 SWAP2 SWAP1 PUSH2 0x1AE7 JUMP JUMPDEST SWAP1 POP PUSH2 0xDCF CALLER DUP3 PUSH2 0x1343 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 CALLER SWAP2 PUSH32 0x9B66A6E551CB32FF1FA78830F83B93BE1AA031A3B2BD93AA16818D97BA5602A1 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xE34 SWAP1 PUSH2 0x192F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE60 SWAP1 PUSH2 0x192F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEAD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE82 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEAD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE90 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0xEC0 DUP3 CALLER DUP4 PUSH2 0x116D JUMP JUMPDEST PUSH2 0x7FF DUP3 DUP3 PUSH2 0x1379 JUMP JUMPDEST PUSH2 0xEF4 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A CALLER PUSH2 0xF42 JUMP JUMPDEST PUSH2 0xF3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x21B0B63632B91034B9903737BA1030903830BAB9981839 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST PUSH2 0x9E8 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x558 SWAP1 PUSH2 0x192F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF87 DUP2 PUSH2 0x11E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xFDD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206D65726368616E7420616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT PUSH2 0x102E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726368616E74206E616D652063616E6E6F7420626520656D707479000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1097 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726368616E7420616C726561647920726567697374657265640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH2 0x932 DUP4 DUP3 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x5E9 DUP2 DUP6 DUP6 PUSH2 0x110E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x10F7 DUP2 PUSH2 0x11E6 JUMP JUMPDEST PUSH2 0x932 DUP4 DUP4 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x96B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x13EC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1138 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x645 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1162 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x645 JUMP JUMPDEST PUSH2 0x96B DUP4 DUP4 DUP4 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x932 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x11D7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST PUSH2 0x932 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x13EC JUMP JUMPDEST PUSH2 0xB6D DUP2 CALLER PUSH2 0x1518 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11FC DUP4 DUP4 PUSH2 0xF42 JUMP JUMPDEST PUSH2 0x127C JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1234 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x543 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1290 DUP4 DUP4 PUSH2 0xF42 JUMP JUMPDEST ISZERO PUSH2 0x127C JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x543 JUMP JUMPDEST PUSH2 0x12F9 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x136D JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x645 JUMP JUMPDEST PUSH2 0x7FF PUSH1 0x0 DUP4 DUP4 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x13A3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x645 JUMP JUMPDEST PUSH2 0x7FF DUP3 PUSH1 0x0 DUP4 PUSH2 0x14C1 JUMP JUMPDEST PUSH2 0x13B7 PUSH2 0x1574 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1326 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1416 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x645 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1440 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x645 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x932 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x14B3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x150D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x151BDAD95B881D1C985B9CD9995C9CC81C185D5CD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST PUSH2 0x96B DUP4 DUP4 DUP4 PUSH2 0x1598 JUMP JUMPDEST PUSH2 0x1522 DUP3 DUP3 PUSH2 0xF42 JUMP JUMPDEST PUSH2 0x7FF JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x645 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x9E8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x9E8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15A0 PUSH2 0x1574 JUMP JUMPDEST PUSH2 0x96B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x15D1 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x15C6 SWAP2 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1643 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1624 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x645 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x165F JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x167E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xE0E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x16ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1722 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x1705 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1771 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x177A DUP4 PUSH2 0x1742 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16ED DUP3 PUSH2 0x1742 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17C1 DUP5 PUSH2 0x1742 JUMP JUMPDEST SWAP3 POP PUSH2 0x17CF PUSH1 0x20 DUP6 ADD PUSH2 0x1742 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x180C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x181C PUSH1 0x20 DUP5 ADD PUSH2 0x1742 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x184E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1857 DUP4 PUSH2 0x1742 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1873 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1884 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x189E JUMPI PUSH2 0x189E PUSH2 0x1825 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x18CD JUMPI PUSH2 0x18CD PUSH2 0x1825 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x18E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1918 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1921 DUP4 PUSH2 0x1742 JUMP JUMPDEST SWAP2 POP PUSH2 0x181C PUSH1 0x20 DUP5 ADD PUSH2 0x1742 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1943 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1963 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x543 JUMPI PUSH2 0x543 PUSH2 0x199E JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x543 JUMPI PUSH2 0x543 PUSH2 0x199E JUMP JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x1A15 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x19F9 JUMPI PUSH2 0x19F9 PUSH2 0x199E JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x1A07 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x19DE JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1A2C JUMPI POP PUSH1 0x1 PUSH2 0x543 JUMP JUMPDEST DUP2 PUSH2 0x1A39 JUMPI POP PUSH1 0x0 PUSH2 0x543 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1A4F JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1A59 JUMPI PUSH2 0x1A75 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x543 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1A6A JUMPI PUSH2 0x1A6A PUSH2 0x199E JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x543 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1A98 JUMPI POP DUP2 DUP2 EXP PUSH2 0x543 JUMP JUMPDEST PUSH2 0x1AA5 PUSH1 0x0 NOT DUP5 DUP5 PUSH2 0x19DA JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1AB9 JUMPI PUSH2 0x1AB9 PUSH2 0x199E JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16ED PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x1A1D JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x543 JUMPI PUSH2 0x543 PUSH2 0x199E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1B04 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x96B JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1B30 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B50 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1B3C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B71 JUMPI PUSH2 0x1B71 PUSH2 0x1825 JUMP JUMPDEST PUSH2 0x1B85 DUP2 PUSH2 0x1B7F DUP5 SLOAD PUSH2 0x192F JUMP JUMPDEST DUP5 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1BB9 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x1BA1 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1B50 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1BE9 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1BC9 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x1C07 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ",
              "sourceMap": "604:6505:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;:::i;:::-;;:::i;:::-;;;470:14:13;;463:22;445:41;;433:2;418:18;2565:202:0;;;;;;;;1760:89:3;;;:::i;:::-;;;;;;;:::i;3979:186::-;;;;;;:::i;:::-;;:::i;2830:97::-;2908:12;;2830:97;;;1658:25:13;;;1646:2;1631:18;2830:97:3;1512:177:13;1093:42:12;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5835:37;;;;;;4174:929;;;;;;:::i;:::-;;:::i;:::-;;4757:244:3;;;;;;:::i;:::-;;:::i;3810:120:0:-;;;;;;:::i;:::-;3875:7;3901:12;;;:6;:12;;;;;:22;;;;3810:120;1008:52:12;;;;;;:::i;:::-;;;;;;;;;;;;;;898:53;;;;;;:::i;:::-;;;;;;;;;;;;;;3684:419;;;;;;:::i;:::-;;:::i;4226:136:0:-;;;;;;:::i;:::-;;:::i;2688:82:3:-;;;2761:2;3124:36:13;;3112:2;3097:18;2688:82:3;2982:184:13;5328:245:0;;;;;;:::i;:::-;;:::i;2176:166:12:-;;;:::i;2432:549::-;;;;;;:::i;:::-;;:::i;618:87:5:-;;;;;;:::i;:::-;;:::i;1726:84:9:-;1796:7;;;;1726:84;;5885:1222:12;;;;;;:::i;:::-;;:::i;1141:46::-;;;;;;:::i;:::-;;:::i;2985:116:3:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3076:18:3;3050:7;3076:18;;;;;;;;;;;;2985:116;1021:158:5;;;;;;:::i;:::-;;:::i;1960:210:12:-;;;:::i;957:45::-;;;;;;:::i;:::-;;;;;;;;;;;;;;2854:136:0;;;;;;:::i;:::-;;:::i;1962:93:3:-;;;:::i;2187:49:0:-;;2232:4;2187:49;;3080:477:12;;;;;;:::i;:::-;;:::i;3296:178:3:-;;;;;;:::i;:::-;;:::i;789:62:12:-;;827:24;789:62;;4642:138:0;;;;;;:::i;:::-;;:::i;3532:140:3:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3638:18:3;;;3612:7;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3532:140;721:62:12;;759:24;721:62;;2565:202:0;2650:4;-1:-1:-1;;;;;;2673:47:0;;-1:-1:-1;;;2673:47:0;;:87;;-1:-1:-1;;;;;;;;;;862:40:10;;;2724:36:0;2666:94;2565:202;-1:-1:-1;;2565:202:0:o;1760:89:3:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;735:10:8;4106:31:3;735:10:8;4122:7:3;4131:5;4106:8;:31::i;:::-;-1:-1:-1;4154:4:3;;3979:186;-1:-1:-1;;;3979:186:3:o;4174:929:12:-;-1:-1:-1;;;;;4405:16:12;;4397:60;;;;-1:-1:-1;;;4397:60:12;;5410:2:13;4397:60:12;;;5392:21:13;5449:2;5429:18;;;5422:30;5488:33;5468:18;;;5461:61;5539:18;;4397:60:12;;;;;;;;;4484:1;4475:6;:10;4467:55;;;;-1:-1:-1;;;4467:55:12;;;;;;;:::i;:::-;4550:10;3050:7:3;3076:18;;;;;;;;;;;4565:6:12;-1:-1:-1;4540:31:12;4532:64;;;;-1:-1:-1;;;4532:64:12;;6131:2:13;4532:64:12;;;6113:21:13;6170:2;6150:18;;;6143:30;-1:-1:-1;;;6189:18:13;;;6182:50;6249:18;;4532:64:12;5929:344:13;4532:64:12;4634:10;4648:1;4615:30;;;:18;:30;;;;;;4607:66;;;;-1:-1:-1;;;4607:66:12;;6480:2:13;4607:66:12;;;6462:21:13;6519:2;6499:18;;;6492:30;-1:-1:-1;;;6538:18:13;;;6531:49;6597:18;;4607:66:12;6278:343:13;4607:66:12;4724:10;4706:29;;;;:17;:29;;;;;;4739:6;;4688:47;;:15;:47;:::i;:::-;:57;4684:175;;4772:10;4786:1;4761:22;;;:10;:22;;;;;;;;:26;;;4801:17;:29;;;;;4833:15;4801:47;;4684:175;4944:10;4925:30;;;;:18;:30;;;;;;;;;4890:10;:22;;;;;;;:31;;4915:6;;4890:31;:::i;:::-;:65;;4869:141;;;;-1:-1:-1;;;4869:141:12;;7223:2:13;4869:141:12;;;7205:21:13;7262:2;7242:18;;;7235:30;7301:31;7281:18;;;7274:59;7350:18;;4869:141:12;7021:353:13;4869:141:12;5032:10;5021:22;;;;:10;:22;;;;;:32;;5047:6;;5021:22;:32;;5047:6;;5021:32;:::i;:::-;;;;-1:-1:-1;5063:33:12;;-1:-1:-1;5073:10:12;5085:2;5089:6;5063:9;:33::i;:::-;4174:929;;:::o;4757:244:3:-;4844:4;735:10:8;4900:37:3;4916:4;735:10:8;4931:5:3;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;-1:-1:-1;4990:4:3;;4757:244;-1:-1:-1;;;;4757:244:3:o;3684:419:12:-;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;3851:21:12;::::1;3843:57;;;::::0;-1:-1:-1;;;3843:57:12;;7581:2:13;3843:57:12::1;::::0;::::1;7563:21:13::0;7620:2;7600:18;;;7593:30;7659:25;7639:18;;;7632:53;7702:18;;3843:57:12::1;7379:347:13::0;3843:57:12::1;3926:1;3918:5;:9;3910:53;;;::::0;-1:-1:-1;;;3910:53:12;;7933:2:13;3910:53:12::1;::::0;::::1;7915:21:13::0;7972:2;7952:18;;;7945:30;8011:33;7991:18;;;7984:61;8062:18;;3910:53:12::1;7731:355:13::0;3910:53:12::1;-1:-1:-1::0;;;;;;3974:27:12;;::::1;;::::0;;;:18:::1;:27;::::0;;;;;;;:35;;;;4019:17:::1;:26:::0;;;;;4048:15:::1;4019:44:::0;;4073:10:::1;:19:::0;;;;;:23;3684:419::o;4226:136:0:-;3875:7;3901:12;;;:6;:12;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;5328:245::-;-1:-1:-1;;;;;5421:34:0;;735:10:8;5421:34:0;5417:102;;5478:30;;-1:-1:-1;;;5478:30:0;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;2176:166:12:-;2255:32;759:24;2276:10;2255:7;:32::i;:::-;2247:68;;;;-1:-1:-1;;;2247:68:12;;8293:2:13;2247:68:12;;;8275:21:13;8332:2;8312:18;;;8305:30;-1:-1:-1;;;8351:18:13;;;8344:53;8414:18;;2247:68:12;8091:347:13;2247:68:12;2325:10;:8;:10::i;:::-;2176:166::o;2432:549::-;2623:32;827:24;2644:10;2623:7;:32::i;:::-;2615:67;;;;-1:-1:-1;;;2615:67:12;;8645:2:13;2615:67:12;;;8627:21:13;8684:2;8664:18;;;8657:30;-1:-1:-1;;;8703:18:13;;;8696:52;8765:18;;2615:67:12;8443:346:13;2615:67:12;2709:1;2700:6;:10;2692:55;;;;-1:-1:-1;;;2692:55:12;;;;;;;:::i;:::-;-1:-1:-1;;;;;2765:16:12;;2757:56;;;;-1:-1:-1;;;2757:56:12;;8996:2:13;2757:56:12;;;8978:21:13;9035:2;9015:18;;;9008:30;9074:29;9054:18;;;9047:57;9121:18;;2757:56:12;8794:351:13;2757:56:12;2882:16;2761:2:3;2882::12;:16;:::i;:::-;2870:28;;:9;:28;:::i;:::-;2860:6;2844:13;2854:2;-1:-1:-1;;;;;3076:18:3;3050:7;3076:18;;;;;;;;;;;;2985:116;2844:13:12;:22;;;;:::i;:::-;:54;;2823:123;;;;-1:-1:-1;;;2823:123:12;;10957:2:13;2823:123:12;;;10939:21:13;10996:2;10976:18;;;10969:30;-1:-1:-1;;;11015:18:13;;;11008:52;11077:18;;2823:123:12;10755:346:13;2823:123:12;2957:17;2963:2;2967:6;2957:5;:17::i;618:87:5:-;672:26;735:10:8;692:5:5;672;:26::i;:::-;618:87;:::o;5885:1222:12:-;-1:-1:-1;;;;;6135:20:12;;;;;;:10;:20;;;;;;;;6127:58;;;;-1:-1:-1;;;6127:58:12;;11308:2:13;6127:58:12;;;11290:21:13;11347:2;11327:18;;;11320:30;11386:27;11366:18;;;11359:55;11431:18;;6127:58:12;11106:349:13;6127:58:12;6212:1;6203:6;:10;6195:55;;;;-1:-1:-1;;;6195:55:12;;;;;;;:::i;:::-;6291:10;3050:7:3;3076:18;;;;;;;;;;;6306:6:12;-1:-1:-1;6281:31:12;6260:112;;;;-1:-1:-1;;;6260:112:12;;11662:2:13;6260:112:12;;;11644:21:13;11701:2;11681:18;;;11674:30;11740:34;11720:18;;;11713:62;-1:-1:-1;;;11791:18:13;;;11784:32;11833:19;;6260:112:12;11460:398:13;6260:112:12;6422:10;6436:1;6403:30;;;:18;:30;;;;;;6382:111;;;;-1:-1:-1;;;6382:111:12;;12065:2:13;6382:111:12;;;12047:21:13;12104:2;12084:18;;;12077:30;12143:32;12123:18;;;12116:60;12193:18;;6382:111:12;11863:354:13;6382:111:12;6544:10;6526:29;;;;:17;:29;;;;;;6559:6;;6508:47;;:15;:47;:::i;:::-;:57;6504:175;;6592:10;6606:1;6581:22;;;:10;:22;;;;;;;;:26;;;6621:17;:29;;;;;6653:15;6621:47;;6504:175;6764:10;6745:30;;;;:18;:30;;;;;;;;;6710:10;:22;;;;;;;:31;;6735:6;;6710:31;:::i;:::-;:65;;6689:141;;;;-1:-1:-1;;;6689:141:12;;7223:2:13;6689:141:12;;;7205:21:13;7262:2;7242:18;;;7235:30;7301:31;7281:18;;;7274:59;7350:18;;6689:141:12;7021:353:13;6689:141:12;6852:10;6841:22;;;;:10;:22;;;;;:32;;6867:6;;6841:22;:32;;6867:6;;6841:32;:::i;:::-;;;;-1:-1:-1;6883:39:12;;-1:-1:-1;6893:10:12;6905:8;6915:6;6883:9;:39::i;:::-;6933:16;6984:3;6962:18;;6953:6;:27;;;;:::i;:::-;6952:35;;;;:::i;:::-;6933:54;;6997:27;7003:10;7015:8;6997:5;:27::i;:::-;7040:60;;;12618:25:13;;;12674:2;12659:18;;12652:34;;;-1:-1:-1;;;;;7040:60:12;;;7061:10;;7040:60;;12591:18:13;7040:60:12;;;;;;;;5956:1151;5885:1222;;:::o;1141:46::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1021:158:5:-;1096:45;1112:7;735:10:8;1135:5:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;1960:210:12:-;2085:32;759:24;2106:10;2085:7;:32::i;:::-;2077:68;;;;-1:-1:-1;;;2077:68:12;;8293:2:13;2077:68:12;;;8275:21:13;8332:2;8312:18;;;8305:30;-1:-1:-1;;;8351:18:13;;;8344:53;8414:18;;2077:68:12;8091:347:13;2077:68:12;2155:8;:6;:8::i;2854:136:0:-;2931:4;2954:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;;;;2854:136::o;1962:93:3:-;2009:13;2041:7;2034:14;;;;;:::i;3080:477:12:-;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;3277:22:12;::::1;3269:59;;;::::0;-1:-1:-1;;;3269:59:12;;12899:2:13;3269:59:12::1;::::0;::::1;12881:21:13::0;12938:2;12918:18;;;12911:30;12977:26;12957:18;;;12950:54;13021:18;;3269:59:12::1;12697:348:13::0;3269:59:12::1;3367:1;3352:4;3346:18;:22;3338:64;;;::::0;-1:-1:-1;;;3338:64:12;;13252:2:13;3338:64:12::1;::::0;::::1;13234:21:13::0;13291:2;13271:18;;;13264:30;13330:31;13310:18;;;13303:59;13379:18;;3338:64:12::1;13050:353:13::0;3338:64:12::1;-1:-1:-1::0;;;;;3421:20:12;::::1;;::::0;;;:10:::1;:20;::::0;;;;;::::1;;3420:21;3412:61;;;::::0;-1:-1:-1;;;3412:61:12;;13610:2:13;3412:61:12::1;::::0;::::1;13592:21:13::0;13649:2;13629:18;;;13622:30;13688:29;13668:18;;;13661:57;13735:18;;3412:61:12::1;13408:351:13::0;3412:61:12::1;-1:-1:-1::0;;;;;3484:20:12;::::1;;::::0;;;:10:::1;:20;::::0;;;;;;;:27;;-1:-1:-1;;3484:27:12::1;3507:4;3484:27;::::0;;3521:12:::1;:22:::0;;;;;:29:::1;3546:4:::0;3521:22;:29:::1;:::i;3296:178:3:-:0;3365:4;735:10:8;3419:27:3;735:10:8;3436:2:3;3440:5;3419:9;:27::i;4642:138:0:-;3875:7;3901:12;;;:6;:12;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;8707:128:3:-:0;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;5374:300::-;-1:-1:-1;;;;;5457:18:3;;5453:86;;5498:30;;-1:-1:-1;;;5498:30:3;;5525:1;5498:30;;;16034:51:13;16007:18;;5498:30:3;15888:203:13;5453:86:3;-1:-1:-1;;;;;5552:16:3;;5548:86;;5591:32;;-1:-1:-1;;;5591:32:3;;5620:1;5591:32;;;16034:51:13;16007:18;;5591:32:3;15888:203:13;5548:86:3;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;10396:476::-;-1:-1:-1;;;;;3638:18:3;;;10495:24;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10561:36:3;;10557:309;;;10636:5;10617:16;:24;10613:130;;;10668:60;;-1:-1:-1;;;10668:60:3;;-1:-1:-1;;;;;16316:32:13;;10668:60:3;;;16298:51:13;16365:18;;;16358:34;;;16408:18;;;16401:34;;;16271:18;;10668:60:3;16096:345:13;10613:130:3;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;3199:103:0:-;3265:30;3276:4;735:10:8;3265::0;:30::i;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6315:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:8;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6466:12;;6732:317;6810:4;6830:22;6838:4;6844:7;6830;:22::i;:::-;6826:217;;;6900:5;6868:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6868:29:0;;;;;;;;;;:37;;-1:-1:-1;;6868:37:0;;;6924:40;735:10:8;;6868:12:0;;6924:40;;6900:5;6924:40;-1:-1:-1;6985:4:0;6978:11;;2586:117:9;1597:16;:14;:16::i;:::-;2644:7:::1;:15:::0;;-1:-1:-1;;2644:15:9::1;::::0;;2674:22:::1;735:10:8::0;2683:12:9::1;2674:22;::::0;-1:-1:-1;;;;;16052:32:13;;;16034:51;;16022:2;16007:18;2674:22:9::1;;;;;;;2586:117::o:0;7439:208:3:-;-1:-1:-1;;;;;7509:21:3;;7505:91;;7553:32;;-1:-1:-1;;;7553:32:3;;7582:1;7553:32;;;16034:51:13;16007:18;;7553:32:3;15888:203:13;7505:91:3;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;7965:206::-;-1:-1:-1;;;;;8035:21:3;;8031:89;;8079:30;;-1:-1:-1;;;8079:30:3;;8106:1;8079:30;;;16034:51:13;16007:18;;8079:30:3;15888:203:13;8031:89:3;8129:35;8137:7;8154:1;8158:5;8129:7;:35::i;2339:115:9:-;1350:19;:17;:19::i;:::-;2398:7:::1;:14:::0;;-1:-1:-1;;2398:14:9::1;2408:4;2398:14;::::0;;2427:20:::1;2434:12;735:10:8::0;;656:96;9682:432:3;-1:-1:-1;;;;;9794:19:3;;9790:89;;9836:32;;-1:-1:-1;;;9836:32:3;;9865:1;9836:32;;;16034:51:13;16007:18;;9836:32:3;15888:203:13;9790:89:3;-1:-1:-1;;;;;9892:21:3;;9888:90;;9936:31;;-1:-1:-1;;;9936:31:3;;9964:1;9936:31;;;16034:51:13;16007:18;;9936:31:3;15888:203:13;9888:90:3;-1:-1:-1;;;;;9987:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10032:76;;;;10082:7;-1:-1:-1;;;;;10066:31:3;10075:5;-1:-1:-1;;;;;10066:31:3;;10091:5;10066:31;;;;1658:25:13;;1646:2;1631:18;;1512:177;10066:31:3;;;;;;;;9682:432;;;;:::o;5530:230:12:-;1796:7:9;;;;5676:9:12;5668:44;;;;-1:-1:-1;;;5668:44:12;;16648:2:13;5668:44:12;;;16630:21:13;16687:2;16667:18;;;16660:30;-1:-1:-1;;;16706:18:13;;;16699:52;16768:18;;5668:44:12;16446:346:13;5668:44:12;5723:30;5737:4;5743:2;5747:5;5723:13;:30::i;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3565:47;;-1:-1:-1;;;3565:47:0;;-1:-1:-1;;;;;16989:32:13;;3565:47:0;;;16971:51:13;17038:18;;;17031:34;;;16944:18;;3565:47:0;16797:274:13;2078:126:9;1796:7;;;;2136:62;;2172:15;;-1:-1:-1;;;2172:15:9;;;;;;;;;;;1878:128;1796:7;;;;1939:61;;;1974:15;;-1:-1:-1;;;1974:15:9;;;;;;;;;;;1113:145:6;1350:19:9;:17;:19::i;:::-;1221:30:6::1;1235:4;1241:2;1245:5;-1:-1:-1::0;;;;;6078:18:3;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:3;;-1:-1:-1;6074:540:3;;-1:-1:-1;;;;;6288:15:3;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;-1:-1:-1;;;6367:50:3;;-1:-1:-1;;;;;16316:32:13;;6367:50:3;;;16298:51:13;16365:18;;;16358:34;;;16408:18;;;16401:34;;;16271:18;;6367:50:3;16096:345:13;6317:115:3;-1:-1:-1;;;;;6552:15:3;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:3;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:3;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:3;7073:4;-1:-1:-1;;;;;7064:25:3;;7083:5;7064:25;;;;1658::13;;1646:2;1631:18;;1512:177;14:286;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:13;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:13:o;497:527::-;646:2;635:9;628:21;609:4;678:6;672:13;721:6;716:2;705:9;701:18;694:34;746:1;756:140;770:6;767:1;764:13;756:140;;;881:2;865:14;;;861:23;;855:30;850:2;831:17;;;827:26;820:66;785:10;756:140;;;760:3;945:1;940:2;931:6;920:9;916:22;912:31;905:42;1015:2;1008;1004:7;999:2;991:6;987:15;983:29;972:9;968:45;964:54;956:62;;;497:527;;;;:::o;1029:173::-;1097:20;;-1:-1:-1;;;;;1146:31:13;;1136:42;;1126:70;;1192:1;1189;1182:12;1126:70;1029:173;;;:::o;1207:300::-;1275:6;1283;1336:2;1324:9;1315:7;1311:23;1307:32;1304:52;;;1352:1;1349;1342:12;1304:52;1375:29;1394:9;1375:29;:::i;:::-;1365:39;1473:2;1458:18;;;;1445:32;;-1:-1:-1;;;1207:300:13:o;1694:186::-;1753:6;1806:2;1794:9;1785:7;1781:23;1777:32;1774:52;;;1822:1;1819;1812:12;1774:52;1845:29;1864:9;1845:29;:::i;1885:374::-;1962:6;1970;1978;2031:2;2019:9;2010:7;2006:23;2002:32;1999:52;;;2047:1;2044;2037:12;1999:52;2070:29;2089:9;2070:29;:::i;:::-;2060:39;;2118:38;2152:2;2141:9;2137:18;2118:38;:::i;:::-;1885:374;;2108:48;;-1:-1:-1;;;2225:2:13;2210:18;;;;2197:32;;1885:374::o;2264:226::-;2323:6;2376:2;2364:9;2355:7;2351:23;2347:32;2344:52;;;2392:1;2389;2382:12;2344:52;-1:-1:-1;2437:23:13;;2264:226;-1:-1:-1;2264:226:13:o;2677:300::-;2745:6;2753;2806:2;2794:9;2785:7;2781:23;2777:32;2774:52;;;2822:1;2819;2812:12;2774:52;2867:23;;;-1:-1:-1;2933:38:13;2967:2;2952:18;;2933:38;:::i;:::-;2923:48;;2677:300;;;;;:::o;3402:127::-;3463:10;3458:3;3454:20;3451:1;3444:31;3494:4;3491:1;3484:15;3518:4;3515:1;3508:15;3534:1019;3612:6;3620;3673:2;3661:9;3652:7;3648:23;3644:32;3641:52;;;3689:1;3686;3679:12;3641:52;3712:29;3731:9;3712:29;:::i;:::-;3702:39;;3792:2;3781:9;3777:18;3764:32;3819:18;3811:6;3808:30;3805:50;;;3851:1;3848;3841:12;3805:50;3874:22;;3927:4;3919:13;;3915:27;-1:-1:-1;3905:55:13;;3956:1;3953;3946:12;3905:55;3996:2;3983:16;4022:18;4014:6;4011:30;4008:56;;;4044:18;;:::i;:::-;4093:2;4087:9;4185:2;4147:17;;-1:-1:-1;;4143:31:13;;;4176:2;4139:40;4135:54;4123:67;;4220:18;4205:34;;4241:22;;;4202:62;4199:88;;;4267:18;;:::i;:::-;4303:2;4296:22;4327;;;4368:15;;;4385:2;4364:24;4361:37;-1:-1:-1;4358:57:13;;;4411:1;4408;4401:12;4358:57;4467:6;4462:2;4458;4454:11;4449:2;4441:6;4437:15;4424:50;4520:1;4515:2;4506:6;4498;4494:19;4490:28;4483:39;4541:6;4531:16;;;;;3534:1019;;;;;:::o;4558:260::-;4626:6;4634;4687:2;4675:9;4666:7;4662:23;4658:32;4655:52;;;4703:1;4700;4693:12;4655:52;4726:29;4745:9;4726:29;:::i;:::-;4716:39;;4774:38;4808:2;4797:9;4793:18;4774:38;:::i;4823:380::-;4902:1;4898:12;;;;4945;;;4966:61;;5020:4;5012:6;5008:17;4998:27;;4966:61;5073:2;5065:6;5062:14;5042:18;5039:38;5036:161;;5119:10;5114:3;5110:20;5107:1;5100:31;5154:4;5151:1;5144:15;5182:4;5179:1;5172:15;5036:161;;4823:380;;;:::o;5568:356::-;5770:2;5752:21;;;5789:18;;;5782:30;5848:34;5843:2;5828:18;;5821:62;5915:2;5900:18;;5568:356::o;6626:127::-;6687:10;6682:3;6678:20;6675:1;6668:31;6718:4;6715:1;6708:15;6742:4;6739:1;6732:15;6758:128;6825:9;;;6846:11;;;6843:37;;;6860:18;;:::i;6891:125::-;6956:9;;;6977:10;;;6974:36;;;6990:18;;:::i;9150:375::-;9238:1;9256:5;9270:249;9291:1;9281:8;9278:15;9270:249;;;9341:4;9336:3;9332:14;9326:4;9323:24;9320:50;;;9350:18;;:::i;:::-;9400:1;9390:8;9386:16;9383:49;;;9414:16;;;;9383:49;9497:1;9493:16;;;;;9453:15;;9270:249;;;9150:375;;;;;;:::o;9530:902::-;9579:5;9609:8;9599:80;;-1:-1:-1;9650:1:13;9664:5;;9599:80;9698:4;9688:76;;-1:-1:-1;9735:1:13;9749:5;;9688:76;9780:4;9798:1;9793:59;;;;9866:1;9861:174;;;;9773:262;;9793:59;9823:1;9814:10;;9837:5;;;9861:174;9898:3;9888:8;9885:17;9882:43;;;9905:18;;:::i;:::-;-1:-1:-1;;9961:1:13;9947:16;;10020:5;;9773:262;;10119:2;10109:8;10106:16;10100:3;10094:4;10091:13;10087:36;10081:2;10071:8;10068:16;10063:2;10057:4;10054:12;10050:35;10047:77;10044:203;;;-1:-1:-1;10156:19:13;;;10232:5;;10044:203;10279:42;-1:-1:-1;;10304:8:13;10298:4;10279:42;:::i;:::-;10357:6;10353:1;10349:6;10345:19;10336:7;10333:32;10330:58;;;10368:18;;:::i;:::-;10406:20;;9530:902;-1:-1:-1;;;9530:902:13:o;10437:140::-;10495:5;10524:47;10565:4;10555:8;10551:19;10545:4;10524:47;:::i;10582:168::-;10655:9;;;10686;;10703:15;;;10697:22;;10683:37;10673:71;;10724:18;;:::i;12222:217::-;12262:1;12288;12278:132;;12332:10;12327:3;12323:20;12320:1;12313:31;12367:4;12364:1;12357:15;12395:4;12392:1;12385:15;12278:132;-1:-1:-1;12424:9:13;;12222:217::o;13890:518::-;13992:2;13987:3;13984:11;13981:421;;;14028:5;14025:1;14018:16;14072:4;14069:1;14059:18;14142:2;14130:10;14126:19;14123:1;14119:27;14113:4;14109:38;14178:4;14166:10;14163:20;14160:47;;;-1:-1:-1;14201:4:13;14160:47;14256:2;14251:3;14247:12;14244:1;14240:20;14234:4;14230:31;14220:41;;14311:81;14329:2;14322:5;14319:13;14311:81;;;14388:1;14374:16;;14355:1;14344:13;14311:81;;;14315:3;;13890:518;;;:::o;14584:1299::-;14710:3;14704:10;14737:18;14729:6;14726:30;14723:56;;;14759:18;;:::i;:::-;14788:97;14878:6;14838:38;14870:4;14864:11;14838:38;:::i;:::-;14832:4;14788:97;:::i;:::-;14934:4;14965:2;14954:14;;14982:1;14977:649;;;;15670:1;15687:6;15684:89;;;-1:-1:-1;15739:19:13;;;15733:26;15684:89;-1:-1:-1;;14541:1:13;14537:11;;;14533:24;14529:29;14519:40;14565:1;14561:11;;;14516:57;15786:81;;14947:930;;14977:649;13837:1;13830:14;;;13874:4;13861:18;;-1:-1:-1;;15013:20:13;;;15131:222;15145:7;15142:1;15139:14;15131:222;;;15227:19;;;15221:26;15206:42;;15334:4;15319:20;;;;15287:1;15275:14;;;;15161:12;15131:222;;;15135:3;15381:6;15372:7;15369:19;15366:201;;;15442:19;;;15436:26;-1:-1:-1;;15525:1:13;15521:14;;;15537:3;15517:24;15513:37;15509:42;15494:58;15479:74;;15366:201;-1:-1:-1;;;;15613:1:13;15597:14;;;15593:22;15580:36;;-1:-1:-1;14584:1299:13:o"
            },
            "methodIdentifiers": {
              "DEFAULT_ADMIN_ROLE()": "a217fddf",
              "MINTER_ROLE()": "d5391393",
              "PAUSER_ROLE()": "e63ab1e9",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burn(uint256)": "42966c68",
              "burnFrom(address,uint256)": "79cc6790",
              "cashbackPercentage()": "1c9cef04",
              "dailySpendingLimit(address)": "257caf9e",
              "decimals()": "313ce567",
              "getRoleAdmin(bytes32)": "248a9ca3",
              "grantRole(bytes32,address)": "2f2ff15d",
              "hasRole(bytes32,address)": "91d14854",
              "isMerchant(address)": "1a2f7167",
              "lastSpendingReset(address)": "251de801",
              "merchantName(address)": "60caa609",
              "mint(address,uint256)": "40c10f19",
              "name()": "06fdde03",
              "pause()": "8456cb59",
              "paused()": "5c975abb",
              "registerMerchant(address,string)": "a6c8a384",
              "renounceRole(bytes32,address)": "36568abe",
              "revokeRole(bytes32,address)": "d547741f",
              "setDailyLimit(address,uint256)": "2803212f",
              "spentToday(address)": "8aeac501",
              "supportsInterface(bytes4)": "01ffc9a7",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferWithCashback(address,uint256)": "5cc18e2f",
              "transferWithLimit(address,uint256)": "22083bd0",
              "unpause()": "3f4ba83a"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"merchant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cashback\",\"type\":\"uint256\"}],\"name\":\"TransferWithCashback\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cashbackPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"dailySpendingLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isMerchant\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastSpendingReset\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"merchantName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"merchant\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"registerMerchant\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"student\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"setDailyLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"spentToday\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"merchant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferWithCashback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferWithLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-20 token untuk transaksi dalam kampus Use cases: - Pembayaran di kafetaria - Biaya printing dan fotokopi - Laundry service - Peminjaman equipment\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"mint(address,uint256)\":{\"details\":\"Mint new tokens Use case: Top-up saldo mahasiswa\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pause()\":{\"details\":\"Pause all token transfers Use case: Emergency atau maintenance\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"registerMerchant(address,string)\":{\"details\":\"Register merchant Use case: Kafetaria, toko buku, laundry\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setDailyLimit(address,uint256)\":{\"details\":\"Set daily spending limit untuk mahasiswa Use case: Parental control atau self-control\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferWithLimit(address,uint256)\":{\"details\":\"Transfer dengan spending limit check\"}},\"stateVariables\":{\"cashbackPercentage\":{\"details\":\"Cashback mechanism untuk encourage usage\"}},\"title\":\"CampusCredit\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CampusCredit.sol\":\"CampusCredit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IAccessControl} from \\\"./IAccessControl.sol\\\";\\nimport {Context} from \\\"../utils/Context.sol\\\";\\nimport {ERC165} from \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```solidity\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```solidity\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\\n * to enforce additional security measures for this role.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address account => bool) hasRole;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 role => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\\n        return _roles[role].hasRole[account];\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\\n     * is missing `role`.\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert AccessControlUnauthorizedAccount(account, role);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\\n        if (callerConfirmation != _msgSender()) {\\n            revert AccessControlBadConfirmation();\\n        }\\n\\n        _revokeRole(role, callerConfirmation);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (!hasRole(role, account)) {\\n            _roles[role].hasRole[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (hasRole(role, account)) {\\n            _roles[role].hasRole[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC-165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev The `account` is missing a role.\\n     */\\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\\n\\n    /**\\n     * @dev The caller of a function is not the expected one.\\n     *\\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\\n     */\\n    error AccessControlBadConfirmation();\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted to signal this.\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) external;\\n}\\n\",\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC-20\\n * applications.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * Both values are immutable: they can only be set once during construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     *\\n     * ```solidity\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance < type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ERC20} from \\\"../ERC20.sol\\\";\\nimport {Context} from \\\"../../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\\n * tokens and those that they have an allowance for, in a way that can be\\n * recognized off-chain (via event analysis).\\n */\\nabstract contract ERC20Burnable is Context, ERC20 {\\n    /**\\n     * @dev Destroys a `value` amount of tokens from the caller.\\n     *\\n     * See {ERC20-_burn}.\\n     */\\n    function burn(uint256 value) public virtual {\\n        _burn(_msgSender(), value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\\n     * the caller's allowance.\\n     *\\n     * See {ERC20-_burn} and {ERC20-allowance}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have allowance for ``accounts``'s tokens of at least\\n     * `value`.\\n     */\\n    function burnFrom(address account, uint256 value) public virtual {\\n        _spendAllowance(account, _msgSender(), value);\\n        _burn(account, value);\\n    }\\n}\\n\",\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Pausable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ERC20} from \\\"../ERC20.sol\\\";\\nimport {Pausable} from \\\"../../../utils/Pausable.sol\\\";\\n\\n/**\\n * @dev ERC-20 token with pausable token transfers, minting and burning.\\n *\\n * Useful for scenarios such as preventing trades until the end of an evaluation\\n * period, or having an emergency switch for freezing all token transfers in the\\n * event of a large bug.\\n *\\n * IMPORTANT: This contract does not include public pause and unpause functions. In\\n * addition to inheriting this contract, you must define both functions, invoking the\\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\\n */\\nabstract contract ERC20Pausable is ERC20, Pausable {\\n    /**\\n     * @dev See {ERC20-_update}.\\n     *\\n     * Requirements:\\n     *\\n     * - the contract must not be paused.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\\n        super._update(from, to, value);\\n    }\\n}\\n\",\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    bool private _paused;\\n\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    /**\\n     * @dev The operation failed because the contract is paused.\\n     */\\n    error EnforcedPause();\\n\\n    /**\\n     * @dev The operation failed because the contract is not paused.\\n     */\\n    error ExpectedPause();\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        if (paused()) {\\n            revert EnforcedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        if (!paused()) {\\n            revert ExpectedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"},\"contracts/CampusCredit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.26;\\n\\nimport {ERC20} from \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport {ERC20Burnable} from \\\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\\\";\\nimport {ERC20Pausable} from \\\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\\\";\\nimport {AccessControl} from \\\"@openzeppelin/contracts/access/AccessControl.sol\\\";\\n\\n/**\\n * @title CampusCredit\\n * @dev ERC-20 token untuk transaksi dalam kampus\\n * Use cases:\\n * - Pembayaran di kafetaria\\n * - Biaya printing dan fotokopi\\n * - Laundry service\\n * - Peminjaman equipment\\n */\\ncontract CampusCredit is ERC20, ERC20Burnable, ERC20Pausable, AccessControl {\\n    // TODO: Define role constants\\n    bytes32 public constant PAUSER_ROLE = keccak256(\\\"PAUSER_ROLE\\\");\\n    bytes32 public constant MINTER_ROLE = keccak256(\\\"MINTER_ROLE\\\");\\n\\n    // Additional features untuk kampus\\n    mapping(address => uint256) public dailySpendingLimit;\\n    mapping(address => uint256) public spentToday;\\n    mapping(address => uint256) public lastSpendingReset;\\n\\n    // Merchant whitelist\\n    mapping(address => bool) public isMerchant;\\n    mapping(address => string) public merchantName;\\n\\n    // Events\\n    event TransferWithCashback(\\n        address indexed from,\\n        address indexed merchant,\\n        uint256 amount,\\n        uint256 cashback\\n    );\\n\\n    constructor() ERC20(\\\"Campus Credit\\\", \\\"CREDIT\\\") {\\n        // TODO: Setup roles\\n        // Hint:\\n        // 1. Grant DEFAULT_ADMIN_ROLE ke msg.sender\\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\\n        // 2. Grant PAUSER_ROLE ke msg.sender\\n        _grantRole(PAUSER_ROLE, msg.sender);\\n        // 3. Grant MINTER_ROLE ke msg.sender\\n        _grantRole(MINTER_ROLE, msg.sender);\\n        // 4. Consider initial mint untuk treasury\\n        _mint(msg.sender, 1_000_000 * 10 ** decimals());\\n    }\\n\\n    /**\\n     * @dev Pause all token transfers\\n     * Use case: Emergency atau maintenance\\n     */\\n    function pause() public {\\n        // TODO: Implement dengan role check\\n        // Only PAUSER_ROLE can pause\\n        require(hasRole(PAUSER_ROLE, msg.sender), \\\"Caller is not a paus00r\\\");\\n        _pause();\\n    }\\n\\n    function unpause() public {\\n        // TODO: Implement unpause\\n        require(hasRole(PAUSER_ROLE, msg.sender), \\\"Caller is not a paus00r\\\");\\n        _unpause();\\n    }\\n\\n    /**\\n     * @dev Mint new tokens\\n     * Use case: Top-up saldo mahasiswa\\n     */\\n    function mint(address to, uint256 amount) public {\\n        // TODO: Implement dengan role check\\n        // Only MINTER_ROLE can mint\\n        // Consider adding minting limits\\n        require(hasRole(MINTER_ROLE, msg.sender), \\\"Caller is not a minter\\\");\\n        require(amount > 0, \\\"Amount must be greater than zero\\\");\\n        require(to != address(0), \\\"Cannot mint to zero address\\\");\\n        require(\\n            balanceOf(to) + amount <= 1_000_000 * 10 ** decimals(),\\n            \\\"Minting limit exceeded\\\"\\n        );\\n\\n        _mint(to, amount);\\n    }\\n\\n    /**\\n     * @dev Register merchant\\n     * Use case: Kafetaria, toko buku, laundry\\n     */\\n    function registerMerchant(\\n        address merchant,\\n        string memory name\\n    ) public onlyRole(DEFAULT_ADMIN_ROLE) {\\n        // TODO: Register merchant untuk accept payments\\n        require(merchant != address(0), \\\"Invalid merchant address\\\");\\n        require(bytes(name).length > 0, \\\"Merchant name cannot be empty\\\");\\n        require(!isMerchant[merchant], \\\"Merchant already registered\\\");\\n\\n        isMerchant[merchant] = true;\\n        merchantName[merchant] = name;\\n    }\\n\\n    /**\\n     * @dev Set daily spending limit untuk mahasiswa\\n     * Use case: Parental control atau self-control\\n     */\\n    function setDailyLimit(\\n        address student,\\n        uint256 limit\\n    ) public onlyRole(DEFAULT_ADMIN_ROLE) {\\n        // TODO: Set spending limit\\n        require(student != address(0), \\\"Invalid student address\\\");\\n        require(limit > 0, \\\"Limit must be greater than zero\\\");\\n\\n        dailySpendingLimit[student] = limit;\\n        lastSpendingReset[student] = block.timestamp;\\n        spentToday[student] = 0;\\n    }\\n\\n    /**\\n     * @dev Transfer dengan spending limit check\\n     */\\n    function transferWithLimit(address to, uint256 amount) public {\\n        // TODO: Check daily limit before transfer\\n        // Reset limit if new day\\n        // Update spent amount\\n        // Then do normal transfer\\n        require(to != address(0), \\\"Cannot transfer to zero address\\\");\\n        require(amount > 0, \\\"Amount must be greater than zero\\\");\\n        require(balanceOf(msg.sender) >= amount, \\\"Insufficient balance\\\");\\n\\n        require(dailySpendingLimit[msg.sender] > 0, \\\"Daily limit not set\\\");\\n\\n        if (block.timestamp - lastSpendingReset[msg.sender] >= 1 days) {\\n            spentToday[msg.sender] = 0;\\n            lastSpendingReset[msg.sender] = block.timestamp;\\n        }\\n\\n        require(\\n            spentToday[msg.sender] + amount <= dailySpendingLimit[msg.sender],\\n            \\\"Daily spending limit exceeded\\\"\\n        );\\n\\n        spentToday[msg.sender] += amount;\\n        _transfer(msg.sender, to, amount);\\n    }\\n\\n    /**\\n     * @dev Override _beforeTokenTransfer untuk add pause functionality\\n     */\\n    /**\\n        function _beforeTokenTransfer(\\n            address from,\\n            address to,\\n            uint256 amount\\n        ) internal override(ERC20) {\\n            // TODO: Add pause check\\n            super._beforeTokenTransfer(from, to, amount);\\n            require(!paused(), \\\"Token transfers paused\\\");\\n        }\\n      */\\n    function _update(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal override(ERC20, ERC20Pausable) {\\n        require(!paused(), \\\"Token transfers paused\\\");\\n\\n        super._update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Cashback mechanism untuk encourage usage\\n     */\\n    uint256 public cashbackPercentage = 2; // 2%\\n\\n    function transferWithCashback(address merchant, uint256 amount) public {\\n        // TODO: Transfer to merchant dengan cashback ke sender\\n        // Calculate cashback\\n        // Transfer main amount\\n        // Mint cashback to sender\\n        require(isMerchant[merchant], \\\"Not a registered merchant\\\");\\n        require(amount > 0, \\\"Amount must be greater than zero\\\");\\n        require(\\n            balanceOf(msg.sender) >= amount,\\n            \\\"Insufficient Campus Credit balance\\\"\\n        );\\n        require(\\n            dailySpendingLimit[msg.sender] > 0,\\n            \\\"Daily limit not set for sender\\\"\\n        );\\n\\n        if (block.timestamp - lastSpendingReset[msg.sender] >= 1 days) {\\n            spentToday[msg.sender] = 0;\\n            lastSpendingReset[msg.sender] = block.timestamp;\\n        }\\n\\n        require(\\n            spentToday[msg.sender] + amount <= dailySpendingLimit[msg.sender],\\n            \\\"Daily spending limit exceeded\\\"\\n        );\\n\\n        spentToday[msg.sender] += amount;\\n        _transfer(msg.sender, merchant, amount);\\n\\n        uint256 cashback = (amount * cashbackPercentage) / 100;\\n        _mint(msg.sender, cashback);\\n\\n        emit TransferWithCashback(msg.sender, merchant, amount, cashback);\\n    }\\n}\\n\",\"keccak256\":\"0x478824c2332289bc00f65ed40f149ca33a02345c5ac85daa5e458a5db660ef57\",\"license\":\"MIT\"}},\"version\":1}"
        }
      }
    }
  }
}